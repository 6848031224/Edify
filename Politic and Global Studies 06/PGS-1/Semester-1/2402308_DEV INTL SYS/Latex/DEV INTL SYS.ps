%!PS-Adobe-2.0
%%Creator: dvips(k) 2025.1 (TeX Live 2025)  Copyright 2025 Radical Eye Software
%%Title: DEV INTL SYS.dvi
%%CreationDate: Mon Aug  4 09:39:56 2025
%%Pages: 15
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMR17 CMR12 CMR10 CMBX12 CMBX10 CMSL10 SFRM1095
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /Library/TeX/texbin/dvips -o
%+ "/Users/chantrix/Desktop/University/Bachelor/Politic and Global Studies/PGS-1/Semester-1/2402308_DEV INTL SYS/Latex/.texpadtmp/DEV INTL SYS.ps"
%+ "/Users/chantrix/Desktop/University/Bachelor/Politic and Global Studies/PGS-1/Semester-1/2402308_DEV INTL SYS/Latex/.texpadtmp/DEV INTL SYS.dvi"
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2025.08.04:1639
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 615 2022-09-22 08:39:26Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.41, 2021/11/16
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
revision 952 gt 
{
    systemdict /.setopacityalpha known not 
      { 
         (\n\n%%%% WARNING: Transparency operations ignored - need to use -dALLOWPSTRANSPARENCY\n\n) print flush
         /.setopacityalpha { pop } bind def 
         /.setshapealpha { pop } bind def 
         /.setfillconstantalpha { pop } bind def 
         /.setstrokeconstantalpha { pop } bind def 
      }
      {
        /.setopacityalpha /.setfillconstantalpha load def 
%        /.setblendmode { pop } def   %% works again    hv 20210825
        /.setshapealpha {dup .setfillconstantalpha .setstrokeconstantalpha true .setalphaisshape } def  
      } ifelse
}
{
  systemdict /.setopacityalpha known not 
  { 
    (\n\n%%%% WARNING: Transparency operations ignored - need to use -dNOSAFER\n\n) print flush
    /.setopacityalpha { pop } bind def 
    /.setshapealpha { pop } bind def 
  } if
} ifelse
%
%%<bool> .setalphaisshape -
%%    If true, the values set by setstrokeconstantalpha and setfillconstantalpha are interpreted as shape values. The initial value of the AIS flag is false. 
%
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/fill@Dict 30 dict def				% the fill dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/addCoors { 
  3 -1 roll 		% xA xB yB yA
  add			% xA xB yB+yA
  3 1 roll 		% yB+yA xA xB
  add			% yB+yA xA+xB
  exch                  % xA+xB yA+yB
} def
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (original)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
%
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  10 dict begin
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
  end
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  40 dict begin
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
    { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
  end % userdict
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  50 dict begin
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
  end % userdict
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  20 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave 
%  gsave w neg h lineto CLW 0.5 add setlinewidth  % test für border beim Pfeil
%  1 setgray 0 setlinejoin closepath stroke 
%  grestore  
  fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/ArrowT { % like tikz
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
  w 2 mul /w exch def
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
%  w neg Inset neg rlineto % move to x=0 and inset
%  CLW SLW
%  1 0 0 setrgbcolor
  2 setlinejoin
  stroke
  0 0 moveto
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
%  5 dict begin
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
%  end
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { %  on  stack \psk@dimen
  CLW mul /a ED % save radius
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid {
  40 dict begin 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul         %	\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  dup % run loop two times: lines and labels
  { i dx mul dup xGridOffset add y0 moveto % draw the lines
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  /i x1 def 
  GridDX div ceiling cvi 
  { i dx mul GridDX mul dup xGridOffset add y0 moveto % plot the labels
    b 0 gt 
      { gsave c i GridDX mul a cvs dup stringwidth pop /z2 ED  
        w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse exch GridDX div z2 2 div sub exch 
        rmoveto show grestore } if 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  dup % run loop two times: lines and labels
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  /i y1 def 
  GridDY div ceiling cvi
  { newpath i dy mul GridDY mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i GridDY mul a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse GridDY div b 2 div sub
      rmoveto show grestore } if 
    /i i h add def 
  } repeat 
  grestore 
  end
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /RotAngle ED 
  RotAngle Rot /RAngle [ RAngle dup RotAngle add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 4 2020-06-09 08:32:19Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 249 2021-09-14 10:22:55Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
  4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
  end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  1 dict begin
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
  end
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 601 2022-09-08 19:21:27Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2021/10/01
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
12 dict dup begin
/FontType 1 def
/FontName /PSTricksDotFont def
/FontInfo 9 dict dup begin
/version (001.000) def
/Notice (Timothy Van Zandt <tvz@Princeton.EDU>

This program can be redistributed and/or modified under the terms
of the LaTeX Project Public License Distributed from CTAN archives
in directory macros/latex/base/lppl.txt.

Modified by Etienne Riga  - Dec. 16, 1999
Modified by Etienne Riga  - 2005/01/01 (er) to add /Diamond, /SolidDiamond and /BoldDiamond
Modified by Herbert Voss (hv) - 2008/04/17 
Converted to OpenType by Marcel Krueger 2021
) def
/FullName (PSTricks Dots) def
/FamilyName (PSTricksDotFont) def
/Weight (Regular) def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put } for
dup 65 /BoldAdd put
dup 67 /BoldCircle put	% 67
dup 68 /BoldDiamond put
dup 69 /SolidOtimes put
dup 70 /BoldOctogon put
dup 71 /SolidHexagon put
dup 72 /BoldHexagon put
dup 73 /BoldBar put
dup 74 /SolidAsterisk put
dup 75 /BoldAsterisk put
dup 77 /BOplus put
dup 78 /BOtimes put
dup 80 /BoldPentagon put
dup 83 /BoldSquare put
dup 84 /BoldTriangle put
dup 88 /BoldMul put
dup 97 /Add put
dup 98 /Bullet put
dup 99 /Circle put
dup 100 /Diamond put
dup 101 /SolidOplus put
dup 102 /Octogon put
dup 103 /SolidOctogon put
dup 104 /Hexagon put
dup 105 /Bar put
dup 107 /Asterisk put
dup 108 /SolidDiamond put
dup 109 /Oplus put
dup 110 /Otimes put
dup 112 /Pentagon put
dup 113 /SolidPentagon put
dup 114 /SolidSquare put
dup 115 /Square put
dup 116 /Triangle put
dup 117 /SolidTriangle put
dup 120 /Mul put
readonly def
/FontBBox {-572 -743 572 743} def
end
currentfile eexec BAB431EA06BB0A1031E1AA11919E714AC69FC5B91315E2
3949B468EA8965C09E14B93FD8F0A9A9B4A0240775693C371C9F5E8CFB4752C5
B8C3907EB8B475C65DEE88EC0510BC599D0660C41C842A3CCA793376ECDB36BF
799EB8631B5A08846013BAF4256252AF16B24E3BEE4C45F8AE9AEC40351B49C3
CC0B1DFA717674CDC7A3BEA5CE689121348DBBD82720A92C2D68DB27F03F105D
87587E74605E01EDE24B0539FAACD5311070E7BE0BDC57182DA408ED060B7B6B
964AE3EED6C8F348F298B28987B635D1332B77CC33F0B6BF682193B93CE93416
64F638070894F299603700A95B876A3FE5CEFD5BD19928E5DB60E0FB25969A26
05A6651F04B60470D0CE8E37C50EF9350CE0A4EA9F5251F0E9A1B7ACEAE4DFF7
40578E61DA30D0C9067954E23DA81539D0601CCB3FB78040200CE8A1B1E2B4BE
E6BA8FC9121F04EB916D5F9D98C77AE10A51F451B440230C23077251E29FC6E4
2844FC17F11EE282266DEC3A15C96832E595773ADA1A48330AEE455DC4A2805A
C7C7CA085D16113F30AF3EFCFFE079C45CB512DBF81EBD6137314545CA6CE891
19B42A3518E28989CA7DB1DB6F28ED3CB0E9F227A023660A46D14CF05E197E23
3015D9046635F59924C00F5EBC3561132B94C23E91D3AA1EB997B9F486C8793C
E2B8B9224C2C13AEE4AF9AA6E2FF96FFE84223ED1A902C38AD739E0C863A3A37
0482E2F28EB620257113D8EFBE63FCCD181158CC92CFA474170798746B73808F
8D4CB2A16B5BED0ACE4673AACD1484A8CF1F437F58D478A2CFBDA394851AE87F
E8E488302B346131EE903FFF22B882624BD2EF1381761C1FE4BAD1E701CA9C4F
F34AC1E9F9EC27E673FA78703FFB2432FDCD62AE52DE02D55580636F347297C4
A74D04EB5FF11D31D3D04EB580E6C54F88A817049249B0749FAEBF78C4A3CE4A
3F375E7C57D35D8CCA7810BFC7C0F4D4F14F8A29EF000D2BA97AAB26D48D50D7
CFA8E3586105575D14DD80F3D2022373F802C98A78E465F7688C9952848876D4
D7BECAD0FAFBA4674944BEAFA75ED8A87873439FDA03B482FF60B84007FCA6C0
1A04B7C8BF346E30BB6D838EA08FAFF3A3D331527459C665264B9E07A7262419
E0AF9F0AB9897891BF0CB656FE222587FC8890C3FF9D848ED557732CBD2865E0
F4838A6C6E5D794F7781359855ABBD8B2BA63EF2190D930D20C74E9088BBB9BA
62865A174D03BF90A0959079C28DA220598AD0A960C66697A49513D3F152C306
0A9E3133F750EFCDD43E34492A65321EE3B08F904968BB642D3E46DFAF2697CF
52589695642631DEAC79C3B4DD9DE61885901D9465B538643F60FC1B46D83DC4
2D6AB7AEF088D43531C4CB5957A74FCEA04E4BB05B5AF68BCF316C62F7A26CB7
88C6CCFC7859DB9915626FEE3C95F6FA3777B3F6ACE5271BF3309B0A41AF9853
5866F4EBABF5CBFA2D3F411BFB2C3B66962102B183B281FABFF17CBE2A744CE6
A8CB6E1B3D624A68104A7E43F20483622B9C93D8803D71C5ABD930DA44DD6177
F6F411619A130954C54D3BDC24E66A4EE2B3F6C7EA40167FF6E21CA13DF3E903
3E88F8F46C5CDB75E816EA0235669625A772779079CABC8DA76AFBBBC1C15EF3
5695EB0FD46E34C3FE121CC29F7FDA3384B0F1292087CBCB9CBD7B2377AC0F76
5BE0CD3485F2FCD3C6C0012125C273B48900E5200008B21F6DB9F4D4E8027E7B
34265E1FFBC9666A2678CEBA46AE908BDADA630B135683D4F66934702F939912
EDFF3EE524B38F25A0E12239EA471DC4A90814D38747EEF125FA30BBA9998119
A1499E6E6BC26ED39814B64D04D500C2E14A062125A7E4AE9985BEDB6C4A800B
D37D8F13274B28F86D73600A165214E1A8F0F787C92B3ACFC274A34EE064732B
BAB298F0DD452B3DA4E230624FA5296C7ED8A464C5E7D31E0A9C88FD767D4C6F
E2348CE16CAAE803DBA21AF5B8A44ED8B92ADB9C07D422878C63EA6163DFFA5B
FD8AD97240D760FB6667DF08A0F16FB66B2934E64A39C0D82535FC1ABC3C28F6
DD83851928AE495312AFE7F0B7C3D0990D7725B54B0D8644C01CF2BD29340E92
FDCC5D221298669CBD1F842A1BF45D59D4BCC425E3D7FECB69AEF5FF54E86B80
A6011AA0ACD1D286F7BD2CC6F995355E214BEA9DA0696F3D436BAB29C2328173
4661158DBB87A777A8C0FECA5B1DEC07197BADE6B65EBC7152E119BD58204353
4C4793FA4566107EFFF912A0E03255C11824CD079923F7296DB156A8C9134BF4
E573795C7C720A3CDBFF693602A141D436B2F7495B01F6FBA43ED1CB444AEAD2
400638034AA4D95EF5849E61EF2068A4848A27FA16EC8931456000E61E1181BF
545AD271F9D10C60C6AE8616B12998B08270B9E29464DE2725F61EC431C7023D
FB012FFB2DB2EAA1C61C06519BCD8114331FF644B79E9E96E21720B38098D513
59BF4CA62716A9289C555C1B5C05D68F762B5B2E0B9BE7F67D9EFB20B8A0A898
4DE73C07853DAD10A8805E5844A36027E2AECF4F10CA66BFAFEC17DD1CC93373
547071168AF5018B0B6A40E606207ECFE146DE6F8881F969E06207A973DF290D
29E325B6D59F363A5F4105AFDDF24CD4FABAE1B5E784638F3EB2E67C88879F69
00101C3F6DF95D7F81E6E3FE732DCC175F1FEE41D87120F52AB5EA54FD2E1666
CFA5D665F9B97531D74B56CEB8A9E1417A58C1790ABEB68F2F1B49EEB34D24B2
855294A892EC5C92D090BB460AD8844E85E25094B7CE117F343A856F27CEEB36
1CC7AC29D4048E6ACC5947AE7FB937807AC29E65353D20A57E461AC33EEBC75C
24068278B586B33A5E534B1A9ABAAFF492250074EA4CF3EF0818D8F0BA0C7428
40BF46DFCC9711A0420413D0667C7361C8ED428BC510616C34AB28BCC9ABA6F2
43F08A2FCCFC5D1BAA77AE90BF0E296E2C3A99268D7906AE12CDCEA5CE8B5FC9
5A75526CC0B72C7E122C2ED67153BC9AE380DF04FE51E7B0C5AE4363D95DC730
AD0EF34542C179668A9D5807AA22256ADED921E8711E673C67CB5086D7563C98
2A6C681813E07A8E7440FE562EEF08661E1D9CB5761595B515DEC347F0DC84AA
1B3C272792F2D9B4B11C5EA50F7584C7D931BF5BA1A39F635C87CEC31BD22D64
10F7855D66EC86193FFA19ADD7880BCE5588D2322071D443F47D6B4F3F66CE68
4B87D99A5A0D375535D153353DA6E154FF78F458A671CBE1E7136C16435BF244
6E60705C79C82EB5D40934AD496FB08999EFC6E52E56C0106E39603F25D3B946
A7850B4A4EF56B1E5CA32021F191236EA0FB315DC37D708115765F85B668D051
D49167E374DFA9078D128E745F1583EF885F6614D0D1CE1F3F27571B5C68451F
38BDD4758A54A3C6F8ADB3DC20CE95DA5B22C77227CD8EA53C51A643250FA288
4DA7B6F3D93EA1C82B6639B6090352F6E4ACD6A478701D88F8591F71ECB15CEC
FE6FA0C4C049FE9F04612DEB944271F1EA167B2103D69C11E5B6C66CB8C859FE
8DBF7D2E4B26FDE68CFE085B61212906AB7B4E4DC2FB44E8B035DC6938B09632
5C2AFE3B1742756E1DDE8E2D16D957B07713C650928ABFD08BB5BA216086D699
797884E3D06F0096BDE68F929F9FCC4E5819320BF62AA75686A8EF7A11B33281
2477A82B9B0D3B71E8AD3CD41388A69C33B7A4482BF2345419DA669BB7544636
CEF7C14F8C55620724B05B7EDA33584D9CA46B697EFE6CF01B6152DAF28F42CD
DFABA3788B04D5A3AF493625E3387AFCAFE7EFDC62F4A31CA69E7563ECC5F919
91763C850EE7F7B6A979DB2955BA8E4BCA4039D2F083DB3B256F68BB34624CDE
2A745010D76C85300691A0DABBE33109721FAFF7C9BF7D9B2E0F1F9CF5C76676
02A9C95488976ED8956EC9C1B9A9F3CE3B0F7E2DF387DF831C855D9E21908376
BCEFB52FFBA0AD0F9B56CE4043643BC582750110B16399281C79183A8D693AD8
A961C6DE94A882D27A0D9806A5D0ACFC29180CC21E375BA98DAA4C6043EC4532
937C4870CB65365D2CF81C66A72841E189EE4BC12F8882AF0652D0EE3DA63D1F
010248A498F3809036D1FBB712F2D78CE71E0C9AA2BB3A55094E4FAAB574A474
5B153A3D4AD4ED347819033CD288FAD39E440D2FA03630F9529E50BF1E6A51CB
309A34CCCEAEE87C8B3DFDFB81A9B3F0D36DCA6AC69588F51F29BB83015E3244
5C666CC22DC85F7A86FD1D0311A8D8D1F399F87B2859E66C9432E8C14E04585C
A01642BEEAAA975AE4D7977D40FBC85D4B8F40646721A9F38E916C226EB2C045
04EEB6027C835EC0F0F8091EA0250404BE75563D44B40A5D67C1A122E9E9DF7A
5692F8902FDAEED37EB2C430AD36E021CF56CA560B77137710090D8685624CAD
9E6BFDF5BB2FF6147A65F164ED0490E1126D67FE1A93D5E77275FA925CE8666B
E8FF666F97E3101881467A955FDC9864C9B85E943918D4C22F84391D35DBBD14
2EE39F130DB83BA304C931113287A3F7CA042128135D9AF672319B1C3C1FBD59
80BE72F051D6A6FC34174C461A77F000F446E594CE046052A571505F0E4922EF
04A8185830D6D47E006F893973CE8740FC82F77CCD5B2CEF7DBAA9D2A0EFBFA3
2B0A73412A362977B01FCDC95FC8E0B920D884FF7E40FE9AFDB683776B95487B
F096B4BBBA2BED724ECE2CD766C8D83E28FD65924942AA4A3064AC3D5A322D86
3A4D41DBC2F5C6E21C2184CEECE1101A10F8290CBF0D4116EA1C1DB8988785FF
E50B066A4C21E99AA660872A5EEAC307C7794B303EE066C57594AE2389DBEA5E
85CDD9D314CF686811C2022E8E0EBBA0B699EB0405FD2426EA4D698CB4757B6C
53E65BB5D42C65C7A9DA515DA23CB3834C89F769154447BE2D92229016235658
4F40E982A14EB4E6BACC81313C8E0A74A19FD184B1364CA275FC6A62A8709428
BA35305F02331212B45B9268D582A8B638B430BD0A51C607D4C4FD862F0E591C
1A1273650BBE5DA16CE10C98F5209A7C998877BE8F57DEB4D9AA46CC2EF71588
0EDBD79F25594D516AD74C54762FD393D4810EBC8AAF10F821DCFE8D503B37D5
6AF14F0FA57DA3A3365EF38470C1F0BCD693378BA20DF34D263165841DF96F90
32FCB81A44BAF77D3C294697CC8CC971B555F94E768A275A154D63E71A1D6C67
CFDC729E86FB9315B9234D2AB1D6529BFD0D4C852C5438D368B350D8420DCD34
4A164EAC0AE99AC9A2D07A1F77D2E68255EC3F7448F10DABF969653D21590661
2B1DE5DF11BEFA41CECFB00C9A6A7AE3808009E41E2B933C6AA50E1E9BC8AE00
651C8AEFC9FCE6E647FB5D6032000CF87663510D97C12386227E58DD71FD4228
A070BE013F86155C46C8F96D3CF1DE07D60DA3D0E05C3B4A6B5FBAD168B06A50
30738754199245C8AF782F76C58A8F638A2D85CC51309C866729297E3CFC075D
6F9ABB484C5D1D307E06D6ADEFC769E5F51E389520288843F373B71B233E8B96
E59A7053D1D7E17972EDFCBD700A001EBE7759818EECC03353EB0B990EE6DA34
8C65B5092EF565AE325B00DFA892FF2E7217990F6020AEB57974D38E31F97183
FFB436B7DD8C18A80EB7D43D1EFB9A8D3EA99E77F65AD1443AB10857C44B7AB8
2EB0BE22CE0CDDE525B9DE03251E192A3B436C3907AC59EA40BBB63A5A7DC56B
DF08035260ADE398AD7ED78F895AE0CE0ADC74F4BCF4FD9ABEEBE132A537D788
B884084A69BEAD6791D7458A0BC58635A1576F368FA8D2D99DCB6C31BE97F432
5FF313DDA4B7411296716D32049D31F8E85C7D4B4DAE656AEFF8B7B8C1053A57
F13B93F29800E250C98BA58B6061AE740762F9202122F156852A326C13F3675A
4FE680CB4FD1B94C875840A97F2D14D6C1EFD4D4C37F39752572225377072C53
6854A002922441AF733B6F90EFF39E37E1605AC5A3F4B45F66DFC2357B57CF40
263D66A21EE0F0C1D1A0E4BA12454F9A252CAF55B46F5A907DF9D94650DA1D5C
4CBE7E65DE6BC996F52CEC6A02D4D987D99F7B66A1C786E9463A5628A50F5163
02A7F1CDDA1FB3337774AD640B02D504018E7C11267BEB7F51B8AC2FB3326EB5
1EF125B3AA855B3AF7891595077B9FD5960896A022BC3CB4F97F4CC175F09B81
128452C576CB26479E769DE0B75150360EF0C2AD3530A8A3B0C61005BD13EBB8
4F6A707A8D1565529BC1ABE78FBFBEBAB170ECD6908CCD31FA33368E485DCBF5
24DAC34619A38FBDA43C886FC6B4D58C7349C6D577D3AB8DF830F3DC3E06BE4F
8D1283533AE54551513735E278DC928869953AE85693870179055B8D953A8062
0339D4FC9D3DCE68C408FBDE261FAC68438ACFFC7E0F12168B91ECF56ADEEF93
FF6A2D2AE5D35CB0B49BCDED51EF5B16B6A7364D38592BE0EC092C66309F6D0E
E9E73D7AC69A9F9F8C83B5D7352E92D27751D149F552DF5ED5825A79507C5C8A
725E19E744631C96C74EC15829092BE11AB890C9AFBFF608B4F3B5FB42B29F1B
DA5436480A26657A2EBA297FD9933FC6B0071E62551C1A6398F82B097726E06F
4EAC8ECD5C4B316AF63B64A131F3EDFC50F1141E56EE81CB44A03B0CE8B6CC4C
B9E6DF9F47E957E47D4C5C51508C0825537EADCE33E9C3432AA0C0E7890FCFAA
54E1D95E922165EAECC89E7E18A7E36A269D68D918B4E64246066C88F009D478
D17DEAD4CE93F288531DA3CDD4F0B040CC82544B95E6EA26F002357CCF6E3D7D
F52FF5C84DB56CAE8F64D9DE498A54C28558E34F2EBCB8CD3F3F2AB2531D3D74
6A1DC97F93E312DC04158ABA06E9E55BE5A8DE5E0F3D8087188C8055B4C6B7F1
AC373AB1563F756E269BF3D90BDFB9EF3E62E610906E1928A4FF14665EC4DF2F
1703DEDC813E3BD7EFC9CDAD47E0DAF19D2C0701F2C027AE2986BE7715E0B0F4
15D4501FC252AB0608A9BF79FC085AE7F9340C073817296A900E1AB7033D4FD5
21AB67D4AD5E29DC4F20283A7864A4D6CA60908CE2D544E7C3C894A5635FDB42
989443A0DB0AC9281BA74DD27B1B573911DF90AE01984A865A3DB95125594779
C77DFFEB5699712598DD86F94CD032D14E0B71A92890D3EDE1443A3E30968AC6
33A004ACE18A56520853F64A4244C7B479530A8C5D18E47B38D67BB508A58710
6B5753081BF59EDC0793542987F1BC26553DC19CFC6EF456DA872DEAA95884C5
D4D8E503E6BFCF252AA8E144F2A24F21A08CBD05C4F65C9A9636B102ED4ED535
2A3C0A4FF4A039C3ED2C9E00C3E680C4A8FCFFBD90E871E5075FEB7661340E96
44DDBD719F2D4DD690457568802749D1E6A1EB15F64A85414B1680BCE311E8AC
1C08758B6453DD440D8A9816EDEA14E09224144E91276B842280E04A0BBA4E68
CEC5A9603A7F56551C2B11DADF1F4810C734BDEAE930B5DE4556DA67981B820B
CD2BC5A0FB8D8790D2666E0AE5558B1D2200534E83F7851F3D9482A2E8908F92
3BA87358A66968605B3D53DA4AB1D93389BB689B0822526D9F240952001DD054
09B9BE40559FA3FA4F216F022D50C408ACB34021AAE5F2B257DEF13A25F02701
234CA72E44287FA9D88D7EF4F768C35A65CDA6B411323A501BF3848AFE448DAC
2240C6CDB5208EB259D89A8F1BE43B39F911F55D88B5822E443C898E7ABC7EF5
B3953C2EC6DDAF174DCED0BF9353A2713774A8DF9A9091AA553D30361C9EA580
56F4993B29EDF2D3F3F1D6DBDB31728A84CB10019CE7407FE4201FC9A9D70F9E
8FF56B5CE83D2810A507AE941431A5D9B513A6F55FDD452D6309492C76D9C5C6
DD9D8F6CCD27BD71AFFF7FCE5D34DC355A066BCC3C9282EC971521260CF0E12E
936517B05ED0108AC13A671654A2EFD5FB71109B16B3B4274BCE4EBD624F288D
9E90D28D18D27FE4628444E76D3EEA619AE9476D181B4AC774AA62BC6D8AE5F0
84F90982D5EE1D24AFB37703671B2493AFFA4C51245086BE865627AE7D0E7759
179D509827104F840BD2C720F35D46D9C8338C0F8C03ECAC14E9BF044A04A96E
177D1C5CE74D34AFF22F3937F05A1B54F46CE9C5F2D60907DB971F5B2F8E5B9D
3ABA4ABA144209E6845B85A64F3A97CDC9B6AA5BD9E68F726F511255CDD9394C
0A0332C27139192F0C5D79668CA0CC0CBBB14E4CDD707F11F048CD6E0756D90A
F2EFCD882A296CF97148364A31FE8D7B5250C8BBC7E9F39EFC55B4662EC31535
416F2F90DDAC955FBB297FD4829BB73079FA91012386544B98E65BABA975C754
36B64848E3903D03C59BE0DB94E12E600E82A72EDCDEB4AB2260EE95F46568EB
D0A7002D21C9BAE538CF8A347A2751868343EE4FB3730984335FB2B5B88DFEE9
66A8062C26E4B834F568CA6164D6FE9AEB126502B943DD390A50B93D1CDABCD3
C96FACE03115D56C6BE19F06CF7DDC375238E238B448D27D64FA49ADCC0A5B24
AEF014B5D48F6CC493AD69E74DF47FEA376C6EF4B14C2FB71ED0F42E09F1651C
EAEE97341F26A6591B83FE723C448AA04AE504D6C34BCAECD27DE4B247678C7E
C51DBF53850EE7E615C7A01BC705F714B7B0C80B7AB79C42C24C036C6718E5A3
6E1475F07D9F7035866A73B4D0A67807A03FB61352F73A349AFFE3CCF566F457
6A62FA32004F3FE6A15E7B25C6E9AB2D1DBC9964E6903AEB408F09A0427933F3
4E92753419A9FE79513A2E39FAA295A92292D521E3A95FBBB77AD659D4E03D2B
39EE02738A10059514A8B51A35D3302C25891B90F74EBDB362E1017C676F0A0A
9CB67C9794A27FC7F0ACD189AE59C8A75A5E9BED84A5FB6EE5DC1F74A620E559
51D8C5CDDC4B37CAE2AF70C48B6C306BE826EBE8D22DF714D1F2FCA10369A266
F5DA86D65F730262B0035E5FF68817C93CE0FBBC201B593D955E40C99E235D45
7F70F497A8A11748AAA70FEA09AD8F5BD1A01E06D56BB6059DBEF8AC8AC5FB0C
59B5CA3C447022EA6AE6F928DA7C9A6A1F322C5D53CE905829C41408CF7449C2
69FF41A9B83869D7F230C78871C22933C991EAE40EBC97D8DB082B20E4895E49
6D6EE9D22FD9B395CA79073C08C0053E3C26124538544D9C68717076746A8D72
7DC34AE353D29983338A2D1998A0D62BFC296E433A8E48CA90B999B298609587
1164C2A65BC00D0F124A8EACCCCDA7A7F65D5AA4DBF70A273B6CB918B00F6ECC
0131BA9461BFC53357E09E0A3C615E79A26261D83F71B944DAAAE74A4B7484AB
D22B4BB40D4E9038E721EFB5F672796A3C961C298B29ED896A27E389D134C21E
7BED9DBB0FBB3AE2ED4A661992BCC8E4976F842785431AAD804360FBE8A134E4
3CA9D26F8571E18D0F27F70ECAF659A99FB7955E0F4D8690447CA37F42A05D15
E1D6559A1C95CA424A643DD58D0416A374091D94CD7A48859EEB4A461A6A436F
D07DD5A94E7D5B033D2AD99FDA4E7373A1D6CFD11DE94DF6537F25F5CFA1428F
9A126E21D819AE1A044510186FC8A9D51C20D922F3279A85E31C1F34B6B240C3
000775B140120C6E697D7BC14AE22F87EC6885C3CA40E718BAD7688C8A0B3E9F
49652FE7D0DE406B2EB70F039AA8B10C7601C4929B2971A9A3CF98F52F9FE122
CCD2D944BE6F68EF6F4F8EBEF51AEB1DFAC87C164F94B36511BF120D126D6824
01736A019ABF0BA4355854251D381828F2D5C8460F3B066EEA447009C01DB22E
33764CBBFDC5C74CB881098E7586725777144FC38DCBAB71413A26068EE3EC6E
53300BA5BEDBE53E5FD61E6D2E390C7E1D82454093264E8A2013AA0C91058031
B52A08D996CF2C82993DE9497AF91D4AF8C99E68577589F98564AB36FA448901
E671920A8DEC9535AFA9038AA1D528C4B31ECC27A505A5B83E4ACA119C6D3BF7
1AD9B21318030B2F1F69F132E3DBC5264A4AD516AD4736CED6E8CA4C3352C78B
2B836CA994A67BD63576593FAE07433051723DE3A67FEAEDA3CF10F66F7DB936
D96BD0A813A5C40B144EE897A5CC701B0297E190B6999EE9808A54F86AE2C05B
0FC4056944066CDBADCE78A0524D6F190B155120749CA84957FEBF447B748BC6
27B3AEE460D4D5FCF042B7CCF4A4DC92110AC09B16669CBFA4CDA713606FC086
97E8EF90EF2BFC8BF6C811FBEA5163C68B95C0B65EA87B9D12942EA0DE78FCCE
9DD86341497DF3F0CD388BB386658FB6D774A46E9857E0091F3B2C6E016BC24D
037FADA56418D223E672609C891E32E96BAEB77C7C568F26FE03B720F5F2D875
9F1C5BF185C4B1DB2E6BBA48F4BD5F6457D92B701E7DCDF0ABE154A9CDE3BC17
8F1F1CF521081036019C20E3A8AA6958D08C3EA3275CCE2F96F0FDACCB50ACB9
37204C55EC41CEDA3AF577FB778E606C7C2EE814E8D3E1C250DE4D3E587AFDFF
A1266218FC1D9A386D00BE86EB2433531F5A978031775862254994315B01C937
CCAF1C5DD69F96F5D64DD288087639B02BDD29F9B96C5B4F525DDABE245371DD
4717AC198F6477E1A2E6CA5CC2AC20FC94314212F5146721FF639C6CEB6936DA
A7ABE5348153D0DBEC6F96F61B6B7E53DD82107EB85F5D2FD094D82F4F446CEE
B64340FCE74AD83B2082952ECA69C53ED64B6F03FE3F54695FEEB8EE1D61C6DF
87F7214F97C165F4962E5B78500E7F4E684AD4F4F575F06FB275D449BAB97B06
BBC205D8FFE660C682A8CED9E1F7907214AB2E6BC7C830885EA32605B069ACE8
66EBFA95DA16774EDDCA73685D1B145770BABEBCFB3989284B27B7E698E12064
147A2EF3F2883F85C9C0E927DAFFBC9450E1B6E918726DD37B5CDA55E6D0D8A5
C3B5ED376F4772DF45D45C4CF18BEB4811CF1B9B3D920BA4A98A80F8DABC91BA
362EA6A74FA33DDF518B09564FED9F04D4312CD988EBA55DFD3145438A223943
488699B3D16846B51F2BB650790EB63BB9ABB2B3EE27C62B1B01FBA662B70542
DBB61743DC569337082176ECBAD417354A5F900EA0BB5479162ED7ECCCD71AE8
3B3EE296F3D14D289B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%/PSTricksDotFont exch definefont
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 919 2024-07-10 18:31:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15a, 2024/07/10.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not allowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2024 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
      pdf.dest.y pdf.tmpd mul add
      pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
            pdf.count 0 eq { exit } if
            counttomark 2 roll
            1 index /Rect eq
              {
                dup 4 array copy
                dup dup
                  1 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add sub
                  3 exch put
                dup
                  pdf.outerbox 2 get
                  pdf.linkmargin add
                  2 exch put
                dup dup
                  3 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add add
                  1 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                  {
                    pdf.currentrect
                    dup
                      pdf.outerbox 0 get
                      pdf.linkmargin sub
                      0 exch put
                    dup
                      pdf.outerbox 2 get
                      pdf.linkmargin add
                      2 exch put
                    dup dup
                      1 get
                      pdf.baselineskip add
                      1 exch put
                    dup dup
                      3 get
                      pdf.baselineskip add
                      3 exch put
                    /pdf.currentrect exch def
                    pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                  exch
                repeat
                pdf.currentrect
                dup
                  pdf.outerbox 0 get
                  pdf.linkmargin sub
                  0 exch put
                dup dup
                  1 get
                  pdf.baselineskip add
                  1 exch put
                dup dup
                  3 get
                  pdf.baselineskip add
                  3 exch put
                dup 2 index 2 get  2 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                SDict /pdf.pdfmark.good false put
                exit
              }
              { pdf.count 2 sub /pdf.count exch def }
            ifelse
          }
        loop
      }
    if
    /ANN
  }
    def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: cm-super-ts1.enc 0 0
% This file is generated from `TS1uni.map' and `glyphlist.txt', `gl-other.txt'
/TS1Encoding [
% 0x00
/Grave
/Acute
/Circumflex % ?
/Tilde % ?
/Dieresis
/Hungarumlaut
/Ring % ?
/Caron
/Breve % ?
/Macron
/Dotaccent % ?
/cedilla
/ogonek
/quotesinglbase.ts1
/.notdef
/.notdef
% 0x10
/.notdef
/.notdef
/quotedblbase.ts1
/.notdef
/.notdef
/twelveudash % ?
/threequartersemdash
/afii61664.cap % ?
/arrowleft
/arrowright
/tieaccentlowercase % ?
/tieaccentcapital % ?
/tieaccentlowercase.new % ?
/tieaccentcapital.new % ?
/.notdef
/afii61664.asc % ?
% 0x20
/uni2422
/.notdef
/.notdef
/.notdef
/dollar
/.notdef
/.notdef
/quotesingle
/.notdef
/.notdef
/asteriskmath
/.notdef
/comma
/hyphendbl % ?
/period
/fraction
% 0x30
/zerooldstyle
/oneoldstyle
/twooldstyle
/threeoldstyle
/fouroldstyle
/fiveoldstyle
/sixoldstyle
/sevenoldstyle
/eightoldstyle
/nineoldstyle
/.notdef
/.notdef
/angleleft
/minus
/angleright
/.notdef
% 0x40
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/uni2127
/.notdef
/circle
% 0x50
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/Omega
/.notdef
/.notdef
/.notdef
/uni301A
/.notdef
/uni301B
/arrowup
/arrowdown
% 0x60
/grave.ts1
/.notdef
/born % ?
/divorced % ?
/died % ?
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/leaf % ?
/married % ?
/musicalnote
/.notdef
% 0x70
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/tildelow % ?
/hyphendbl.alt % ?
% 0x80
/breve.ts1
/caron.ts1
/hungarumlaut.ts1
/dblgrave.ts1
/dagger
/daggerdbl
/uni2016
/perthousand
/bullet
/uni2103
/dollaroldstyle
/centoldstyle
/florin
/colonmonetary
/uni20A9
/uni20A6
% 0x90
/guarani % ?
/peso % ?
/lira
/recipe % ?
/uni203D
/gnaborretni % ?
/dong
/trademark
/uni2031
/paragraph.alt % ?
/uni0E3F
/afii61352
/discount % ?
/estimated
/openbullet
/uni2120
% 0xA0
/uni2045
/uni2046
/cent
/sterling
/currency
/yen
/brokenbar
/section
/dieresis.ts1
/copyright
/ordfeminine
/copyleft % ?
/logicalnot
/uni2117
/registered
/macron.ts1
% 0xB0
/degree
/plusminus
/twosuperior
/threesuperior
/acute.ts1
/mu
/paragraph
/periodcentered
/uni203B
/onesuperior
/ordmasculine
/radical
/onequarter
/onehalf
/threequarters
/Euro % or /Euro.alt
% 0xC0
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
% 0xD0
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/multiply
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
% 0xE0
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
% 0xF0
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/divide
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def product (Ghostscript)
search {pop pop pop revision 927 gt}{pop false} ifelse{/BorderArrayPatch{}
def}{/BorderArrayPatch{[exch{dup dup type/integertype eq exch type/realtype
eq or{BPToDvips}if}forall]}def} ifelse /HyperBorder {1 PDFToDvips}
def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx pdf@lly pdf@urx
pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly exch def dup
DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx exch
def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: SFRM1095
%!FontType1-1.0: SFRM1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1095, tcrm1095, larm1095, lbrm1095, lcrm1095, rxrm1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-188 -320 1445 942}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF0482493852D12053A7904
BF6E144B9488970F220C299E80886366662C1276120E72472BF84082B9EEC729
F7007ECDC5A850C88810EA679DABE81714004E65D938DA9ABDF29C949A52EF02
EDA8451563235D51286E9133FFC7A27067DF0332ED614AC2D4FAB88EC84E6CB9
FAB41C933E84B88097BA8742BC30A81416D1CAA3545F08E2554B28362B99B79E
FC42281922B94604AABAF5F7A9B8E2D9A4358F38F2382EF9544B859D098DF243
034CC475CEDEBF0EDD0A60C907127BB32F7D85A62A44E90B4056D9B4B2FF3A49
786032C6B25794E2C0003C7852C6B0688351FBFC43300FB0B72880BB7B58BB61
3D1064E7D4DDB128A9B38EF7510B7E5F82BDE39489E2D1DF08816781B13836E4
89390F84577F31776FE43A5F94F817A4AA4A698AA4AE84B178FCB65F1B5A5CE1
334417595F6E40849041565BAA497F6E4B8F4305D849128C9A26A98B909EABE9
8F2659189ED27C588ADC7C744712B4D9AD0C5DD25D1233E979DE7F53C5F1C47C
E9DF254086E5EC70EBC6B7E080060BA72F15E6BB75C75011B15B7ABB6BF761DD
428FF1BD688938C75BEABA7DEE2AF49364D2E198FDC7F8FA2313BBE598ED3703
7ECAAA4670BE3A85C693ACA829A5936778BCDCDB38A5981D4CAC8994E2B2F086
26D8793AC1393D49A8F2FE391F0EF8899F63C3F816274C8C2F722397867DF1A1
7DC1D0B80898E81366C04FFF51EAE6D27F0B90EE255ADD67DBB5B04A5D00210E
ED87BC3155BAC0218069621DA85757AEF1144C6CBF8B9D9C9F278140D1B8CEDE
B52746BEA50DFACCBF9D05201447B919E7E2E2BA7C4EE7647EB7A3AE81F79AB5
6118C8785F8C3792689724B632419FB2BD9E9CC3F7FCF5CCEBBD7DF39B5E37FE
38417452DC426DF7A1DFA8392BE9999C1EACEF89B5E40E102D9E59C29B60419B
443D50BB15FEBDC8CF5C4FA0F7AE66099CFFC7248F4AD38D6923D9A919960A18
3853E13F04DD3DE38FAB3D9F8315997449A8C128876A2B882B1AA15181C84823
B6BF33A12D2BE7E7A3103BD798B22C40FF256CAD073EBCBB4386C8182F2F619C
3357EE3E45F533F4D8C354F1DDAB700B6CC69B9A1B63AC5634E0597CE360308C
F53062B517FF908D97D1A6B9CE831938A0A05CA219C07FA4B4D691644779F207
9A401A69392660EF00A150ABE8314A3BC2B94C48170E0D91C3AC5F50D094AA31
D13F89A74D8550213E1DEB2A3ABE7B8404DE866B320FEFB7B56A4E2D098F0B4B
82C3D8CB155A03A55E5871F1025EA32E245FB41A163ACF2F27734BB9CA15E0DD
3C69FDB49E1B31830CBFB36397864D500FF02291E47A570DB69BECCA7A287CBB
48C561EAD1AF652E42295E59F67FCB12539AB1FD60D28129A5D9D4BEAF9D82FC
26C1431C353EAC9DCA962669FCAED4CE4DB02119C4DDAFB83D730BD6930183AA
B365764699C3F1DE84BBC7250B19DA566EE66B35E7069A9E7E1C44102EC0942B
EA298860224F213FE6251BAF0770F2B2400E1809A5FBD84954BDA8030715A613
3C7929BF0F08F586A85A77065263DC2A4D23E923BFCD96E60F89EBE3C8337940
8533479974517228E3E6C79B7C5BD8228E6B33B265C1EC0F6755A0EAAC390FC3
E5638C3C69B24E0ADEB2BD7CB91EC948B694AFDBEA0F51D5810FDD88830C0C6E
6CA78C205758D9EA0B9B1B73139606D13A82A1958AEE3C8F2FA19337AD442311
9C98D5DC1DC1A3FE0885612DE5DCEF738E41313C89D002BECFF103F69E3C31C1
FF0C7C204212EF567A073B4A4FA3346EBE4A85034E31FE6AC5D5009ECB3CCAFF
38E4A86A6F56A4614EDEA7415D1059961F392287F40DD1F36D61D44D593F79E6
0F7005D634328D15C879E6F2E1A3F2A214B7A3509C8FEE1DBFD47CC0FDD234A2
1FD81C60A2DFD883DC4F06624787478FAC3C7358FE9669F35AAFBB684AB09A02
16DA6402B351B6558156928295B34004BD1308554958D0D12B523961C697C9D1
91C38137E2ED884CAFD4C40787E20624CF500757712F7A57D063539DC385235B
0B28B7D729E70F1D17FA09AA6FD67B11F6A711D816A851B73B892705A2FEB469
84BC19BF6E34E5623D6F6A7B9B981BFA7BA525060E8E38C85847A94A3269EC5D
B4A9580916DE799F5F09D17AF941AF0840BA3603C810F9149095DCFE3A1B4411
106895AA84AC2CFF3C2E2A2328ACF70A793778D647070FC79D81832A66057CB0
85B2E2B250BB5427413201D45C0E1171826ED063E88655F94A91F840255751E9
5C63B325228398FCDA1235179D1C3E90C0B1DFCF8FC52F40EEBFE7408C1F2374
FEDCA87687CC113B930CBDB11D00350FC8ED47A84B487004DD8B33B16B16775F
DA4EA70E41832195CAC05BFC80A220108282768F39E9641FBFA514E1BCB816EB
68911F83BC7F43467AEC1688F05E3CAE99AE48F8EDE8ABC0A23A84A0B8030780
2BC0FFB26A9642215864E48F37CFA97B8F0E6DAB8619663C9B526B4F5A01C338
3732909AB8C0EFF6D402F5B04C0F9FE91C112456A1A82CFCE9E04B637C222264
DE7FE218F25718B715869266CEFE37424C0852D9AEDEE6941CEA4C6D963FECC2
A75A5BE456F4FDA49C6CCF4EEE6C80038588E04319A2F1C34063CCB834C09F03
82E9B09FC599792AD660BBB44FB8CD1C47E9A5659E22B8CBD287672BAE2A60CC
8E2D8B1038F974D988AD1890A7738F26801307BC60159FBFF461C14A44260277
13EA65D71A4A5E6C8CF53125743D3604F72D2E4557EC65834BAA1940EDCDB07B
9796DA58756FA0D72F2686B3F6468A51466228CDA775AFFBA5C3DB97B68C6338
1AA4EF5BB7493CAA62381382FF9B11A286040F3DAEFDF7FE4215A9C86B8C168C
AC6D44274454E4AA7CA6690A15F793D64CFAC2FE47D6D3A45457AF0AA2AE1644
75AE670FF0BE39AE8EAF2238B17C064536792D031F96A76025CD8F2DC709C654
4CA74327452822CBE543FF80E48EB1B2D5A30D974A7E9B24DE18959F725C9F22
B1D624111AA472AD0ACF968C2DC219F601A0DC437AD453D819AB09E7D22A8961
1C252789433AC37C9A52426E2164C93D8012F1103298212EA6E2FD72E890266C
5F7DC0347F1756CE9C161D1DFED772A7BE1B66A836E6020C8EBFBF39E02C47AA
B7D32D01F48C4ADDAD53E859EBDFE76586621EE4AC427DF83E4D5B9650D7C2DC
3F005FA7FB656BE873B8962C3AFC9EC243CDD0D4855147890AB956014A804BCA
B7DBCCBEC86E0F2ECA5A8AEE0DDBB535193DB8FEBCC46955DD3E4D5C4323AB79
91059EA4317CA6DE0F66F3DF8E97EF6BE3F1C940CFD62A38E088D3049887F210
E0866983248CBDF0F6FE98A99664195A920FC239F97E12B6E76A26177BB17440
3B9A94299609C0414824CB35B8755151715519336A7D4E95C2B17F4040914C18
7FBFDF71021D94EC9526CA84C27EEC9A5003B438B20514D1B53818B47C55DE18
90CB49908A012FAA533533A8B068EC26AE2DC397F2C0F3E7B5C209964A2B2417
71AE05940FE45E85A9C0181148D2D9B7C18F8F2EED99D23A99B7C4EF5821393B
4935B166D9D7FABE64EE2D5F642EA2054AEFEE5EF8C06F500A0FD9ECF90E6073
1B8A677748399F9AED8498CD54602657410BEE1D2BFB4F20C4F19866AA097C42
A6ED10B5134C0F8497EB926D3EBB770BAF00D0B109B4ADB650AA5D6961B87CA3
CF1565480CC71F1219D84C6274B75247E7AE6939D00ECF6592E76699F4629D92
1B3F8C61BAA39B08548BA53DA0D163ADBF468E79CA5CCDC91B6D0650134EBF71
389EFA4F481B0BC8F79359FAAABF637EC7AE8423433B3E083DD36AE59E1586CB
9ED585EFDFB098DABA1A7B37EEA054309EC197F3ED7CD9936C49BFBB77368300
DABB609F455F23B7ED90F772BF239F4585D6237427829751C8A05112A3BEA6F6
4BF59E3D1A0EA3A059F6075A69EAD7D13927A8FCDB819747325893AA7388CF2C
B91AEA5031624A248C26519058625F9BE81DEBF3B0E0B6439DC4A1F0EF3AD29C
43D030AD42C04E0EBBE7235A85AB4510641707008AEC0ACCCE43D8F8A8402797
CF2A25C5AFEC6457D704958946A2577B594C63EDBA2B4083CC2D527F333B8AD0
5931490409D02D5B99E1525018C8CE4E092033C7B24A6AACC740CC8131299C8B
EE0CF718A649C442A3FA6FD6967B5937F585BF8D1F0A66805BE00BC1B838BC0D
230C40972E6D8847FEBBEB46017BC4A61F07136BC91D25D327B27692256F3985
0E7B06EB19D5BB48D5AA92EFEACA13D0970DF3E73DC4874650CAA1C636BB3846
110C70F6FABADF813CBD945DDA554507F48700B780EBE4B0E478768BA86963E9
4D7D2F9F7D74607FB085DA16AE15C8F2FAE835DCE93061A34A70C274C3CD492E
E4DC985EB42B58BE44EA60065DBEB6CC5282B1D77860C99D0E6429B0C12535CF
9BF81ED5D48F467DCAE43C484D000601419CC24502858DA47360B6C0BD69968F
5CD9827AB2409BC84E1E4F262C883A735437345966991167D0DE66E7BCB5C501
41EA9BAB87EE221510895CEF0AD05B3D78A767C0F348A0C8597F621C9126BC4B
037F08E0D40CF07EA3AA4FF081C3CD8A7E93CFEB09E83D3E036A99EF899261D0
94CE20E3DA8EAEB5805C2D4013953E99E610C7A4EBADED843A426FD735B34788
E6B24CDCC5AD670ED461E740FA8DDC205573B72AC403274C694E5D0DA08644F4
7A80CF0028C6891070014323A5ED11DC4D0B21AB03A96BA353AFF0D10868090B
C8058211C934931BBB32A76CED7408441F0A41E4B8938FD810B89E20EB80FB8F
73146EC83C31191EEF52A8320DCACFA49B90D498D6A2880AB2AFF8CE58B77BB1
628C6CC9AAAF96481BA6D941BE7DBDD2B8F341AACA7DF6D470288311F4EEE5D0
8EF2D25C1BCBD862ADA567EF7AFB0CA5D488B020DB0FBFDC704C57DD379E772A
07A6E40D31BAEBDBAAC432014F3C26AB00BA7C9D83B2D5CBFECD6EDDDC4CDD45
FCBECA16FA5184618E121ACFDED4347343B8ED84508ED8F6F358A5EB2389F0A3
BA4222F9AF72422123BE874F7DAF739217C32AACA8AC74BD93A6B19EDC4CC53A
078D22F6C1056BAD17D86F381ED2C48E964C027EB4402F1FF1B43CAF43514251
C4D85FBC0DA441EF54FF375C57AACA10BB2C49C89357D38B9856F8419D057A41
3F7663CF202574CBBF7165183946BF0855A6754EC7DD70925E00B46976F2A896
207FFB1304B17D776A6A6C0C89365FD7697FD45E3A20F79D2210D27113B9A21F
E903863C24A4594DA7E5079C9E4A07D6973812E5070284631AE041AEF9893EA7
6C85995FB0E88F782DD45B44408DFC7D5CF2322FAB047819D78E72716428D00E
E57AE742531892BB3AAFA0E032E3072DDD0CDE818EE9F94DC84E443A5F062417
775EFFF14EF9F48BC15D9DD4BE4734A2A35C990AB0C485C8FBCC63BCFDEC0D87
CFEE556C1D86D1902001FF877043CB62E0B7FA1F3C18CC3DE7D205BD8A7EE87B
4AAF7FF2D1998E5F3C312976040390CD1CE3C2165334CBF577829A5C77E96617
3E08D2C0CCF494D01487E6A39FC0971734B8DF760C92402DD19703713F9A898B
651D7E93D06658197BA40E1187E00F6CC85C210CE920A1F5775D2F487873EF02
A3817121EEA7798810E2D7051C4AA45D2F0BFC9BCBF0067C265D9CA984162329
1DEC6D1B1ACC3720FFA3B10AF4E03699CB8EF17916F2594DBE546ACEFBEAAF9B
227E34D7A56746D45FAB95C6B3F0FE67C13EEDBE27EABE615294AA1CB829D13B
338C94C7EF33CBF22FD74309E3D2268DC1ED9104FA1EE5D115DDF58D41BBBD20
D50EAA7B9DE349F6B829C08A48F951BD9E7EEF98A80B4196EFCA2D26256FE23A
FD98AAFA87BCDF729B56C22E2E5B62CEBD80284B683D8E71ED570C080A5B57E0
ED51E58548FF03786BBC424EF84A74992155C93F19C7EFCB31A980B6A05B63D7
5B850554F59707B3020D6067C9BA2C45BA3907BB47E28F46D77A2E3C5970FF60
F5A8EA65DBBD454E25ED440B96E48381BD10AB444949E1889A2148C86C506C07
8D494E4EA147F5D4441BA85588B0F934C832987A61FC0E1A5B9D603A5EE6133D
40A48781FDE97B25CEA1C17FB8E306640DDE1AE69B3F43335230849CAED41067
91BEB923AEFA93C3F0A535722019C32AFE20FD6E9CCE6C24A17D3CDA63199C9A
4665ACC1CB1BF1F33881825DE24EA5AF485688AEB09682193EB0EC4A3252722A
19AFFB507C7D1280B3746877771BA34703E3A2EE6A02894A286B557000AEE690
7D6077B2CDCD69E17EA619C3281F49B7FA1F0EE1D6FF7E34703E95A6D0AF6965
3D7B6001D509BD10584123AA5D451F5B002B8339FD6868316364B9FC0C8133A8
4721D8C9D7FF4F9086F239DDE63EAB225F2857D7E489E762DD2B77F041E52417
B42639F5928626D5B188C92D7F7756A9B2EB1E06743AB6942E3733D2298ED89A
BE2B26CE562FC84C1E3BEB6C9D6AE9B1D578D01878C314A513DDA4CEB8284F77
26DA736770EEF2A57FECA340960B74701EA0311EF73D27215F9DBFF6C91601A9
6459AB53905A6C56811F2F1654B5B6D6941D3E91096044A68CC2E0C4C701C633
D36E78832AE4A51C23B48A90E137169F3D1DB228021ACD2D067C2EAB98755A9D
B26098EC91144EB2F5A7048BE25A71703A771A8A899D8366122FA7C4D6C1C008
2F0E5E0B44B2C47220AC3EEE6C72352175BD1160D7440B63D0B37CF366B627B9
92C833B3CD1B2EF1232FA3151EBBFA361593C47F12CE1235112E1D1325EF3429
6DDEF61A7BF3FF47199EBCCE1B7FD992FBD13388443B17A75314AEA30AE6B797
0427BE89D483C3FF90F3117E1D6DBA9D1C0A108E518513054A034EC715D55C98
A9745EAE6A5254B740EA1B6DD75F1BA30B9269A78056FBBFAA7E423BC07E0087
418A799AE5E8FEAA8D4F6560DE129DAB52394D2B2CA27C4CDEAC8F3AE2659786
3E12A88DD8305E833A817403BCD35429AB5C9DB45EB4190B5BAFEED95073405E
79A459D34A4186344F00034AF1BA0CEA24F61162E46892E0EFDF9F8D82D9E971
DC220D9FE89FFD5E8D3031F622A6C3729BD17BD08AA696684B43A61A245FDA07
AEB8CEFB297B120CDA05558C9D2DE49226CEBCEB411CAE31F437881D08493005
2FCEEC0D873FFA87CCF47A4F591065E04F45CFA58A9FC3BF9850B1F5DF3173CE
039A9B9DF5CD573E0B61247A3DB556F13637B868EC7B00BD5C4D78922CB04E25
21E4F9E3D89D6E788B6715B0D99569A25169F92404F6B14C4B596BF925F44B1D
1952E4A562E91B48599280D832ECDCA076B0D7F4BB6754CE78EF4186CD0D4713
2C98D9C8C2E10FA573F2D6D66300F84FC6ED92208FABF1714CC0D532D1ECCF45
7CE3C2C449ADCF0219493B226C333E7951BCCE1C4576837DEDD0ED2C921FF84B
ABA2909881D871C6B84CD8468B6921DE9817BAAEA088C8D5666EB8DCCDEC2DDD
459C5158BC6EF268311FA02A4AF378B0DF6F531BD155181FED2B7B34262CD2F4
3A07B07EF356A5B9A6F3F1E2466A6A8862CB140EED28E45E47EC9E75C4414923
579023999E5CC3435AA0E0DE20E6C111559EE4868A045396A76FCB6F8A806E06
1403C4ACB7DAD86C43BA82B0932590806475C91E5D83A6B44F13F1A4C0D062F4
E939C6DCB58968CB6DB7790866CC1AC60E2D1453BA73139F45B9C295CDD3BE1D
9923C1A11D046FFC2E82AFF45B11C374D8A030EA614F2B3F382C3D041B1D684C
E0D230F220CBC734D80223ED96620A1832B5DA52CCFB1F00652BEB5E6C17E159
74B80C9C91F330DB0CF100E2D4D2E35ED44C70D7813592DE9E39567BD0521A45
2801E7AC43FEF1F46B90E6B0497E4A4CF31E6304A0722C4D92534693892B3360
A9788E290B16896410B5F0942790991B1046D50CCBB81FD21538E323C8D7EBA4
461B4DB78D05400EC116FA61220C34FD16DA13B24FEB3FE0391CD4459CCE3D3D
75DB1F5D1C1E547D0EC92E4AF2E80025A72B6EC01E7B58AA88D8183E9244CF95
849FC82FFEDFC9DB31CD7F63B44A957310BFBDA2645D0FD919104B93BC6265F4
69E3A118ED153CF2CD766F50BBA16DF8A3D3008BB1CE8E90BE72EED3F8FF5B36
958EEF8C6777057D96CFB22540F704918163E5802781B57108933735125BF8C4
42D3E33C688AC274B4003FEAB7AF871B95E2FC47F8F8DBC9937241C4221E367B
D5D3B0A5A3FAB3255F89CAF1DABBA08A247019D8E0996FE7EB5BB51CCB12AA5C
CB322041DC8E6923A275A78BF3A39487DAE74AB66BC6448A4CB761AFEFC0DF2A
A75CCAE528E99C29148C8316B45D136415D0F743F4FFF4669FE2C843A3C80EC3
3AF485713D2D9F50CD5903C722522BA5FE3F6222ACF16B64832CF39AE5C6C6F2
DC4924F48339518BF47FCD45A41B423664A7862A1246B47A8329BA0EDEFFE32C
141353E9B1AF6329261828AD29196B9CA4D48F1BD5BB3282B708C7CF1B2D5E8C
B9636CF31BF4C8C223AB083480A5E0123F164AA8A1A86CE91A6C01BE508CD712
0FBB7648A98B81B98E80520E94BA8742AAE46166336348B09A6B156DACB9A7F0
015B108CAB1676C03EB1B58E4D4693966EE2900C4AAA1677A4EA18CE93A46704
E3C07E453FFF5AFC65829CEE27DEB406A5EA870CEA556EE285667D7FAD1909D3
8E3D16A76EE4C1E67E7198B66C9857B8186DA0325741559A0B2EBE2B19270EA6
787A487DEF5D9E7B0F5690FE284D1429DADB394C63FF9F7618150D4801A7C80B
3070A8741A21A0F0EE9BBAE2C2034613631837410E4C9BB3DDF89A5C8FCDBC73
818015D41788193BD9D91B995579ED102371E9C0DE569497B9CB76843B9DC440
1016EEEC7E59783CA27AC0550C9AC3591DBC485BE6F550F9392441E53A7BBB5C
92F68F309E87F5743B651346936A8B12EC64C77C15E7EBBFD886BCF44371B457
6CAF14F42044E22A169BBA8D11B963F96633EB1DE8BCBFE2D67F9DA4FF13945F
CD1140F15A6CD3401A04093C37D11B10E42202AF1990B6332B41AD348E1D304D
10A3678C17BABBF11021F4545651EA77686EA39B4EE957E47D4B4ED9FEAEDAA3
25B6EEEB55E6F0669C3381724BBC432E470A4172A3EB34CFA8FA03376B20E4F9
9647DD3320A9642B90A7667FB7C484ACAE902CE9F53E5C18DB53718C621751A7
82DA56A87801DF820E97BCD2A72B3E5D6AB09DCF30329108D2AF5C2F38338CC6
FECE6C9777557C8B91855E87A57007B594B0BEB458BB64308891544DD2A83DCE
E4A9A967C3D189A1B8967A58951632B40E85F393B0CD06FC306E671DD51D041A
7314003D64D254B15166518ACF1E84500A5AE5D59295AC26292C5109111B3A1A
1B51BE72BB373F50220EE72AFD0970B305700AAE98F799F60CC9724657BF5791
886C2B851D492BF5232B7C8EB686B168A5B309855B1CA42E92933901A78F5A63
3C1CDA3ECFE46712C2D00A53D801DF8EA78EDDBAFC450172AD459959FF8DBBFD
21BCCD585214982310F2DB477F624A7BF4D6260B25228F108125DB04780659E9
B15A185DC9577B4EA3FF691A4572830FDCE5BE828A47CB248E829AC66EC50423
91013D75089394A08F2F3977D26C59A17B44372E4C0195E176900A5F6A6DE665
B9BA5DBD970C06C3D3A8A50CDF4CA80B160057FF468BF898391A4888ED35ED4A
EF8963FB716C43107A2A0609766DBF43288993
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 57 /nine put
dup 58 /colon put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693AFFEF215D00BFCAD02E45496D7C8F5E99EB9096FC4300D038C1AFD31EC4C
5ACA6B72C1BE7204E37A4CBBCB1EC26AB87F2FF82DE20601025169A5FBD2D060
62B5B2DBC288C79C33B596832AA18D730AD572C6EDFABCBD36DEA87C0F323C3D
6E537AD3B43C6F3A905597570A8C6B0B4A5E08C08EAFF9731E745F2BA8ED0C0E
1ADF7821CFCD4E38F3F4C243CAD31D9F8FC68B9043740852B4CCBDD37BF728E5
648215961FA82A0C847ADCC5187331D0863A4573BE520C02CAE14AED4F06B3F1
FB4A318AB54CD86DEC824707B29F858FD726A167F2333855C0575EAF4EBEA0B6
754B1775F967140641FC06F82B191244186FF347A351FBD8FA62E8C978B21F6A
E124929876488AFA97FAD1A68A0C3496BCA768F4AF8016D7A65BBA3AAFD7F5FE
E75FE714FFF3D54D09C9747ACA01CEFD260985C6EFCF9F0831780165A3374B17
88EE15E86A40B16BDFB75FF3B73127BA45BC6E1F752B9A508639FC3EAE24DD7F
3CAE82407719F13E819159309FAEFEE5BEEADCBDB4CA8582DAF2809A41072FD8
17E7072D80C54F98BC9FA0E838D5A0C2E786EE877C26D8A70FA58B9ABBDA9D01
8F6210E7BD4F9692C85B7E091D1B11EFF780EF4B2888A30088C3BA59ECCC84F3
D535D42A2B4D2FB2DC85BC4B67FC0FDEA295ED6C560AEA0C197F70B0768E9877
812955980FB73D5A98B1D9A3EDC51E95E6FFA6F6AF5767F1113125369DA378DC
11F710CB9C611DACBEE1706D4322D8DFDA08D9BAE27309051A316BD2CAE43B6A
9B870FBD47225853FE4396E258CB7FFBC9CA8A999FD494B08BE960AB8A7E718F
5C5416DB49E029063CD6579FB06212D3A49D2059C9C70F314007E482347290A5
8E213D27F8C63FB4D8C2D7ADFD048EF7FE361829395D9F8AC77A19EBFD0E550E
2F7A987A33A88586928B4F9AEF05A408BB4E0ADC35B1F49DB32347BBD40DD761
72593ABB8E672D983B4C74CE603B6B64F44228D8588D6D7E2355A51A36D80587
CDA760718E7F0EB4FC9579E856E00EC805510D3E74BB3845F7DDC1BCE6A5AF8C
23976C5D3DFF4636D039431B499F2CA93E6ACBEE40B838B6935F2A3B7F302C89
2E4C99D6E18617EE23056122CBEC8A3E8BC4D45FBE6E712BDB8B734AE463B5BC
BE7C4C872C31217F26B1F2CBAE10BC9C369CB502D918EB10300B84573A58DD1D
D20EE339C232F5AF4D827786ED20AEDEE34EAFADE1B5838EBF47AB8373E85688
A6CEACD95653F30496E0B641519F6BF9DD089416095D540012298929857B59DC
F04AAB1836F1672F085725659333DC3E92F5C73792E4FFCAC761090D9BE52619
2F06A7961ED0BA38E65ABDBBCF07D29A103098CC13E2476262747ACFFD9C16C6
FBF94D19A90C4D0085CFBDE64B5B99824FA0C0CEBB9CA68DBF195618EDBB3245
1BB972B559AC5052323FD449322A19E7BA82B4756697586CAA9E32109D33077B
71648831195E339BC81164455850B42A592773A9019987F5E8EAEA5D281632FE
BEDE907B556207C3210130E56C3DB0E7A133AA9CF8F0AB5BA66E1880ABD3C4CE
5780FF948C5F24A3E926C060FBF87AE5011BD4C35929C1648A17977BFB2FF34A
8484919B254F4E0EA1D78AD8AACAB446B96D297BBE453F54EFD0391139B93342
729695531FFAC6FF0B15C3BCD9CB6408D3E07F40EE0D79EE37948BB25DD57982
D2A3CE30547111EDB287DF67867D07C9147586B2357D681353C5B1970FE1C515
D81AE7AC20C71D68BCB599DFAEC22327EFE52A4064875B4367C67B4FAA42AE23
3FD28AC8A38D4778EE0C3E3DDA096F80B49CA3444C397398A2E244FBD805ECE1
F2E1A8849A3C90A13167C471B80840AA7BE40A3A1D404B2BF7F7F121D721ADB2
08847F63DBB1BC0FCC4355CF9D7727590F522F35F784C818549C936C41B31D8E
462D7621E083AB380E09377D146436EEAA1A999C5C59318B54CD696DF4523956
6DB17607D7B923D2B076FF1F9045B7920DF3439EDFEDCDB56EEC405369305D41
AAAFCF1B213489EADB07D78CE919C5A32703BBCEC96D382CCA5B77D92716C049
400A9B9FC990BF6071FAF19443D9D20C820AD6CAA97C2D5CD0FE3208ADBFB894
EE0B218867C03FB626D9DD9D70AD8A0AA4F40AF9B4BDD1781723C539D89C5CAA
59FE2D2A8D59B0E60656407476144D64EBDD25D239E9F005B0E7E4586FC415A1
2B09FD1B0320E0BB7CCAA54C15776AD94B8BDA8A1FE2D157476B32D202DADACC
C9A63E602154F6243D65C42D4F3A90124F44B5A02E5E4A0F897829954E3A480C
36B4A47B5BC5DBAA936A51B7F792AFADEC8E98D78E01196450ADCE35C23317D5
B36B222D26BC9BCE2F2EEA09292447AAFF299FA391B6C3DB1DB87EEF8AA0CE48
20310798A0A0A5732E8B296851F3E437F406D64E11FAF98154AD7E38BB56D4A6
D84727C646D2944C01AE4E8C9129EF8B7C096114BFF8C0F3A041FAE6CED62FAA
F75BAE458AE72519FCE96E2C03587DBA715EC7656507C98E1E8EE28E48569A70
70B531F3B29979ED65F86CE63CF464FEE162B64A81DC7B2490788831865C7F37
2FDFD304D8EA075F6FB8180D5E8AA582217FE2BA628F0E0888FA779DD8784CA1
525F348FB1AB5E6980BBC5EC243D808C478E4372A98FF3F1681F809BCF267406
F7017666FED287065D469EB2E600E0203A7C2A546346163E988B4147045E53F0
20599F1EC68B9511D90BBEE70DA7C153C491EC53F1B4D129AA6E44E251F9A570
69EC9F34E7C4D0A1076719352DB85DBD0D82EF9DC86D816F7CD3552E38E2283D
393AECDD807B0A4E58E93F2E2D3DDB352299BD10CB35D305B9AE9632F3362224
89C02294D657E919859F58D1C3F15DBD052CF77C64C54755D11F5F9DAD73F2CC
0A057135AAF38E91970237EBF1BB297984034AFA81F129D142170CEBC9568664
BBE9B96D7A915A61E3FF73E41127CF4DD5F5FA22754F89B0320CEF370B38DA79
A8199E23BA93E2A5ED98B8CE42D9D96D7D317A3190122CCBAFA5BC950462C1AB
EE6AB69F5B10E7C6CC7BF4390ED99CE678A8276EACAF74EEDEF932341845AE4B
8B75598C09243706363EF5802A67D0E0512742A82A884D9EF5FFFD17DDB0AEA2
94FE43B8D47BFE0DF612B30D9F67F3A1E0C47398FF13F06C4E867741717B83F2
E39451B11E4E3E7E0DC397786D5FB347E4749BB1BD39EE25B5F0A3569D6D3238
3050A0826B47FC8566D35A3F1B6F9B46AA26E72D3C6076328EF7067AAD2D0C77
5DCC1D4F16B55715DD63A14FE70B0EF1050A5208BC2A8041C89D4ED16551C084
9D3814EBFFD5C05FB3C98833BDA9E6A0671863F7DE1504DE045AD87EEA675780
EFF1C96F409D3BAB1C367BD36DF3D41A2DD2BF034D68462FE3578F81A5D86465
669F956FB01A4A61915DB358D03022159E2ACF0359E867C054A677D1F5CAF5B4
6002F46382935C22A968BEAB33F5BDEB95D6D682BB3141DB657081C37FEAF63D
A1F9E4E02B17F98923A27EBFA924A38256824FFDC7F7F1B059B7F58D2850704F
88D3A48E3523B127D630A01CD9A69BC69339AD92417EB2609C3122144824908F
0E570E8CF04E85BAD41ABC430488619FCB7D028ED968236407221C0D1F59F826
DE056C0E7B81BEA871893E6AF9149AE0D84FF0F3535077572C26F6AB40EE222A
60A6BCADA3D4997515E0AFC782BBFED37E2E6F76240C200D5E8BBA8B2D65838C
958E40C164032C6503D3211668AC43CC0D5400EE02E84C889D697671F9235B5A
6801470CFBF77A155E22FAB08995D604832C0BAA2514E8629D27C2D02E1019DE
593330902909BA2A5CB0A6A347A599E8C55DE5A5A8FFD341BFEA4379CE636A5A
40FC2CA63ACC2937AA112B90D7838E48A40C73BD5C01CE2F69313432D37E34B8
2BFBAB7B6223EFD0B9EF071DFE810C92A40DDB8495946D1EECBAAB21F1D439F4
616DAE75A7F0CF7F0822126A561540AAEF3378360EEB3342B0B5D09EEE6F4159
30378535EC5F4DAB1E8F8D17064FC9B32011CBA1B2A913D8EF54858FD536A230
4AEB1BC980A2B88094165500A92307A7159A959F89B9AD7150F64ABCE63306B6
9022044C936C8953E2AE9073304F9A5C8286AC9544875815B067D0185B3F6829
0BA5E35A861449D5ECF13AE3A9E10252AB887A13A4AB5B7A785A29A7FF9EFCEB
406F21E228F0586CD432123D7EC16285C4B47F42ACF02C0619D5AA072F8BF661
3C956FEE615EBC5CCA6C761284981EBEB632F275967B6FC46844224D1B4AD081
27EC200C9FD3BEB1DDF24CC2219F692C875CBA9F354EDF4F4361872DFAEE7896
29906C00CAD5A7ACC6CB0EF76F0E382F1D2F9F0B49C6FCDCA34373E4C4F5A903
D69532F1F6F70D97D36CB99A8C8DE666C32CE593BEE1BDDA17905D11BA23219F
8C534D8A170770D5FA9AA855A10DD6999EBBDD78EB2C72E27DC869BC83AA9C30
3B97BF26B6E9D0407B954C401A5756804AAFAFB84F5EC4DC28E5D116F537847C
168FBA918295BAA17EFEA88C9D8B74A0801ECBC4E1AF55D102BF14B7DB80614C
02434923E899B28B100D96E837FAD5FABCD6F137B03541D632175FDF6744B326
FB4435FA4926DD549A49B609C1ECDFE472CCB3E008C7135E568BDE4F51146232
6046F145FF2F46C9025FA4738816AB49314D520A01F6497A65283CFA8198A9F8
C465797175AF19A0276BE1975A0AE6E5D309221F1221A24F463E73632E086419
A4F4883685399390C56BBF1D5E5844AB81FAF77C34B6FBFDAA2FF47ED7F9D1DD
0BB27540CD6E9E07DA43EF8AC5BC2017FEE2BDB7A3C8278C8F2C3A68BB198791
B124696AD8D511D1C5E7C620A9196E8DE52A99DB6085A0DFACEC1B1EAE999B8F
BDB259ED2A311EF41D4458B7EC46C10CC7F791E8ADE44A71698553DA5681C6C1
3849AFA58BE852135E0348C3A4BC891DFB26B13BE2D5315664540819BFDD29B9
668FE0EA9AA13D44BA55D53CA9E20FCAAECE1D1FA0BE94AFBDF516FEAF15949B
508159E34B735054FA238F351AEE9F8223370EE7387D74FCA82D1775B1159140
09D73ED27D11EF1704A257986FD48BD8A5D69A038ADACB9261CC4DBDBE984CE1
7170E1305DCC2205AF1D06190EB251C2B07EFBCB32C2E5BBC61DA2C12E641241
B31670D88A96078F0ADD80244E0A71714137BABDE78423BBF177488C2DE5DFEF
E5D5A43041B4FA58486044E356B79EFA2D5A76B56816C2E61B8076EFF83F2EB6
C4038351536890DBAC95FA0F74A3B99392C5EF10965631099962150793EFDC91
743B13F2BC4A90FF43CABCCE04E2DF39BA578EC0FBED7BCDFCB6B36541489605
96254A38315744555116B31E065CE175321752A80A97891F7435167CF0F61E1F
389DE15AB66A5C75749771EBE06B5B7E6D21E43DBFBFED7D42538F1E32FA4CF4
3CE58D16F8956E62E45C7244CE59969641764CD7E3AB9287FDD4EF451B61B8F8
BAA093C772267EFB75E703DCCCCA26BC48FA5D3093F5B186F6970E3651990E83
D7677F4E5CF6BDD0D99734EAA703E9F688F2C564F31F2818E1665B78633B6CAC
D695A5458FC7E04933F3C9C0C6DA1F9007CF7B60222308784CF43C563E4E3B1E
3EC935D66754D223E9590D9BA4B19B0110526B6BDD9EF6AA9956390DF9B8601D
AB08C1FC382A6B3CD711C72CF6C75ACE5D902BB3AAFB8C8563792433C3DF19EE
7BE309164B99215EDB9C0820D0463556042DB750CD33E0AF74EE29DA54BFC0E7
FFFB399E913F8EFF43F4A1D43528730EB9D2EF7CA2AACD80094CD43520E94809
70D1FCE467D81BA0590192232E6CC17FA64715CA1739A5B579099754605C2D4D
27CBD8F4EB7AE5B6A3740BCFFDE30B37F7A336293F8517C4D52AC6760324386C
FCDDD8636CA9E7997413E5B0AAC9BB1279288C4E808B4D297CB464E7697BA2BE
05B349D12663A1F9742B7B41A8A56BB185DF9A23C07D440F45B4C36DEB56A2A7
A8331967EBC9B7141A1047EA1430EB9203DE01647A4CB810EFAC1FAA587ED8DA
0F88BC5943A14A568D3C7317F4F024E7D96BF0712C064081A7EC214722A40726
97A0C70FCC9B6FB85011AF18AD94851E3869189E16698B15E0CA66304EEB9EA0
E4D04ED3AD56874D77481F3361EF241D369B8AB082895F2AF894CC363DCE44CA
CAC5EFEFDD37854AF66E1009E905EE53D29F3EB8559567036567C01500C18E90
2259DE166D4A4CB8CCE365DEC7FCC2CE9206F2870ABFBA088EFCA1B7D451BCEB
712E496052AC811E57E97051E5904C673C64207F22FA4AC4228DE2DFE5F7E1A3
D41B3A4B19884BA912F56D2602FEEB0B4C6864DD2D1A7EEE9EB041616BABE886
14FD139A394A811AE40061860A58B96BC0640ECA0A9DB5C6D510B7EB186779B1
2116D4003C6F27BA0397CC3C44B5755DD907A789DDD6D8E25231FC22EA5CC4C0
4BFBC07FC947F0443F8D08E7D742214C6386EC63D0A0A8EA1CFD3516AD849900
5A481FA8F0BCCFD35EE15E053966C381B4D27F09FC2F5275C780ACBA854E6EB4
DB807D4D5E11328F69EA6C7420FB628971DBF55B715F499E6C1E72CFF9812B85
8A844C9DAAC96C4B02D298D1865862C875975AAAFA212561256E221EE155045C
BD91394D91C7EC0AA5684D6F3B3B53F746002350E7630140475B84744BF3DBA3
502D992679264DF4069944B0162B135357B508CFAF03ABAC4972EAD80F36671A
D8C0B8440AE5CB78E52A6F48F2FE75975D7D1F675E56B46B6CA92F6CB079DA74
47AC3769CCCDAF9FD9E6246F7759321A70E9ED2959320D63F42D0C7BAFC5A7D6
BB757BA8F4F8C54DED5607931C5522CB8A204DBA57D4574D38E5D2596C851024
870AB787C091405F049E9B54DEF6870C23A552BB1B8AF3AD9152A7A469FBAD48
93F47268DB1FFDC0F9BDD526D9A4E46A06E16CEAF19E1929E65BA324640B70E9
7BE81002BB29C8CD0CF0C926A924F6BBE53F3EA8AB1D780E43476451D867576C
16CC61F32688C11C8E63D3735ABC8497ADF591661FD86BD3F7352C206F0669A2
A20ADA7C9C2CF617AF4AE64A2AE85A4B733BA32682B69B68737C87C63BC79892
7B145C527ABBE0ABE71410A0656A27529300E55846604502EB214F79F754AAC7
17E343B8B194993368307A30425B5ADAB530BA6621816D3B02E5FC1F6C32FA78
1A99A89CA9D5A0DFB6C1C1E54C6703936CE3CD70CDD66E0E85746E69B4516688
D8AAE0DAAFA942FE0F7E1CC26D4F17B07BBE36A3DE25AF81F806581107C5CAD1
4A58D7CB4A9E26410A1F7468343A491C537B1550672B9248084F27325C9F40DD
FD9C79D92998DEF7302F655FF20D4B963045EC9E97501DD4042EB829B94C87CD
A7AAC17DEFE4AC7D366EA82A54EC463B1E2BC18F4070B17F99D8C3119B5E80F2
E025F74765654433DAF3868F8348723DAF4A7688528CB82A43C69B1238BE2222
A39CB503AAD5757EA769ED3552697D1DAE0CD457A5657E91334D959FE922BA37
F89387CC4E3E3100B692A0AA72B26610B2CF3F01FBFDD09FE2ECEEB324931721
FEBC75CC26ABA950337F4E853CBFECF12585DC76640F8B9B400AF11B20A44963
A2E7B2DD8C4D6240E170D4CDB0DCBDE66804B9D48BEA44170A461F082CD336D1
BB249C21402A7960F68AB7CA688FB7E0660FFFE7B4665B78A26B087FF8132E80
83B2ACBBE6AFBDC08D3ECAFA817AF86C3117056E6A51D042069E330123BC5BD7
1E977B7F4B2ECE5A218625CD8AEF7BD7C140E353D0A1012B87130AF04B24E5EE
FE43D62EEE941CCAB3E78273553DA4EBA090EF5B667614DE4CB3DFA8DC6D67E1
A8052A4CD3BCEB50B7E52DEBB6C650B69ECE43FBA9B57EC0E88716D420C8207E
A5E5555412A0DED21B1FE96759CF91AF470C6867A7AE2FEA1022FC38BEA850C1
DE854E02C969859F94FD4FD5C3E3E374DE7E6218B8275DE3835BDEE8AA22E39E
2F6407F934A11480C1C425C33138F2603BC7A37023603F496F2C8785791D0D74
0F570EEAC8942EE8112BC8FC9527FCD9568451A1A116767987D4A61F0B6B2811
F41AB5FF876D34EF4DEC34F23AF83EE4D8AE23AACBECC8BE6E68548DE67625D3
DBBC91C2116547519466B96D1A4DB628AF2F7502FA6501A76676C3C8B63B1D45
147B3DBB9EB87BC20D8E096B54ACA10B1E3F008FF4BD57C99EDC272D01E8F9AD
13D14EAEB149F3B058832DD7AF6FDFDB296E1ECBFF58F554A53D4825BCB6649E
0E912160C99EED3146EC5B0AAC105EF2FD4C3E737C2924082A2576CB5EEEA48A
ACAD0B51D64EB38FF2CC1C3B2AAFEEA7FEB016A4F1DF59500E6C55411EE5BA15
A86CBEA32D38D8F51A5072ED9B2B8826CE725D00744A6F917A2BA143E31E5CA9
429D6710335D8D9978FE046EEC9F28E02853F5489396D7F92ABB533118E33BBE
5D937C7F1C29F0412762AEED313D4B6453AE695B01B7CA12E61D1C2DD6BE7B6F
60AFD265DB1D1C8EF47B40143BF7AC615D308DC7E6BFCAACF89EF6AD8627B02E
66859D2ACFA491EF827CB7DCCD5D2FDA25546F51671F0010FBEECD35E0E65D1D
67BFA296654FAB9080256076BC40ED05FA186079C5388411367221B7614B29EB
1725A940AB633F9C584C24CA25FF5A0186F7B74A6AE4A7C7A615DCBABB43BF8F
939BBEC899D9925126349DE06E10A10CC64680B8890307248C0F34E210F7B634
1479B5A7AA1A0A8E85BD07A798739338C7FEC0C274AFF5600B0F9E39EE34203E
06D0722B63E27B6F19EE11D1C101661B38059EECE388E2712B9CD03AC478D2A4
6A4E896A195B8AE07B2CAA65A0D5C73AA90FD58C3EB924D04404FBB9E67A9457
DB483113E28DC3F6D2A1E16D8452F44C80C9BADC375D46A94B5D6E8C6D45500A
93D8F7233D5B7228E90A92E2F1DBDDCE110E8329D02168B3866D0E2D807D70E5
CA2EEE8AF19C70D460BE400C202A65199250EC39665742423F33A646C22D9D5B
F3B182A85D94B84FCA8C54E31370B0F3FEA50D8EFDACCDC4409E13C20D2D7DED
F233E1050DD20A1D75D72FB46412EEC2CF54510F03E50E83ED6DB767485CB997
1C9BCD230D2FA45F79CF064EBD4754C3FE166DE3B4375CA02F150F1EAAD2B999
5DB823B15D02EC25A2B4D45772CE5BE31EE12E94847D297C7DCEBCF02CC66BC0
46F530975F14597131DBCEAE6A34DAB9613E35C682113BFE5AD87A071FF72274
906AFF72EE6EF28BCB86918D962D37EB5BB91405C2997FC770930806471196DF
3155C25574D70239367B4EF0A385A8C65467C60B206D8D79363B3F97DFB7E551
8F60F7A3F7195173E5A8F752E816BF121BF3E2B891A20DC5B43A79EBE2A543F4
9C3FB83BB38CC3FD33B34EB23A86AA69B569B63068DD75CF5EB672320C7548FC
4BF700A325B8BE14A7B728DE672948A1701DC391928299A60E845A68A9C6DCC6
F628F07362919BEDCAEC87495B776457E9AC7070842A492E50A97266DC1192FD
BB5EF3D68ACF73524A0B976FF893C3D0C1643B0D8FD4EB259D9D43641F743CD0
F9C1B18F79BCF99D8494233FA9DCE374762E175D7F9353D7CDFA8F7D232AF04C
BE494096A68C3C9D67098D30E4B77928A6DC8E730D164E825D360FADB4F2D2E6
4E4A8563B124E1C40A9A6D6EF706C97DFAFC696BA96CDD4E98FF38EC18885811
862E5F8DA585D6CBDADBA5F0A5CB02676E41777A358C78487652E8B7142B4C6D
512FB33770BF10D1C2EB6516837B6D9AD25CDD74D2F14281A9EEA6EBDC91B8E9
5916762E543D155ECD0C929A6C2BD37C6F9DAC4D9439EAA3BF003701013C348A
37F24817CFA2E9D5FF7942F36467ED64C024544B3B559E96A9DA82E992439316
A97AE2406CBC34492F3CE72887C6395002C050C8298CCC074D09469CAA09324F
FBF7F204B95246FDAEF6D4032ABD8FD29A0CD735E60DEA78717E9CEAD83DCCD4
24339D5603EF40D59EAD1454C0AC8286994F58BF1A71B096BBEA3E047FDE6FF6
054327D5AF50786F940BD1B94B90A5A0F150049143DF603116DCD52D9BD16B64
5CAA3918337CF457A4A8B064DE081280B4CA803ED568D4F148C760462EC70608
45B8292B3C84FC31FABD78EA17831D2036BADDE5CDEE175B0CA7A506898889FC
F9E02CF5131E9F45D16CD53C8020A1E61CE4C8CD085D35F57D882781BD124E6A
4380D439797099F5E4E054B2407EFD11B293BB709FA1032671897AD56306D459
09A78264D41D8192607822EAD35F09CFD6694049456D3AF4E9CA14F7BCE791AA
F5E8BFC924896ABEC3EFA3E5EA70C72A4A89ED435F4F843A551F858B669ACA09
4BADB876F1C75DF5E0797DA7A8D8165482268427E326007E75A25BA261C81FBF
7A6C81F41884ACB2B2BA5D867F1127488AE896A207F26C36C176D52709BFCCA8
44E3196A38B3618ED431AE66EC9779F88A0B7D2F2F979B217E2AA8F0F67C72B1
01D55FA984B1BB5D274E354AA887136EDA4C33D4E233F25CF842A3F4FFFE58BB
6F87CD603AF967CA0F07EF35D0035C5E11444E9EEA03543ECD7B326BAF573A3E
6A6C450EAC8267EC9277991D36DD1A58CE839F48CAEE0D0D177A79B89669132E
CB744EF98AE0649A54D606BD3400205B344233DBABF00F2FDFD04D49D0A42981
148B58D7FB6614C0D49B995202A6B5C456EAC50281F56B4920B7A07197548834
E092B871577F627EE8FEDF55B948728590D83709A938E5FF4E7229AAA490B9BB
11369986E0224592767547B21C6F2D3BD1EB4818D5B6D7725D16E89045995905
C5777B3208881D8BC664E4528ED97395A4250DD6C6C742D44B611D317863AAF5
F3EA1EC9A56B2D0811549769DE79A17BADF0A711BA888BCADF401607F7154224
85EB5767219073DF3178171A1E58DDA0E9BCF5A6091F17A99B5759BD91CC01ED
F71C26C0CB816784BCC0ADFB6FF3891BDA821EA0CE9DC0456CD6A2BD41648BCD
8574E4E5864F96DE7DA8689438409E4CCC3CEA772A73892309E2F183B0B0F14C
4143F346BDD6EB130147FD0C20FE7A5C568CB6031D74EABDF2403508AC131C0F
BD6D6C329AFB74096C0F398A7A5382E166C5F4E268FD59E91D70B1FD705C0CCA
9A7AA300197BFB66EF9FC5CD8136264182046ECD6AE8407D31AE37060C07363B
B3C5AED4F28FB0A105F828A953C1E216348AB87BBDA77FE0AD0EAB6BC855DA95
26FBEC689FEDD930F092BA47C2E57BAA049929ECB99BD9716056A76109D63CD8
67B4545B8F1D855011B71ABAA771503704C387E9F6D025B3AF2480A34F3C3315
9E1D74C4E448FB91B3D1D84576D883D27DE278F276E0EBFFA0CA2E837757F0A8
2D952E71501D98D0E34D6F46C712F7B8B1126748B06303768D00EF36C334F0FC
309E73B9906FBCE15BB43F90EBE924870D0E2FB52D0959A4EEAF8AEA7EB76123
95461652E3B273896DFF5411993B12B0D3064F8E38505496EE9E08BB887641DE
77626DE5E0B506528F36E828ADFC7D659E3AB2F3E588935487B7C86BA332EB94
BBB39FE6CBD6EB002B6380ED70A30763396BEC18B0002D90D976861851E34D4F
AA4635DD72E8B4E133EDF5CA4B8B21A376FA6973151FB29B4AC711A616F0C997
D32B298F08674769F21029E36804B91B9C5800BDD791B5803E4E32D24F649633
BD2E50C71C596BEB41CE64FC5B585DB85CB1B23B2BA76EB8DAFA54239548D72A
84244016ECABE72155144E46E7CE551C34E54576DDD3F1FD059ED9001192ED33
AD2EEA049F9BBF6C6DCEED74EBDEB7CD7D38E0082216524158EA472FEC820298
273CC3CB080021C2368EAB17FAAD8A27CE751A4FA4F95A31D3FE402D0BB937C5
B91A6A75A16C7E4AF0D504EE5C8C8B34594FF19AFEB4F1062249984F4C226C02
8B5E3872677D0B0BACDFBF605E1B6FFE5796A7F0CAA80E9BE72497BC77E0273A
DEF50054017CE5A3D9F3A1A582015C2329E142C1874B0CAFC87D82EFE55BB833
50E565669C12EB4A83CC6A3150FA348FFF5C9E7AA39BD5AA7EF9B50C47AD0FB0
573730F5A24BBB3FC36D051230FF64BAFC7E642370D51630F5CCB961728E957A
697C7F524665CD2A09B83089633A101796CBB58762CF0B5D615A0552B95C19D9
E6AFDC6719A83311D6294347385C4B61D40521D79D0D11C250E21506087AA9D7
CDBC9F8F10551D639659694BFE905FC1380518B3FE177565B3E2A91AFD38565A
17EE79FD5F485251C0AF30818BCF49EE7A4A5B00AB550C45BCBD7EEBBF665368
191632D015D44C0AA17024F5C7ECAB0E2557ED9C586DCBA5484BAFD132F86088
76E0DD7BFD03462E8E857B413BAE49C243AB3B6C022525644DFCE68F45B548F7
5A78CF099613BEFD2FD4E86B0C89550827241ECBBC2C26175AB1D8B11E4C593A
D26C4EDD892706F8638FE286A8CDC6A9834A04652DD79958A82B14B02F0F82CB
40CF6331E0FBAD8DAAD954996CAF6515830A6A765A827F919B83779157993292
8777B1D24083F27E62D21FC06688AB939FD32CC8AB32F060662BB6CDE5EC95D5
613A608E472BE1B92F66F3D3FAE9904BF6DA46522D7571502B2C1FE89E1FD136
C1345BD2306E1C2ADEB0DC4F97DD07BEDA1C9C7FF637FB6F868ABCC61A6AAC8D
E36D486A3B73D6F36BFE73BD5C571C374F179E8871553301FA9B5B1D2ED4807E
E87F9909F65FC99369E44B958FC76A3A1648AC7AE1A1932490D537AF290909A7
7A4BDBB28953434E05E8DD60CBDD92D75F3F24161203B5B258E34BF84FF32F7F
8A0CD881439C99D027C9E5CDB6069157253B08B259D48F73947E27658B3CD97D
6097948E4D461629221957F3DC97583A406AAE37EAC0725E77FAB803DF02948D
4886AD3B4BF44AF7430F6EF397BA44B96276CA03EB45D47C0B6B9513D838BC76
8C1EC0B0220BD75D6E3550F13346524014256FB19AE1B3C019A0A215DBEDFE50
1073F546066D319A3F063E25A5788E973DE784464EB2EBD8B60828EC7D762851
6D7D460E9CAD3F622C23A491B1E6DBB6625665C5CE369EB5C10964ADE33977FF
A07E4428E66BBCF87432877BF025ABDE3F27108B2778CBADC58169A360B97D10
D53514BD40AF67261835AFB52C2C794998B8AB09AE83B271CB220FB55DDEE772
6FE722E0B715C48BEA4B30D916843FF8CD8E05F371A53B81EEA8B159BB584F99
56A312742C3F77A95D929B3727F81BD63F9FCB03BF7558E5AD9A45A82BED405B
D702092304AB9D225756DB5ED80EDA7CA25BDEC5771D181EF053FDCE172475A8
AD603F77DF66D72C5ECC52845DB546C1865AE5E78EC73B1A44AD60FA0FE1C96A
BE9362C82AD8461986FD6DBCC21F541334F8B7F5B02332E570EFFC12D2D1F235
C576D7A72F43F3B08F6C00CC74D3910A0311B1EFA3293BC2D5DE6E368EA65A9A
EF39E036223BAB5CD6698E672E5E917B6BA9B20DD1E4C6999479547C9E17EBF6
D3905D406D1C3F1E93EA46421F8E165B408B140BC84BB0229BF33DEBE7053EC1
637CAF63E39F4716429320D8A0D12ECA3E64503A78A0C2D8A29B1AECFF251BF9
D0122173B9A8B940254B935AA01C21EADEE87837A9BBC44566A5668F75BD9754
6CC8D12E666AB42322210B37B7A5A6C58E4AE15E0A9D293BA6BBA0769325CDE1
BCD8532A26A93B0E7A0E653580435634751F7DED8B8D0D995CBCDF16D1EEBD0D
E65A386A3AE51774DB7D8A44D93FB7AFBE2462EC1F9CF3D3A342872D924A7F46
9BEF528C40DB27A474DDE037F8E1C32499C35B36FAD0471E280CB1E28F91B715
789EC5845EBCE11FD0F734E0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSL10
%!PS-AdobeFont-1.0: CMSL10 003.002
%%Title: CMSL10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSL10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSL10 known{/CMSL10 findfont dup/UniqueID known{dup
/UniqueID get 5000798 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSL10 def
/FontBBox {-62 -250 1123 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSL10.) readonly def
/FullName (CMSL10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -9.46 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 57 /nine put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 89 /Y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1BA6FC8D4362C3CE32E0D
DCE118A7394CB72B56624142B74A3863C1D054C7CB14F89CBAFF08A4162FC384
7FEDA760DD8E09028C461D7C8C765390E13667DD233EA2E20063634941F668C0
C14657504A30C0C298F341B0EC9D1247E084CC760B7D4F27874744CDC5D76814
25E2367955EA15B0B5CD2C4A0B21F3653FCC70D32D6AC6E28FB470EB246D6ED5
7872201EF784EE43930DC4801FC99043C93D789F5ED9A09946EC104C430B5581
299CB76590919D5538B16837F966CF6B213D6E40238F55B4E0F715DBD2A8B8B8
80A4B633D128EB01BB783569E827F83AF61665C0510C7EA8E6FC89A30B0BC0EB
5A53E5E67EF62D8855F6606E421BD351916549C569C7368AAFB714E22A023584
8B1D6B52FC6F635E44058690002C6BA02CEC21C54CC8875B408A8BB84F445894
5D6B3E4841CA20AF852A660FE9C832F773691DC6F7197FF3DEAEE97418A5ED2F
F2AE65300416227CD3BB03C29003C770CD7D2A7A2E4C1DCA193651C2CDDBF93B
966938788694BFB562AB0010268955FC3555E5984CCAB0A9B7590C77C9BC713E
A29E5BD7193A4E971D1752DDD0F0AA4648E7E87BBCE66A1E836C715C408B07A5
9EB56BEFD4596706CF839BA4CFA90CAD4038C1E006B51913279A2C31FBEE5BD4
A7D74F9103CE6124F5B439CB860987DF44FE17EF88EF1BF62C67060D25696BCD
94ADF08F04E349CEBDF9D3389D870D94CC05E393B3F4362A13A6A672EE5E8F5A
DFE7046AFE3EBAEA58FFEBA4A47BF61F92E2003756DA643CCF2C9DFCCAB62669
E3C2A18D690B64D907F50BCA155A85E47C3A6954C6FF7ACA36D8DFCE777B7929
5F5D5F787B9C247ABF13D6D7B4A8F06BA25CCB342F8A5071325CDA86AD71BA23
8A9695C7D1D50D0AAC267AB7CDBA7AAF46A264B7B081B7E79AD937FEE4969FD5
155A99E652461EFFB4BD010E5885631E2B2497D6B8C43CE77D7D47FE201DD46E
4482FFDCE150A1183C22C004A0AF0E1F42AA6804E038E1DFC8B0A3CE26B52038
44D2E7F759DA5C252489E5525963D68BC27C82247BEB18818C7D4CF0BC5CC97D
8C701034B8DF798DD4CE36C3F8B1FD40B2DA14EA75583852875031AF8C909EE0
04495FDCD04B05A5EFEBA56A8CAC1F57F1B8AB91FB25C81CD51EE69D6E0F52CC
A0E12CF7E3187D67DF71A599FFD895FAA7BF80E2E6B96592BE77AE96905BAF0F
F547355A36C443797DDA7C414AA606CF9153E03450B77D1BA4088D739DF55F07
111B9E11AF37F45B6EDE6D7AC126E05886A57C83886DA87761BE600DEECD1344
8A82BD652BE7ABFE6A0F50ED7C6F4EE12CDFD80CA7A5518692F267C51C3FE76C
567BB8DDBE09A2AF901F79AD02B435287CB8057B3D5EE6655071F67B00438728
C4C3EBD648BAF650993AFE5E2B29074A99ED0FB725D9B8CE8B0292B08A280214
C3AF252BEEAD30C88F72E322FAC3E9D78A1038F5DFC41F7BF1AE3744A0677094
51B77C2D630B67853FE5E975A395C06A4D4DA744040B272C2B88D8B7ED3A2C01
66F503C9DFD3C7DDAC865900D2A4F2CDF517F449851DB1963468D0266D7A3E58
9F6B2A1843E6444274F16A9930302DACD8D2BC4588765099A86BCCD8A31DF0E6
2853114DFF2D19F812F19AE6C2E419D7AC1BC024D1195074FD0C6717BFB389A4
4D5428E7BB2E4F9E9FDEDED7BDCBDD3460805AEA0B5F6460C2FDF19273CE5BA7
5D3AAE0DB94C6AFA8339646191C23B0149E7CBF136FC4C844E025A38935DF256
0A0A6466A45EE8B9B23B6A055856FB084F87C73BA28F1883E3B184CD813C72F9
233B78CA4E125ABD26F29B92CD9DF39D6FDC2A217E2B6B45D9B0A4D536790A5D
BC0903069565A442FA7466414D948AC432C6B75D8D0E1DBB217CA3DC38A52DEF
62E9D5AE9E753956C13819D93148C7683BE4F71B80BC066D8C19FC807FB1C086
B49215DCF56A91A42089F0D063B9981925691F7DDE3237403AC714F5CC3ACA88
DB2F1DD205578C00472FD70C8BA4F752E3923ACF3164D442A6B639902ED060D0
C5777BC20F9A3BDA60FA3BC986C38136FBD2E8F910E32EF36377C9CC187F4AFA
CCEC423DB925B378522B748BDF12D523804CABA83CB5A7ED69FAB9AAB75EE8FC
38D9866E3754C4E2F2B9AEFA804044D878DED0E114EA0E9682FCF38F6628E63D
FE1C1B5615E54FAE8684566EDC4B616F76EEFD6207E0386F06D3BFFA26425F24
303CC7C8A8D7021E7D09B202616988287838C3DBCE3179B4FB5C726E603A47F2
8248CB508F327D1291CF3F08F7C88298DC2D0F778D24304EFCF6E074182BF5B1
8E6551811FD6991971692108E289B61053D6DCBA2925B3903E8916EBD09D97A2
C6D08E89DE4C0CDF7185E1E00DF456B249F0BFC686E04FDAAD2772DC2C39DD53
9C23A41471267F53A87E5C2B8CBCDB66CE0B9844BC506428E6150B48D2FA6363
4FDB2CEDFBAE0B7DBCE4D83E29B2955F8966272CB865EDB360C8A8C19EC62A29
03066483E4083524A1E8D80FE3867BC1AA91753C26ACBE8489AB0E3330206212
93E07ED473DBF457EB8489E66FB4B8ED8A9EA8911CF9308CFE3E6D6F36810EE8
91CCB11BD548617B2C683C354452B9229E7C9E68828BBEC324420DF7C188CCE0
FBB514547553A7E9B38AC265783891F42DA472388569C8E7594F7E8810895A27
06E456902A8D9F65CA808F1FD475D011C4572F8A654BA01D67942226A663D179
95149FFF41A9F55AE84EEB9A6A39C017D7E4FD6EFEEE7FF3CE847CDB064A4954
9DCD273B810E0F259501BA4003A3EC1ABA6E13D24C0B57FF82D6DF077833B6A2
7EA54801BA81DB961C261689C0887FAD83771E55D3D137AFBB21779397E11972
6C6CA922F45AFA5C0526863A5AD8B9C0775CCBA17FFD37A44CED4710884DBC31
5C9D3F5441595B86CF7CA2EEE42AE87896E9E60EBF5F35C2B7FDBF9A9CDAE262
3F48396F0F741E9DDF1D4FEF75E68AFB020D06CC29B3A7B2ED819D1AABC12B91
CA2A65F1AFDDA2F3FB322E0268DBBA024663E49EFF076455338FE31A16B04EC1
797EAB0B49AFFB906A0690A1E8E2F5314773E1CCFFF43E6FB3875AC907F0C5D0
DCB9BCC127014D472463560CA0CB1C2CE614D94177C7A52A5B089316689C8112
CA57E35D716D956DBF9013B1E5B9626456B1433C8C15FA906458F957133B9E19
8D46DC3AC015F7602538C2AE3927C6DDBACF38E59220C2F5AF36B68DE9117C51
04CF7DF32B1AF55B87D1D8A5F4BCFEC66F63B32B6548DEDA3AAB06C5310E4757
78AFF947DA22809B360FE535506A554DDDE5A6F2411246653710ECE5CD3185BE
730520A766C47E1ED01890059882BE1432586864E1A86A7F586438C8DD35C00F
021A741ED47E0F16DB6070ED0C50038632CA4AC2975578A8372A080CC0447C79
CEABDF2BCD5E78564247B0F0025F556DA8FB62125227849EACFB724A4AE3EF57
90C07A5B27D2E59425F56BF8AD84C5F5310FEB1BC73D536339FC2E6A5BE2DAFD
97FC835E0D52F680F80ACA37DB498AACF152B9B44626CD89E3302C3EE1623EE0
F998FA78305960AAB9F483F731F5F67A8C963C23DB8E48FB804EF8B86FAFE7F9
4C09641915FA7E3930AC922682313408BC1607C76751CEEAFD660206A39CF394
40ABE2A313AB7D5FD6444E219DC5C26734D322BA268D330AC17959A390D6C8E7
3A155095BDD66516DAD5D65519A7FB871ECDA77061EFB21F359158B4470EF79B
362C35C06B85C9A9505C8361939C6AC013F2CFE8EEF46FD8CB4452AAB3EF1FA7
DC066557BADC2ADDDF7DDC2A0E1DD4A357E27A2073427EACF9B9035DA5272136
7DF37E26D96ED4B2ACD60596E039BCB15E259C72FEB3344E3EEE3D4F17DF4233
04C1416BCADE80BD483DD8C9AF979E1C7D50C4CF015870703F88B92C4FE46AB8
DE6717B55C460C805B391B84333097E116F4A51F631FAFAB34CFC925BEE8B72B
C9FD5F5A79D8F2295FBFAE649DC6AB47794AC7D73431FFE5BE992F2B5AC67049
B5208251C0E442385A9FACF25E3A98D7F5D4C2A1ABDC600AABE84769CA83350F
9B87F71CEAD3600E02FF9AC03C1B5C21C84F911511A0CF0111BAC7605EE31229
3C526A79D943D92E1CC3C38ABE82D560CFD4172F318030852A5FCC0534B8B3FE
D7365987C8B48A072907B26CDC2108130A33233E8E0BB5FDF14FB55098A10EA2
B51AD9EFB119F82B08D256D396D3263FBD9DBF172D43A90ACD1A31F3E89E8571
74BE98B9560E2CD661A2F93C69FEA3FF26B00772AE2C2C24B98D3D122EA2AA8A
44652CCDF4EF4F01CA7D62A976E23E8A86291F43BFAF38FD9C325E70F9C36CB5
A181DAD30156E98339E6A0498D3420B7BB3B4E651A9090D4A17604AE386273A8
3D4AE8CC18345E6E19DF06BA848F203F74B161D6A8882991CBA7385F308696A1
BEEB0130D938A764B98A2001A38489B1334025EA848CA44A116D64926D460D64
01159E77EA7ED9ECE7BA77635BE564A4ED89315BDFF54ACE6AA1A26591D13CD4
6D6425CA7933769B842192858D10998509396829263290A3A7CFEBBDA3EE6CDD
DF1E492AECDFF7941B53573F01F623CA0A5ECC9D05A3D0954F7AE8CE94AC3B2A
CD4E27519B2E16F033EB732AA024BBAF74626DB55DC74B1FDDB07FAE98B4AC5C
683CFD8744F361838D343B657EBF52DEEE7AEA7565C5BEEFE455DDDBC4DCCA7D
87D6D769C5ECCF14118A14A85A86865777C8E28F953160D5E82844AE54D541DF
550D5F1519E183E0C42BE88F0458CE8087F2CD4B1B49A8E9E3D127C4A4CB74A6
2E73BF4CC317781D03FF04BC36AC0E4AF99E2ACAD20F6F8029DE8A035DAB40DB
17D237850BCDD05931FF4B0FE2D0B79EC5A88FE0236271CCB075BD194AA25AFB
3FB93A5206F61A14602E4EB6F1C31C654527CE0C02D04314DF9AFD710D0EBB9E
F8721B97F5FB18E27507E1F800B5509A58A1A8296C72B7B73F99B6CFE42E9C2F
B63B3555475E562672645CD374BCDE937A9B05A157FB3E74C8297507253E957B
1A9DC421946734CEFA3D5EE357DAC7E9DE17A5BDDEF6B2D2A740BC58128FC514
61154664412BA1C05209EC992A77B7CA45AB7C0EEBF590A5B5652866008CDEF7
124A3003AE6A7CF9DF3C72750CBD281358CD2FF25B162B78CBB971DB3477F8D2
ECA3EE9CBC90323B2C236E375337EA0848CD7CB5781A2B0A42DE7E4D99DB2746
0B26796CEE129D23C76794B7CE21C13C7D4A998B752C8CF43A4821B736EBE246
D2A2BD7BA3351FBCD1B0A501EC1EAABE60D06DA2FE39BE1F0AD629769FDDC933
F9D02F9686EC8C2D7455C26AF4DD3F6860B2289E3A30E1C254AD17D731CB73B2
BF4DFE90CAEECE3ED0CD3FB4C8F4C7BE1C056AB4E9B95781A8968E3CC1010003
75DFBC4AB9F6B27C5A9AD88D94441A8ADF09EB275E5F0E5E6F3BFEA0FA8C308A
8593ABA0645ECA8FDC3F0E264B35D4B0DDB86B93CD8A047FC409E18196B501C3
B003622999C47BAC04FD1ABD8AD359C977766E9643EF3BD6385306B08EE3E13E
7DA5A06AE33D17A3D574C6390DB6E9429754B210F0C349C359559C7EAA2350BD
F61D4D8A92B1AF697BC620FA0351E67E0D9F41A95A47EE0BF210C2C48691901F
F905F65693DCB85BE412F097480F6A7266AE0A928729DA0F691CBFFF3B276EA7
322BCD2206D96E3DAFDFB992CA8F2955F0E8B882729DFF840569D12E4DA1775E
523AA734552AAB6F2F16B89B39F1A3FF0E07EA08D13E612F201716C67F327017
6C041760DA30374434808273062C1FFA2C47B3FB578807BC26537F542040FF77
66C995EF3E8B08B09FCD3EE89C30F157158A739606D2CEAA26694A4F1CEA6633
B54933141CB85C60AB262E2D4E824A3B85C2BEF810DD774F296AB37D0BAE7182
5648CD18556ACB124246A75474B232D712C2358908B5D9A76F82C626BFDE01A1
093B8FA6AA0B32F2CDEF737B28BC0448FF816DDB5812131DA0DD5979D77C3838
B978CC3F6778A4BFCE9A7087EFB19749285AE4C92B99A6649DA349A2E0889D72
6D4FC664522F06C8C4D86D30BA43ED4E42211217D01636A4E17E2A132D26F394
EC34EA12D84594AED9C6CDBBC0908860F39B240FA7D7B3003DB10322498691CF
A294C0FC7ACC0BAD1EED3E9D60AAE3F7429695892D1A21CEBF062C6129B33966
8B2EF6E932F9891DE6028B81C5E9B23278D35B7F0D83989BCBA25E20E9D503DE
144DC485F09A4EFA1268AC5E4B551C5B2F1D51E9B9B9C0FEE585204F869D0BE0
7287D7570A12940A47C1F51AC6134F03B415C30E147C49F89228855D093EE55F
172711F37776E97A99CC4B36E2F10713E36FB279FD3FA5A0EB9F3938F42E2BB9
254EB8F0C0F30391735019E02BFDA21D9813C6A22279B898EAF01AA892B14DC6
5912B9275167AB46EBC420836CC1A5F38A4EB47C039A7BCA62BC3FCE4199FC71
011DD6E5FFA0F3D7F04AC02AF91B9249B9F993AE346572329DA852115BEF8460
B94690E790003586F473F37EAB5AC2922F5F663EE2C3C0C336A8DB71650631AC
0A923A389AC911CB215EC2EC7D50CF8AEFD59EBFFA53A9F1FFB7E6215F17093E
3975F186FE23BB5FA5474C11408FABD223E1E6F62035B5A5C1AEFD8899F00FFB
E729C2D5FD551E80716CEA4E8281660286A802AAE8D5834F37F2EAC46297E57E
993B09251DD7789D3467417E393B7DEABD06676B96241B0E43ED1A1A9FC3B12E
0D34B2B0792B79AA648FE9450C3B209FB6D7D91F50C52A5DAB0BC81A8B698BD9
18946EFF691912D7348D48FE68CD876FC6F71F81165D0C3272DA1A992308D9E0
ED6D0A4DAD679AF495F62B78D462B463BD4A40931172290C615B3B3B6B47E45F
CEBB85E0A6AB6832067CA6D403C239530D07F199788AA4DD52553836851C5228
1072406F6D7323A334E7A7FCA588897C4FBA6D4F7DEB65525EFB74E539C988C3
A685A98752F7198E77E456A545F0D23A1BEF81EF58B02D289CF980A3F17BEC8A
6F83DD90C4A917EB0E5E2B444A608E2E9D2FF80620E16AC1D7775C0A10C1299B
BEE0E1AB24C50647E5CA1DA65CFF3B2C295F0644CA7826E1DC6FADEA93D66A20
DE852F20AD224D28DB900519EB1569837139C833F24B799F7EBE3FDC14235323
1D0BCD4991C861F38DF413A5A5588B73AEC3BBFDB885CE17BB3E97B4E6A79761
93EC8418C2BC4725CD61B5E30C07352F647C3FD50083878C13CFAC241DDCB082
E53703D182068727F9EB6FACEC25F6D901D7309ED7370867E34E267519E22D62
4FC7093448BD0D6B1C43D318A3E14C92032325C132AE0FF7ED707E1FA4A955FB
F5224BE0045CB14ECC321D0F333FE24EEFCC504F7C756451D7693C3E6CA87526
4912E1B6DB935BDE76FBFAFCA4ED473F1D2618812CFF25A6859C626A216603C1
361BE3E071FCFEC2D4BF2FEBDE07DBD56A1BFF8303901168FA06488BA6B76F36
95B0A90D7724E9ADB567C2ADC65CF3482CF47FD1D16F70AA19A97D0F9EFC611C
AEA5E1ACCDA7FB2DF05E9480936281484BC329F0B771775E73F7FD72FE3F45F0
50ADBD03932B38F37A8F0A66B2F739EA3AC8811C8F514E68C5643E4AFF485C81
88475A523D7FCCA5C8809BD49846C77795A38DC6406082000236A4D2628B5932
AB7916D44EC2210CB941B143FB218EDE899E4C47E0081BD91A7BAA1D80F1562B
A19D442C49D1295FE662395CA9143CB136751300AB9F9341255A9BA1323DDE0B
DB92E2D787DB0F57D7600215E8FC23ED8E1F0D3764780499D425D7824DE64B3F
988AB0C9ED06E600942526F12590D8A239B8AC70E319262AF6A41B2D45B2C200
5DDD22E105A1F4AE4D2529C9B9A1CFBA75207C66D0B692FE7C9CEED9A54EE660
7CA1534C4D5B05FC33F83790ECFD7641DF3FB94289E2A1F6E611ADF045E0AF3C
46E2F650CC36E969855BFA34B66B0C13481151129AA93F8003F666C963A5086C
8F7DA89ED6D2616BEC5F71C3D5C65C821419AF3C96D8B886441B1B129C103CE9
71961454C9E8EEAB50A684882F5AFA6776BEB4765C6ED70B686F135C483E6923
656E924A1A3AE8B1C8F2534E57EF4B62EB5F60AD32CE002FE7F15CBA8F8D641E
848C586A3C6883B9E80168018E04A8BA99621D80DC7A610C3D0373172253EFC7
39D756DF796BEBCF86194A56E68366D6B183B9D280D500A2507D68D4F087873C
9696261BA4B1504F28F2E2081983545DB432BC23B3E4DE6BD05255B88DBA72E3
B7790CA90ECEA5CD733A8B4DFB8275386B0DC0984C1383635675696AECECD71E
9E1C957D9C75A7C96112FD17B75C36154F3254A7074C0ADF8DF8737E398F5472
0552B9B8988FF213B40DAEAEEE7AAC19562FF067FC4EF6D7C6E18F9AB056FDBA
2CA3EB0BB4F2C8AE029B08B8FD6B7B58D1F53725AD3C303AD3BEE36209B5CD54
3A488FE08C9923C005F1393D044FC2ADD84F1DE6AC9D4E33417FF8F784E4B524
29BBCF33EF646869E88AD82556B716534CE43F18B66EC02825672D8FD13C8E71
6505830E432FAC056BC78E3968ECBB08AF72C51D8AE9FE826E93E886AA2CF0B4
B3D81E2314F8F762FA279BABA8F1BBAD60E161C51788C1D759E51940BBE37E8C
32E0A2A0ECE8C238B84A6A402C3D97BFA325CE8047321BDC0ED39F7BFCB42E6B
4D1AEDBE74588B0D48A9F51C4B16636A621815A08A40D5FACB089949CF04708A
B25D77653FE3AED2D6F5164FF6DF453CA1631B424B40FB2F1C86149249F98821
7EF845B829B02BECA9429CE57EF095AA9A722E14EF7E7DF926FA2D4C688F5426
C8971D2279D7A17E9C3C91A5C9F8BEF81D635EA7F6932D52BC6232F92FC49DBF
4B87ED74ABADBCAFBAE860F7ECF084F0D948ACD4424DFE482640A5C761A3CD82
56B656F2AAACA816FE9526FD8E812DC05B3A2E9EECB54CDB82D64B86B9C28508
7CD3B27D38CE0EE124D986889C5BABFF242E81F47FF6E8B877769444CFBA8029
F0DABB3B9C787AA9006B067E15AF270806F1E27E0AFDCF1058F7079F5FB2DAD3
3939DE68FC4EC2D39905DAF91BE0D08C94E25AC24E413F7C2B8D46C941D59CFA
44DE817F610B451BD226B8AE1DC2D47D0ADC3A72C28EBFC6E221925E4BD8FAD3
C0EEF54B82572907F699088BBCED5B28F8A479EE48F5B1A5F0FE14B5AAF9C734
3A900F1BE0206CE4D7E43676DD4E3EC95428238B5F045EA69EDB5596945915F3
02B7BEF19037A1918FF9278AB9D6327717B416D69974528A9E5F9932A70B2CD9
95DC9FB60DE642D56BFC95DFDEAF4CB6EE2374A19AE60F5C35E144504F30AAA9
795360C83D53B5AF88AE90E386BB9FDF5C701A40D1AA7FCC47C3AF4CB8D2C8E1
952757719CAD72528B5FCC826F561E710B28C8B7DB5401BABDF8C9EF537FC827
D00B1DE2E658382F0E1974706F08F7C4BFB9070CEFFBC3F8363B23082865CA01
922955A46F1DA366AEC762FAF109086E25F40318554FC7E88C2EDEFFA54A437C
50BA24C88EDCA943B555C44867384161EE8E727247AC8A9C9BFDD52C57D851E9
FD9AB9D8504CBC1CB8573A17B45E268053D2F7C14C777716388AA987B2660B04
6616B5592062BC37EFD71A9730ABBCCDEA6F7FF4E47DC100D4B3BCF4C461E947
5BD5AE3161343058E7796950C0199721F345AD5264C696B439EB939D96FFB38E
DE3B0C400AF46F4A3F069E586B097E96F7CDC7B6450777F34C24A7C4F7A72454
80D7510D350935F033C763AA9086558DF8008AEBA2EB6EABDC92B38FDC45E377
51BF6DCC18404B503102631DB9D5E31592E5F48AC5D84701F03BDF04996BCB24
6689ED665D1135380A480437686B041333673FB806F4F99D2DB5B24ECEE24E9B
EE60041D966B1E4444BDD55500A5ABCB6D3BCED34EC3982FF20F9B4923F6F3A8
5A1DF32E5FA82B275C17075A53E21467EC869CB7FDD982C5B9AD87AF148ACE8D
C4047B56EEA6F965BFA3AFA50C0A1E0E2C8C19C78766146D3DF08A9F666D8F72
A9C2DB4DD43D66EC4495EBEDC331EBFFD6E8F138111E8A33E77A8EE605653374
5528E35FEFE8076124A9EE192BA53F4CF8C286BBFFFC0BD2A9E87FF22B0BADCD
968832620DBD452A12ED3FC1120BE81DFF4ED4D6205D9E835CF63F8332B52509
CC5372A3D8210B8741F2769B34FA15687F78572CB904B0AE9118F95E0AE1DB52
66D444877EBD8E00E7B276D017B109568D9818461D920828BE645BCC2FA76C09
DC210640B2D8C2220D1C6EFDB8C3FC2FDDF00599352C7E2E79E61AA978BFA1BE
71B4D889CAE39A56160146DB2A373E302435AA215107722692BF4BBD7A5E2749
E0F05DEE17D3AEC6391D3DBAA5A5998E1B4EEF2CC12F2C7D695A7486C1444181
FE4D1F0D19E673588BBF2AE1232EDCB79B2889E8898B2B5AFBD36012C5C7FEBA
623A81498C1C0A4CDCB50E70F333E6BC46900655D3D123304F14B7AE5729990E
9D71DD15F76D829B52F62E98C8735D4BB101F165311EAED300D70FFAA8FA93BC
F32E57DE521281874A67070ED937093E9374A8385C757D9D4DC0AAB79A9E0791
E07AFFAA55C7EA9F542AB9DC197ED12D51B0342AA616622F863AC04CE0B49E72
D7ACFF9E801ACF2851C64FB580113285E69EC001D7B3CA2D81D0DD1E6B43C5E3
71583685A512D9FEECC2F4636C75E3C57CB6707B5AA3C5AA35340FA8A4293B1F
600D3EF64460D947B580BBDC0BD96EFC5AFD602CB177EB2E7DEF59EE13E7629E
ADE0DF87906D45603302521ACC63843DD4BA678A933CBF5D5CABBBF19141AF54
8F0F100DFBA8D55F3CA5D3F390E49EFA5E287697B63BC4B092FE8FF9AC8795D1
F9E52B5575E31DDDBC2AD2B526C6310CEF09FC58C3776A83B5DBBD38B825DA76
780F1549D132CB0B3ECDAAB830ABD1E00DA817F105F458A719AF4080088EA39C
7895A12ACD6DB41B008C89B5164D7AD046B12646DB70DD43FC3CB1C4828BB64B
B3FB9C0125CF238CA08C5592A867C7EF2C1410264D5F3E1E16AD7665B3F745CC
DE1A0542FA002468C4ED7FA6B6AF50ABEA09ECFF3F0E38DF710126EDEAA83890
FF603CC4A8B1E579D16E129866F5F13E2682CBDE2B5692BDE2F2B8BE5703E919
030C0215D78D512D61CC0DC9510C95BD1DFFC148DB64CD73FBADB43AD72CEC93
87B77A96C7BFAF22AA60119FBD2D3205672458187240457EEFF40BB6B69E7768
EA7E028BDD99ED27C3DDA39B7154B51BFC2C789E2B26416334D771B2020B19F7
E78C7CDBF5E81BC005CA2CC8F31DBDDC937CE8B39338A6EFD4F00E836398567A
6B24BC18F2E37E500008A52977F7D43A453A36FCFB679B0A9F1FAD2833EAD896
708AF83A20F9F5DB0F502DB1D95EC872C8306988CDC44525FC827184CBBE808E
09D794980F837C80721EACC9ED5B53D17C1A47276DA357D4FA1A0F0E1F2A1F65
7A8E9AED070E5679659B41F4D6E2D6BB8316F6205AA93E698F798D5F84786222
7D64453A6340AC00BB3D8BBA68C114F12FF4DE0C3373D954C55824C7944A9A17
76F233EB9ABE390A2BEE24CA1CDD0915756B33908D465E3C72B42A3EDC7629D5
83E176904938FCCE6306C96A963457897EB1BE22A9A77CE20836593420A0A197
B298554A599903406CFC93F3DBE6419FB8E6BB7209A4CC4AE835792D542DB9FF
81CA074920E40F942503097CF7FD920CF43C3A6A613EB618D2A958F24D038A56
1D75B551465BFC62FB41DDC77E6044B32A011BD3293E799E39340B5BBEC707C8
0871B05B5CCA46B24D52787BB4B15F601292A790D5F01E985E7F35B8E1F772BA
22F89E73634026C95B638F016DB3FBE40262BE990046AD1C48DC2839F1264735
09FE463B63141414D01CC5A123D7C2FA4BDEC52968D14E09028A8BB4116019EF
7A6C404DF39F1E56264B8E31F722C44EF4B06641582241281AA82B47CB674235
0F70A2428E5388C5802E54DA382FFA52A0F99AA057460A7063B846BA8113CD52
F377AA076D6420762F42EF05D317703BF5099AA0993EF6D2F344C6AB53766095
FB9C6E839634A4D8F20902128B218D9BE6A0E622806C3B08BF943785AE94A0D8
7BDE0CC35C1D9C6C64B2452575080071E3EFF6F3E31D57D25275B87CC9361268
F2DC7D53FB216B7F74AAC10CFDDA8CF825B1D3B00A808DC952FB1D061917A736
6126578628279033F6541CC64DF24EFEDAD670AEA04074CC1E0D5C80695C1BEC
8BAFB8D59F948D53EAF20972AB467DFBECCE8996B4E7C6B3BF480976A873C328
A87115E3DFF1A9AC1B5300CD6DD8E3DB4908B30163B5DF94C57F39A21C28B3EB
FD8FF700F15C8C67C7C125078B3916CC46F9705253C458AB726DDE67393170E9
24769659865B0D48CE5676DEA54AEF86365B2F1C57AAFA41675577B500377FED
261A386242BA66AA5769A94696E8038446E0575EB1194AA9635568170D7396A0
A5D821D2B7F37A43352667CAD3EC4F68CBEB4B5F3FB2179C3544ED9D0296838A
328482CCEAF909ECCACD548179D4721198D7A6F49EF9C86234883128A8FC923A
3F5D5BAAA2E28B8C9CC04C29E0A1CF1602EB7AFBBC8996A310AF8674E9DBA454
8C966BFDCE1D16A03556E21635DA6852A6224A035D53CF057C2A94347A9CC675
807CB3651312C24A00364981CCAC5FA7D2C646DA203FDB827DA75E02A3E9BB14
1FEDEB689297BDB3AFC1A0A94AC82E5B5829A92D35C9FEE209933944DC6B2875
6D86EDC7F4473543B3D2FB9B9821AB20883A8D5D9620798781B34CE9A2474EDA
AB2A69D9557D5C351DA87CFC7F3DFA5B9DA6E45B5F79A270B209FCFFF21D204A
34685B40F4BC2D612079D614524AED27C7A2734812CED3DBB95A982466BC71B8
56B09FD1FB7029D16FE287270922DB7E9AD91A828415758AF5AB5925F458994A
7C2252F9B0EF5D437A1C2CA9617E7B46203E7F566ADBA3854B10B9AAC4A70086
037ACD1F36FC949145AC4C3564BE4F5653663224D404BECCD98A2A5D8A876500
D9A9BB86BC8EADC1C6AD14B9CC2B58F629ECB3C77A0B9074519543D3705C929D
3F63625182F83E1F9272EBECC04E673C4A781BF9E1890175E579789EE9EC083D
F1D19864ACC18938C7AAE41A1EE9F3C8320EFEF18B7ADF7534E3C07BD1DE2D72
E1887D6371E1B33D6225B93584297948BD8C542AAEDEC421D576DB297D0960ED
F0D7567EAF3A62E8DCF6B2069D992D40FE04C7A8E2C5B1302E93A5DCDBEF72D6
3F320B2890D204E55C3DD5C9FE80F4C46EB9B67EE2C73F9049D8AA6C5F4EB82C
450204F8FC19B2B4FCF57A307A16019D6321800A44CED138EDC616273112A671
D4118C4A06CF35E85DF6DCA2298CD5CDAFD190AE8744242121CF840F0AC53BBB
BA671838F2233103206592BE5D34025FDF0B987B66DC80F1AA20F7C0A605C1A4
7157C7921258E7224CA0E2CA5F2ADDDB3CC7CF082D2EB51066CD5B5B6E799E89
A289B1FD1FD3C3FD0005B8DF914B2BED63287C4DC7A8D19FDE1EF22C6C34CD1E
F16F566AFE965C7845075F62A3FFC312A6CDD9E5FCD8FD146FD63BBF5B7C3234
1DF3C79727F296F25F0D192607A1061C0082E5F96DEBFA85D9B71D60F995E094
28B7A884329C48091B8FFECC732DAB4B72DF8CC28451CE03B04C5D6B99E566CE
B258994BE89BCF44610F085652BA05B024EAA717C73E6A4D3F0982B4E43BB2E2
5BA1FA573BC85202C33983BA37A0964AA2C0E130B2E82A913FDAB516D1233850
AAF4F7BB26E01E8196D46A33F3485893EB4C68A29D39EFAF934018FFF79E8362
CF8129BCACFC0E38B3BCC6FAB352281052E787738DC8BAAFCF8F9DD5F6219239
95694909A264F75BABA81F106DF8378F807BF7C90E0A640A1532C20E9CAB0555
8804BEE2FCD6C35A411BA7C5D111D302ED4AADADB08CC54489C5B1FB2B815F37
C4E62D00630787B37D5D25BB957FC2382D062566CB471D9E00C21F4F637E9160
7ACB3ED42E6832D15EA3779E19A6CDB23A1794900E6E945FF005EDE848D87676
C71C886ACB3D1022F78D04624F2BF582BCD6841957D42CB293C3080E6677EDF6
79E1F3CA55491E91B9256786B6C31B7B3969EF724231BAC7D06425E5B4CAD5FF
408D81DF60DA1440553EACC549C0A8E65C179C8711D319A05DE30215E56EA482
96D205C92BB03C4901795080F2502CC315E08FD2479EB6FC148CF435F1FED5E0
7E49329B38C04FAAA8E99BAC1EAEF06F5CCDC5046D97C1A9DD1A484082C5F187
0BF6DE41E2B5FF206C9DD87BC1989A3066D4E7FA1D527537F1D4B23442B53D75
D772848AC2FDF19FEA3810A3E9CFDA6FF84FF8FAE15633B8FAE28A6B2A683F08
DBA1419625002DCFAEDF57000EF7DE1DD1FD9E1C529EB3A18DD5EAC7B7943C4A
602D7BEC30B9C65556C165600F8066C4C80CF576FBEDD6F99B73954327C45480
8C3FD7AC9EC5F92C6C01B7018BD702271D4B9A21C50097C6E4BE3DAB810E36E1
803D532B48FF62AA65259714C375C8E5E11A15D88C93EBB2F77C3951D6A375A2
6966FD5B210F60FE9F5C54ABE59DC663A89F8F15132C46171CF2BDFD2C69DE9F
067D1BEADEE649BC5835F3BF5CB1A3A37997FB33936F7DD4EF841440229A0CEE
A6E4203DCC4A1581637F79529C3CA532F751AAEC3ABA5A00D9174F5843BA46D2
EDE666FC2B3711F90713EB57C1EBA42A8D14FC1CF264A1C8A1C125E4286B3478
CB831B8F510FF03E1B4A994AA7A1EA15B824B9C020059C7FD164E5F51DF57E18
17F6DB018C1FC90770D4421C4C1CCFFA33CE2C2E46730E983EC9AFD58ED5DB30
0BA8912BF7FDD570E897F152342C4BE5EA7126558D4B59D88920BDC3EE0C8C5B
449C42002C75ABD706FF62B87850763E401B4E81E1557D7CA0F544DF8D7F1547
33F78CE489E52D34286D1CC2A8154EAE3FDF770CA259DEE8227F7B42809A58F9
A60F38DC109330651F003BA41F3A736AA44E9E9C0EB2071C192F69EE52104EF5
799C5AA3925BE71A77A8CD306DFC0B739880193268EB2E1723318881BE328E78
4BE24FA450CD43D68CBA4CFC284BA4BED43C43AE07448A0E9C66D3EF65A2141D
7FBD2CB728A3211ADA96C2900392B7247051389E26BDE521B5C55ADD71943BF5
BAA5420C8A89F53D457740B1103E41D5D347C92A55C200F4A7C85EAEAC657E86
2C028DAD0AB8D6920DABD2DE584E5A598A8FA3DAED3DE4CFDE6965B5073C1966
2EB62B95BC86D71FABE4EC036EB3E52CCC241C77EF7CF4DF5179DF6CAABF15A6
3EA7170EE27834F181D4E4408B49FE5B2E69E9F97DF865AFCAA57B4388191613
4E4BE0ECFD1457CE3CDA58B1F34E6062C3BB39603D543227CF8F1A97ABBF2CC7
0974F988017AE4D1F180BD5005464ACAC8C0BC3728AD26B1200E82E4CCEA0479
C142BEBDA9B68F5379520BBF2D38E8B492875DA6D973F1597C9E30128B064DC7
7CC9FA3FCF4FE005AA758C9F4E0188EE521803FA85A4AACC4C2EA059E56B44A3
8B63FCC558CAD3B3B70C8C1CB379B4BC4B9C5EC072BBC99344B43A9DF1D91D06
68392C7BBF62C207CC265FEAA8D6422715FA2943BE504A3C542441581C9415D2
1F3F29ECC80DD967D29FC1484ADDCBB9F790698F69850B4B0CC345B7F53C1165
40375CF42B4407A3B40250F14A65F71AACBF4A9DBD897CADEEE89C62903DF3A5
42DCBFE8D7A4BC0B5ABA7A8A42BAAEF4EDB537524AE2C7E9ECD11A0565CCDE58
51D1BD71AE9086C5B472A5ED4DAF138227878D002CD80F66E84F71A6505D970D
728EF8EE67FC86A86A4D19D23A64FDCF9F5865AB0D90AA5B67C7BC8C4C1FE923
8A2658F56F702781484B4E6C44B8A0E4CD7E8A250882BEFFEEF418DA37F5E1AE
27FD4D9FC54D6DFE0AC82D90D726EDBA49BE489A5B4AAD4AB1ADA1971F059F13
85D9980723B16A91E6F83DF6121ED40336D09DB4517BEF7B9FF31038AD52015F
4D2E0D5CAB947788EF69707BA320A6A2ED6357778C5154BACC781F3C60827099
01992D5B60730843BE89B3FE5DECCF6E5B8C924EF048A6CD768DCE7B61C48F05
AC2E0FA0C19CF10E8DD6B9C5D518E508D3CDCCBD1B445990B96C7E2BA7649993
78E249113BB82F8EFED55BFAAA2839525890A3343873725FC208A561D21C764A
D544603B28757B019CEAE8EEBE2210B85B26895EDCF96A1605B3D8E4F389576B
38EDCE91B6B0FBD18155671AB1E6D807D1109F7D5C6A9B61BDC257F9A9495DBD
D79DA7E9428111C9DAEF5F3C2C18BC9DDF7F6127FEAE3D0A01D4C2597DBE1AAD
4FCBD9DBD2DB723C9295CAF3F2EA571793C37ED09F354543C3F2B8531FEBCFEA
6C96C29679EB9CCE0C3B907CF1A773F1D2B514455887A9B9A2AFD1356CD8897E
3481B1625927AB9D2E65B8541C7A50CCBCFCF5C2E61ECFE0A34743EAC69AEC22
7B2FEAC3290BCB57F65855DD9082C4D4A18C926541E50F7A3957818E7F7E8359
99FE7AF718AD0535A494D7EBBA6A4220F2E96D263BD06B3318DF7095957CCCE9
35CCFF3DAD9C2A45A822DA3E820A75820FBB06A5141E7BB01D03F3522B339BC7
6BDAC573FF5E9978AEC36BD94D460DE9B9D08EB0A1A4520C7F2142FFA5713F6C
7B3AE4817AE8DAF61F565419C98B5B3A04DE80DE9D973BEFAF3C7FF09B0A7EE4
4B4B1C8055BEC18F13595304FE3C1F8C83604D16E3506BB4D91450CD05E8883C
4345D97E761519CD901AD0C04C64490F58B295832491460A0B0270DD91B19989
44A84201005F11AAD67FF450256D117D5034A3B7D94ED526C8DA7FBFA0E726BC
B9D3B2D4A505F235F9DF14FC9EEC641524
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158DCD1C1BC03B83FF94C60B1DC71CE8A86B46DBE661C9F8F4677F8A2C7CF1
E41A91EBDA2304735147BE66CDFF2673F09D408297302124C127F0B35690CAE9
CE1679120CC4D582FB69550AD34A047DDFCD9D411724554CCED753DB52D6AA7B
22B0C55EB698ADDBB0F8ED15C971AEF113C74B9E25DA29199237B98DA4023665
C2A63A837E4CAB38F8DF37DBAB5DC80C0C3FA72C8A70DC76B5B36B2EEADDCE74
23CF794B66E4DD3B35BF99893789063BF7B01D5F186B2FDE518B2CF2EDE51F81
38244BC64548AC3433A80B86D6A0CA26D77F403C06D65B7394BF1FC7D06D37A5
E70ACD844E3367DE4DB71312CBB85ADD21D5A1F99BB8427F252D90ABB66D7154
EA5AF4A165DF6415A0880AE784071E6B3E2101F0B663DE14DB1ABF8B7CE0E6D9
D24F9CDD9F80028D37C9CB4067A28D41E879AEFECDA71F649EB3C250BFF809D8
1E427E3BF24E85C75F080D93E0314883988B3A4A2B72A1B4A3D2189AB6ECFFBB
C58151AF05AE335200711ED945E18B4BBCE24A8A162BD9BB26137253BA8B5819
41E759A7CA7CBA129BAAD438E87189F2F6AE7C86F4EA099DEB23705A500332A7
4F141D8778EAF3910486B2EA25AAD16B60DD804D0E5BAB0FEBB77BC95EDED08D
B8941E040D99E8F44E70FF842306ACCF65C0AC9673859DB9C3A724238CB8CE62
255BAF0145692EE3B52643A0DE3E667AD03EEF6C753F57E34AECAB0CFEC7B07A
150D7151E57BB47A4AB8B9C17DCEF9C78F5AE432612D291A0679A422A9DFC0DC
E7108A7B305B6D177A3E42525D2A3297BEBC9AEAF42BD39A752407F12E54DE8D
6E043CD726074410F7B2FF557552B5507E6530F1AE598339D02ADED4DAECA436
BD4D0F30DB14546CECB44BF33E0A52855673E33C43AEAE3BFFBF278BD50C2852
5036F1696259F10FEAFA56A3B7A1A0C0985244A42B8C4DA6E52753EE917C1B89
170B7F90AE6F1298DD7C6EFBE6B769B1FCB0D5946A460833D4B59F8C8A49FB43
5D400A4C278E7F6B8C3381BF49032CDA8DD2A2C66E1D36D6891DB8457F00B3B4
BBA6EB85CBCA21ECE806B2B0538F96B28F83A89FDD526D9F2407B7A0D1C090DC
DF808694BFD18907C98F97F3F3CB27BE51DB34DB9B17671D5328D6D205F19A65
B7E16D569DA22A5A9F0AF66BCF145202A872186AB23654B84393454FE4DB6B74
D5BF9BA5B1DD1C1218921FD978D545C3F79CAEB47E4C81BA6C9E6F517D1EAD02
3C3E03B163D4C2C29BB8A1CDA5E14FEDA66F6004FBB666710C206B78D6B9EBE1
E55EA6ED39B1D73F213DDF7C16C479DF658AC6B29DFE3E22E33A74F1B38562E9
68F1625DF4C9AD9AA2FD50D40902264E6EB14259E3F1124D5A914D19647E93E5
B3AFBDD4AE2BAB4381CC9C4498EAD3B5AD20BF141E4C2CB590D3F42B57A69CB3
BCE709A3FA802F854089E406B507D64CFF454C5CC598E127EEC7FB8DCB92B74B
AA379BD44B2C9A52A908604894B83E57C293B27F23C4B9C00855D768904F874A
723D1CAC0E6D28FCA94FDBFA2DED5DE79BFACC61A7A350E39FEC75B3179FBFA7
AFFA49C342AF0EDE656CDF7E59EAD6779B3484CE66849F5DD8786EFEB0341790
224929C26CD5771AE5B8DA154F6F4D640FF94A0B0B027E483F9ABD1188942CDD
09D396FB0630AE944938B0FF61097B8C98ADDF1862804068826FAB1D8A48A370
8F6B3AA1DE3502DDFE94CF0037E595AB10A9E7D237471C70EFF9760912C3ABF3
DDD80F59B5F2A570FD43EE13A43AFF3862063C0BD237345BA2B5C4BF78895E49
CCEF861FB9C1CFBF2141A691CACE19360398D3DB10F90BAC9790D355444F1EFF
554F2A692995EE0690A27891FAF12E07E42102F4B6C69B738D10E9F62BCBE169
BD7ACA22B1E387F336F31438ECDFA54F1D1B22718DFD770A1ACE605EBF701FA6
328EAA6483540563DC26BD9015DA3F03FDCA000383C78FE45DAB0A4848457AC2
E6B4B43669855A76E1FDD4C6D2AC80406A58A6925D581DAF47D0D6DD89AF38C4
9D8E2F3727CAE5BA36DC4496F0D41672C8A502E7D36DBF38F5CD951F914BB384
106AAD2CDED2AAB67EB875748BAE25E194707DB904BF9D15DA7739FAB553B025
5C56DD80186996EAA1E2DE8231AC87BCD3AFBA75DC67618D30FCDDCC723A92C5
D89042576A4E38A3BC6722AFB88DAFBDBDEBD978A70E297A7670F35D580E8F3B
A9BC94F131ED0110C946D421B425338307F90041D351B844947C40B5D8C75ADA
3F1A5FFFDCF4ACC6710BE721898086E06C391E541D985AD20CBA0D530D02286C
34DA0811D71D3C32869196A7C72C1A6B13C796CAC09567214406F90D0C2E65FF
2E72BAA094928F682E5A52B52F3A5234B9D3F08D50F8E918C38560CD44D71FBB
7259FFBD1BF1E2ADA39F4E105CD71FB9E505828B9372775893FBD38744296B82
E7D7438DC181032081C0686DA6A8C4CBDA301DFB2E711409990CBFD107425F74
801D6DA712D13027D165D62539AC49F32A57A4764E0C94005734DAACC5964000
C887D999C50DB49CA132C70291703702D7D06B9B61291E26E8479E68779E5A24
BB0C5553FA71BBF17AB14E97C3BA5A9AA80DEB175A763E9EC5E63A2E348BFD98
BC9FCB08D2103181F00DF85CE93F96F0EA74AA393A2844687696DBE6F7151F5F
EEA1B23A6EA6F7E9223EDFAECB20D4B63827A6A4B3835826E276E14DD0362934
0094A44212BF0E46FC9EA8CB06EA24B1E9120F78CA081C407C638571BAF3A0A2
2C5ED697D69314BF89FC646153FC863B4C3F8660104686D5D27A6E9702ABC515
25B7571E58AD8D0E566ABB7A09A2626575AD8C7A0C3B66651362DA6147C12935
1F24BAEDCE29D0A9F75D8050B436288DBB885C46C581365BA89658E94693602F
AA927AFB12DEE5E6A009715E867422A85D9C7B241F37A07C383DF9529F70D212
4C4B240F799601E2A81EB5994CD69B44DF51F331ECA4AE5A0759523FDD66A508
C1EB2B8A20A13A544888651BCA0369F8E35E189661E360B6FAAEC42AF6DB2194
4D8BD1E10A52F599000F9B1551C31F102A7E3DEB589002691A027034EE3D3E65
8171A9AA995067AB1D916ED69D1B7FB6EABA6F0AD84D382F584A2DCBCB2B73A3
22C2BAF3EDFB734C5FBB0BFE3491BDBBE0539C09DC52E5B743D906610A0BF6A7
DDBD2B921DCB504642317C654631911C343774D1CBEC699C2392CC4209EA4682
6D82DCEBEC3B7E5813270EE9F1D7EF71C63E68C33F001B833109205C278B65DA
5982B548FE67F739E9ADFA6FF61693FAF103AA30E9F3B12B700BBB129FDD12D7
E69597543E4C689C15B98E16EE5DFB6E5A811C8B788F491C937843051E6626CB
05F32CBBB7ECA0D3F3F15E77B3FF03CA99C867D2C9933AE39EC90CAA7FE0E219
77C2F8EB810574778C352E81BCFEEF17D6E5D3152CE72273357D99247AA85BBC
E252B362350F6AD8E6CFB0D266E61A826A33E6C0D4E47BFFA5222ADD514F90EE
3895D7F8551DE31A21B30B820F3FCD26977D9975D2431CBBD9B4DF82FA0436D7
F2762ECCCF965C397AF1B7F6735DFA21ADA452F82097ED5D56817D8D76967756
311EE6922F5704CB472AB1E6FB8721075656472DD96C037786FDA53F448C92D7
5E15F5AEFC71A57D807B6FC5FCF6B2C78F8C9B34FD5F423D4951722B12C8E070
FEEAA8076941F8CDB773755483DD4D07FB7DE4220E400E7F38B995AD9F57CF1B
92A145530344BD2C906FED03F633F3FC8EBB10FF9CFAC92B4C43DA45DF2068AD
FB8871F868195E4DA52480CC96B5155C759826AED19D933710D50C48C9057B8F
93D4B7B74792812C5E7F73DA96484010049A1C44E4720BBBE19A0B0EB8698E60
82677AD077D4E0CDCADBEFACC51129640547F14E75F18A8820A85F553B69E3B6
E55B36B97295BFA4099D14C99F20A8397CD3831B9C98E08BE7899E883EF6864D
22981D989FE71021FEFE7DF9C0DA7F20C74AEB1EDBE906303C3BA637495D017B
8BBCB796CFD7FD5CCA942F67EFE4DA81248D9088BEA51FA99398860E1C252C17
EE576B7ED658ABF40A31B93B0CC6A59CA288380AAA8BC0370827DC450D1D18F9
32E194425AF15B900F4C902B6EB87D3A7155D388D0BD7C8B46BB47E63CED179B
0F9340F6C78747EC22011F78FE6D542317CCB82B906D58ABEC0C1485B4B17A95
4A3C5D21BE08BB792A7B8102D3825B32B4A13C1B3AB84ACCE6EC1BD96D11251F
0D8BD58651E901CCC6BD34A540CC0B89BA73C4ED16617DCB9BC822B7C52E5CE9
B33DD5F3969348CBBBB61BBDBFBBBC2F98653639F047FF3311C96302D8CB5FE5
9E634354B3CAFBB8865A02CEFCCA57CE144A7DBA96CC40676CA0CA582DF20756
77C61515D91B063A9092A53131998858708790F96FA41D75C661613D0115FFBE
A2375C196DD8576C559630ED64E0E7D4D2ADBD928FA0D2C013BCA28EED1C374B
002F54A49BF87A4B87CBC3F75DD176011A188C7417EEDF75AD052B7A7A790BB1
F864771E3ABF4490D403C4E22A0558373AD6DF3BEDCE192C7C2123D89D865155
0E3870481BEAEFA2B5F0882F8698AFFED9B37972B371C33DFE83AA76D44055F9
68437B5E404F207CB0249D7773F07777DF4173A7CE1E7C5019279DE7B62A0769
29DA1D7CE2148E675ABC28A61CBF41E587C9D8D5E6C072E12C674AFDB37CE105
547225E5003EC54CADA69CDB2093D941BEAD2EAF797BFBF5BF12E7BF9B9CE477
35ED0FC51BEA6DB1A781371AACE767DD19F06657D801C0295A4D9F030CA71887
C4A39901F4822BA5A066F018B8BD4CE10ADDF84F5A94E60CAAFB364EC0453D3A
8CB5151D24D3B01B12EAA58486675E70770000455B0CBA6ADC98FE00FC73E312
258BEE467DAAE5D38593C32193B9D7D26334CE1E716EB9C99776628BAD33B8F4
B9D4AF3A0ACA3E40FF22E49508FC8BEE2457713D9B3D20259A05653F657F3588
9316ABE7DA5000DC9A90F10D144D169832853C664B53C43B07BC21447B74BF2E
1B065BD9014C5592B1CB8B899C329F29D9C29BD62CBE4E4B37C5C1538E75C184
FE904B1CCBB8F91A8951EB6C12FF9AE654EECB7C29EAF6303C5370CBE1F8615B
7A518130CEED5E61D4F54C1934944641ABF58B2299D3B779E0923DBAEA425FE2
5E010FA65520DAE724A5FC10B10F3C03CA447409D52B2A9B371E84DF79A63267
6815717A073DC2E8FBAD509C91145702ACC0B157A3F14A7B61FD8763768CF208
988FFAB1F8128B73EADD62986CB1BA034671C4D06C53808201CCCDEEC53A8775
E76CBFCD2774348DD30586EDDAC213857B5B61F6C6DFDDAE28C6C41821F61100
D8B1FE8BC95C91CF4BE5A8E9B513D171C792D3D59EE135F19A7BC912EA7DAC65
DC36A6D084DFBFED33CA247F0810F69DF9FB71EEC65A5F134DA6D07F102CEFDC
1838B883E66465DFBC168F2D8F3CF2103D49C87A83F6BFDD78E41719F5F66C79
3AA04FEC9A6F7ED996EC4D1E2C45296DEFE8FF90F9AB3CA7EF87CCC385152F38
D156869FF8E78A17F09DAD920357CF6F037635C0F68FE36E65832ABC475C9890
4DADB7DEA139D5393EC1E65A4BC482285E689AF14C37F55AF8AE5BDEF3702D97
332B590590B833597773428CD588D27898A2F8654DCCBE6D8DD6F2C1DAB7DCA4
41E9BF0F7C996FB94116E66B31C331908D9418D99556461E01C25F928AAEB57A
3045014343CF7CF4A4676535DA4B7F57F36B2DD2340B803BE52FA9160C0D3480
0864ED8E088B076742A14DA5B3C242E8AB3A6A8664040D59F41D69B916A3E130
42CA7842963BFE6C0CAE10EC6BBB772340ED13E253D81E37E52544234C5690F8
9CA1F0D5D80FA336B96911BEDB0326C50AEE917AF41F9351BBF681C2C85E4156
965E3CEDB81913F1319DA6E0B4A21C41B7E9D8FF2818E658CD6D914836FA26EA
A64FFEBCAE85E13EFEC0D3C854236E872C36FD3CB9AC79FDB04F5E1517ADA29E
45BA76A1BFFB35C76FAF94F58599228E2040222ED383602D1AB269D5A73B839A
8EF237950BF724CF451EDA76E0F06E75D2427850BE938F5E1A31162EBBDD1F88
81F9CFA01BECD4F863842DECD0C53C9481A18B46A94DA039B910EBB0D2B6275E
041AAF60975B40BE7EC24689E56D3F9848482E4CDDE951FF5167003CA5C614F5
1E9CFAFE001853FE6FA3BAAB54CABF8622482B3EDDF0880B80F24A2790BE1482
D4D0F509CDEA81BC6BEDBB983D6763B98A9BFD76BF67A60B95C91EA6944D85C1
F204B6509D52CE11D9830AD2A4F19206E47AA77925FE89B763B547A6C741C203
A68E96ABF397B43CB02CD0E50D19C761C073C261FFE6107EAC8D7E58F23FFEAD
FF5DF11830901639F24C6225D280C53A57EA0D945E12F2418C93A627FA10B0C4
41DD74B467F23EBD6ABD079E7CD82E6879C39DDE1D4BF9001183F8150D108AC7
B71E5D562508F308C40AEA92A0E2F9512349A70A0DF8004BF16E58B26201BD45
DD6A46C01F46A26EF762D1FF94D185FEFC3599875048DF2F555C29958F825873
1C3320EC2C039E69660A9596A79B7596B2D410D59E370B27FA9F130330315D5C
23065E9A6FACF9DA47F335DDC1F07DA2E437A54A28DF360D2A34E2E0AD3B3334
7FA72B8EDB8D14DE372091FC9150CCFFEBC47693B4339060C155F5EA8065C1FE
B4B45BC767F19B70E2789F33F7DE6BFBFF9183EDD8CDED318E57FA200CE224F1
0068C33EA6B1D177C30FE30A38B78957A71940C99985A8979398F26FD1680C03
5229C5A25CC85C22E467F2C8C54AA1B64C5D51183DAD708B17768BD12F220398
3BB815CE4E3477864D4479BEB5BEFE034D0FC0E70F08BB79995FCAAAA0C2CDAC
0D4AB2BD68A47CE765756C400A6929BFE31BBA03BAEE02992913CF9851B00A48
787CF466773242B540476C6066B84F31B447323CDB864C9239FAF393ABE9DB92
181B72EAC3CC98A9735AF746DBD7B02E78905EFEFC07933ED0EB0547204222E5
501F971B85C748C0F19586FCF6EB203331153AE744D1EB9CA4A6FB6814DE981B
41FDCE7E95CBFA24249E3A07E448BA3200A04E2B98C57EDCF27A27108E43CD36
CFBB3ED7EDB80B73FAFD7BE86C5747A9B5C3E1C4C82358BFAD7CEA15F0BEDE1C
87E6CE8DA6CE2928A608D2E5A50C39A7923F2078A8E430ADB09BFADA4CCA54E9
21E77221D1A1841618ABBF1C2A3F24C1A9159740B7C9823503AEAF95EE51735D
E43B822BDE747AFD5D42950D3CED89F73BA2716B08340CDDEA31E70E8FF4F79F
48832A00F390D5E1E879B880766349010BB211E6849D52EE4FE5AC937E9ED2AF
7DE23DA6834173DB6E0E5DDB1F865DE0D4D2F11E865E9BA0387364147E14A2D3
3F14A794F4D8A29CD5D9F4F3B92C0D38FAC3233911565F23FBCEAE5D24C872D6
B5CCE3E7DE5F077689D031D84E4DFFDF2CD97385ADA7A02685D576F13891C9F3
9C3742AFF8EBBE1E6AC5FE05448F799FE5BFD0D270D5456DD520437A803538BB
F14813EA2DA18B9171ECA77F2C2B88B02A2E70B4A9CB1C12485C9879EFAFA464
5C69F0E7B15F47437C85C1304C1845B53EAFA78D3BBA4EE882CFA9A678BB9832
222E0F92B2A1326E261900FF109B6B54A2EB3A8235D7FE13C2DAA3176ED05F96
CF56CBBF0DEAC61B948253E6FAAD493673E9AA8B340615043814DDBC66E5AF7E
DF16CF69CAD28F20B98A5C97D7580F9FF88EB4A0B3A5C2E8B30255C25AFE7514
D5D3AEB73FD00A36E799228B72CA433D4672CD55D8B956C84E501060F3BA5C2F
F1D119FD3BDBE80B5D8E7089C4755EF32ADF0FA36A46CCFFAF637068C665103C
7B0C9277AF9F744104A805B094EEF36B4A867E2C23CFA9A57161123020A51334
3690CE4A72E1C1DCEBFF4A9F8582774D37DDFB32217FD53B191C7DE7678F7F6E
96C8E78292FB3DE766A60B242D5C18B0F503E0D2E41EC81487D63E46E8400E86
C7C0417B38852D9D29342C7C5564D83491C24DC65BB26AED26D328633701E48A
01BE8212D7985A1654F67133272908351A0900A16630C33AEAE67057D6418D93
2757B112083B8E0A9890F7645A1A5FA28273CC14B3EFA8323B0DC22A12FF5813
E88E302A0BDD17D0048E23B1DD05C849391F8D441626030A03AA1A6F2242EAA1
A760AB9CEB02DC0C11CC4CAEC1CA1E4344C18C14DBF44607F3BF317199665A36
534A4D96BB6A16DDCFD574E58D9FBFF3E53D854DFEA852A921C31291460A9F6F
164BCBEFEFDF4F9314678B4384D838F2EFE37DD5FD01BF3960359D12086EFF60
8ECDB091F5509B22D91315B2174218A5532ED1E32230CAEA5D69DCCEEC07B5EC
08B922ED9D01661EF45B51337003BE0392AF83E05F50453C992F3B3EEC9D76E8
3DFE526E5687F1D21B5BA200CD18F836F306FF816F6FA2D1724D863C18D850D1
B36DDC7334A1A14A4342E9B8FE5BD900D457EBEB97A388236C55619927FB111A
746F543F0D6675688B582849F745B0697E352BD14E35015C00CEE1A4DB97E702
7B60C9242CAC2C775B6964AE1C24ACB3B88366403ED5BE9CA26EB31F5A667A82
3BFFB255EE9702B4B96B5CB0853A4E72544E638688CB097CF89082CE31BA78B5
758F7FA1ABD74333656DE9702A5B8ED3CA638122D3083FCE6292EA3C5DBF9F70
9F2CB25A04A5B5F38CAFEC709A75EF49AB9E6951638174622D939E3CEC3D4DBD
0B5C4CC4BA6D11343AD3B56BB9E6ADA24F9D49AB794808F10CD59A787087F1EC
6AFEF12842D48182F53EC24EB5BE375EB2BCC7AF8F15B076193F9656CDFB3294
0E5E309DD5502EB3BD2B24C3DA545A214FA33D01CB5506F19793C5E0C28DE5A8
BA750AC9007B8690743B21D18917841FCE2C1A3282408A0D27225D5F75FF98FC
899F0260F1ECF1F00CDC87602B8CB3A72CC76619F6CFA8EC5BCA65FB475A3D9C
A6EC5B563F51746691838E60C1576976A6FB892C46B2AD059DFF5ED9C79D8540
1FBA18BC2414789D9E08BFB6FC9C20AA3D458CED88027BA607B08ADD8BAC42D4
EADE89D5873304E0209EA4B7485FA85405207F5EF66B96E468530E95E2695003
139D27ADD59D51CB8DFACC4BBEFA27B7988511C25D2E9AA22ED59CAFD1CF42D3
DBD0182E30CD6076C229B4FE2962C006A9FD4E3E26D842F6DED25A2AF8C7345B
609BFF08116C0B16E338C9F78EE5B2582B5843D834B510208140236D3F93216D
00C1ED662585A4E5CA9CA000A762AEFE38C345E0A95F8B8EA86F1D32F9511A98
7D82D0DA482FE338FF71DBE4F5D36935875B292F3534B016993E7297FACB408F
9643678DF23876C7ABB7E9F43720E08A29CA82C5943ABDE0E2EFB1FC2138E7A8
27C63EEC5E7AC0E86407CC84630CF1FC8ADF5F6A8F247F938FB174F800D84C98
62C5D0EF89B058CB69023DE4617102257D759B845695CE442BAF5949E8DDC4C0
EA07507C6D8BC1DE72BF49BA46D16AEECFE180F63EBBDDA255D4DFB9688DF38A
DB892277BA77721FEEFDDA92370653E88D534DAC16538E15408257BA91F30AE5
6E81260C9F92C55B3469A51783FE3AD497DEE75460D1485039BAA0199256715E
F9AD87E647BC8C3976DE2AA3C3FCFFF2E6C026D00BA70C3CCAA215F3AB9D9C47
2DBE96BA07D1E2F40C9C71D7A05E9A149420654AD87E9CFFF9243E60B73728C3
E5EF518A574CA2ADBA75E7143885ADD341CC6DF469A6BD783C91922FFF163231
09FC97D794AF26AB255B0B27A0B4A1B1F4C47F590E7FA81468A0ADCA006545A4
2CA6BC114FFC04CC285751905D9D41D082F1B54C2A8A6E702FF91AF96F6F79A2
2120E59DF4B64DB0E6307FD21E8D939E95BBB36BAE6D632054AF5D37D702A016
629D2E0865870E0CF29CF40E7CBD1ED3B539D77A357FB774531B37FFAF3FF9D3
36B87307C25B821891401DBD43959DB93458C3930FD500498A50BB8D543B59A5
09B859ED92558D12C4311C5DBC11EA20F4DD12CD1C6F060BB2162C2F9C96CF1E
798915A0672379E4578BA084809A8BA1F72C9416542B8912B80DA65D06F745AC
8BF17644187147C9D7B97A8691956C4AFB16D87D2D1BAB61817BB395B4E9CFDD
CD10826C2E53DB53A335D007D3DBE2C472EB60DD1B46A73A9685FA9A318B31DC
E54CA245BEB7E8C974459458BC6D0BD619B610E0B3C8A4EC25F2A811695DFF69
C37A90895E45BD34D3977801BC7572EB49EAAEAF60E3B50A918AB2EBB4FBF933
F0C47735509705E4172487CBD0FC289A725E3F0A217336FC32A16703C63D2671
980928FC86443E2879AC237CDB08731F61D7BAA23EEB867F132D09D8D9AE7B38
C59D258366E0EB88AC6BBB6342ED120091AA0D51941B867A64FD11AE709ADF88
33420A41CF958B1DDEA266CDE24D9F5DCC773F82B8CB43B1AFA56AF423D0D6BB
7D5E33FC8D49320CE31B47F08D3923777FE192B4DBD47EFD6E912F5DCC061DEC
E1A01D312E6D9EEDF03106204FED356A44FB0C6E3B9219108F8FA646A7BB67F5
99DDF88C74C744B98971FF6165E6D8BA5008AF8DBEB5BF6B63879B00BF160973
C7C6C486658937E81166EF8226DE32955818D11D7E622CB25266A30392725F1A
579A2ED6A3C5E04F0EC5155DECEC7D6631573FFF5DC92AE13E339E7D0A19B302
75CC6D26D75EBDC65C0C145148DED4EEE78013DB69D2287D7C68E8E081BC5B9A
BEA14812C016F258B5169D42EDE20F36E8F57408C4A25E49EF8AFF23025C5C0C
3E8F0DB548F558DEB4C908C8AE97C3DF2A8DA3FCDEACA21AA570CB249F728D3E
D5F684AC0CAAB46DA2D4B211AEA72150D88BFB9887102E52C053EB700A4EE0B3
1DEC2865F8C6DE5593D9B86ED27F3DFFE38892A348C40512E55E20FA264E0B3F
74FFAC861406F99B04E30AC6D64B0922B9FBC8E304EFF74F9A7F4ED411A98432
6C41216FC6BC6F515310053EECDA97F1CA1940490FAE35AC59EB6736B79B5654
5AE136DF0C1490EC10A7B138B3BDCE536F42DFC587EAD3A1546C8DCB94BD586E
63A37BDE82AE2D3C1CBE7E0D1CE67378FA1294E10E7FD3ECC38538CDE46801C1
A5ECCAEF1B282F027A62C08C2D46085DF25275BEA5C2DDD80D27730267D98B83
032A50FB96805F6A341E5075D55286966E0F8E29FCAD49F3F4F4B6B72D5881FB
93AEC6465F89F9EBDDBF20FFCB9B5769AF098CC813486E45C1B76A93D5A9C461
462D65C415D3DCD12AA6B088159F541F382C76E6FB9230509FE5C2704044ACC2
685A315703AAAAF8420D1D077C3F6796BD0A9E4E70CE49177B354C8E5AB9D950
993F3126E8FB813281379E8AB54D77933D1FB37438A02E3603272983A11A96DD
83745B905A6C674CE46B96590BC49C6DDB39E1CB7B4ECF5EDAB7AFDD7543F82C
71849C7CF54D703BB04ECE4DA77D7BC4988B7103AD854E3D0CE04CDE8A2BC784
D7DD9C6B6BD3979F9629191242D226D6A33197D2BA6C19D8B3E54D0D2ED49E31
D611F953855C8F61457CD6417582A8F5759F9E6BE7BD53309F8C8944B5798634
D0C0AC50C7B2ED1809B66A48175CB4DADE5D262D83D2AFBB8D95F6A3BE40736E
F5900FA9A1B69AF341FAB89D05B58301A401973A813D1F57FDF2024E5DE0082B
D96ED3D80228EB609EDC6A61584EA4057ED07B95CC44892FD64AA36B320E2C78
5081F88E6D8F5F2BF446E97DF34EEF2A14B6D6E7434BA30B9C9C46ADD2D3C0F3
A3F3A8F3A362A84AC82C5B8785060BB26AEFF4518FB880811F58F6B6700C44A5
E0D80687E2694CA97578BD869E7CFB0AF07AC37EE4A4C4F062E26B917DDF5AC2
F211C65DC8553C60A371BA1D68B2F041EFD738046816D70791358E5C2008AD20
848BF178B412DEF0C1AB5726FB1986B1819CADF2B5EB488876E2C742FB7C1D65
7483CA8AE9AD41D46D4E46A5E0BBB30D4F7131BAF2A0D95DCC558F813AB03822
A25E9B98422F4ADE4466B45C39DCC1945D1DE5A06D7C0D022BEF4314D6AB49C5
4B2F6323CB801848212E0DFC1088E930E5EF5ACA9AC31CC0C57A54E0F191F584
72AE73FB750F04E13B98F9AADC2F882338627677CD729DF48878EF79DB6B3F05
FB2300F02000B7681395E2EDB16B43FF70B1FFC0A6F0697A5FD06EE7C1A88B7C
404814BDD0DB9098F6C1A9B43FE4759A140867EE15657CC2E3816E99263852AB
4DFD65FEB53AD901DABB3CDC8FC15B604F8C0F4FEBA45A131ACD526529233AE4
CD5EF8E3A8893D1722D1D62B9030E4D0628CBD8C59CCBD18777CDEBBCA8C9F24
05D573A2575B094C7F550E9C4AE66C16061DE0FE0BAA624071C98D7B1A58C602
F532E7924ED4AFCEEA6C38F3D409B64BB08F579FEBD4A87A66E48BA973BCB602
4CAAE0401979D5F3BE80EDCEEBE1252EA7F1445970223332F61BF1C60BDF9A31
44CFEC36BFE3624DCBCBD84B44EC2AF1773D0A03CF2DFD82C3586EA29ECC742E
AE2CCED35F65F53D6B9738A0D5487CC43C7BED76B5521FA4DF9F3AAB4589D371
C77C4164F91ADCB8C547F7473DE6356BD19C423B8036606DF325251F60A7A290
30FD874D2AC94E354ACED681F623E733D22687CA2FFEBF22E4B075B77249025A
D235818A36A0E9BD92E96A52C65BE41847A2C431ED3D54C512CC1232F1768D75
5893BA76B80308E134A66E3BD7002567EBBC3C64846C3BB8DF426000724808E2
F050297A62866F264949573807568284900563F244E2976252040805ABAC055E
B4B247FAE9238E48B16F7C3F6EDFC89628DFA4CBDA598465A48A21521C0DAD61
0C8740A5F6C2CBB299365EB59AB838AD3EF5D3ED82456F5FF0AE76E21E412B55
2608D84019B1F6A569FD709ECE1CC05AA491CE2BB8F14D811F790EE45016313E
B7797C70B3F0E740118F43F488FC69BF8C59C0B2154E9EEC8F84A23E4D519A9B
AD96255613BEB72CE7073F9C3779691A8D2FB9D619F1C85A573595D65DF9B90B
3A575E75E163CE16C03EFBDA79C6C3DA1A05D334E795EF9019F887FD8658879E
9AAFE761A0F15BF3F4E270C905477230C8962D39A7B054399D9213CA13A903FD
A967AB0CE1E72E6D08F68E719E7BF89A9C64A94718159209D0AB5AC91C6FC4F3
DAE2521915D13D1BB1267B9D54C5A85D060F4A2EC022A75DD0CC158D5C7D700F
EDE21B486DBC0C36A08FB14E19AB678C02DF4A0A6D5DB5CF3496537A24C0489B
E85952A6D72F7C69185E6E4E20F11E86907A3754F0F0517FD082D4B5BCB58D00
BEF36FDF6C5E4F77764CE0FEFFE35570E508460DF4BF098D2BDC49CB613ED566
697B169289E9A12455D39FDFE874F278A4329CA3E2C92B34F7B89D2C697E22CA
E0196031AC1E46386ABC0C4D01653ACEFBFD2DDF64244FD2AE474A189F981F45
F302A0810E67022AD2D80D229BA32FE4A7B63CA24D535D8BD856A8AED3061265
27B1ADEA37CE78CC744A68D80DC9F4CC02379224FE951ED05813ECE5015D0899
65ECAC1F40D7ED9A58B2906597298E0D2F8A6CF5715AF723ADF0F148E60F26A5
2D6BEFAAAB021F56C8D024440AFFFA34F6F3CCA0DE01154D6476F0F753A98214
7188238A3B4A1D8A8057F0B53EC63FB9B5E8B6527A636D16AE29C48727DAF61E
C2E1FE3F88793246182996E1E6E683D2545B0E408ADB146226387D502EE9EFF6
39D9DFEFAAF322E91E2284DBFF1DF202255CF27C3028C0FCC9464752AE68E1B5
240914E7B0AFA9C202C1C2CB272BB5E0797D0E143645B6E3646C8E76E0DDD36E
006A50958AC5CBCBDFE84A7D3C09DF50E400696742C7C61C7D5079F93CBF1FB7
E43B9A4AD8FD981C8A9370A8C8C80690C57BE92A4A230F3A0AFBC4E04B910D3F
86A594ABB7C6278FED65E85B25EF73B8AF5DF63E144AD08E7AF038BF12BE9A3C
535A6E05E4F83AC50FC66EF69014115DD257C56BE598B061B368703D24DCE66E
6CE2D41D08BACC64B7668088C3EFEDAFFDF69FD6855C2972D906C53B7C1EB84D
5E9FA8EA02F65F40C400C5A0404F8F7106DA45A7DADA361E4EE75B66BCA165B2
25CCA46D2B6423E3C56D352A2448A9772EBAFD067242A19555D0E151BD6C8762
FA58963148FAA21A5836ABF89A2EC5EE71F36FFCF1EBC581894238B01655EFFA
26D1085D11AA9B50020DEC91E39EDB067B220895436D3DC0D2D58981B518DD14
C9AC8AABBDEB117D2A7B73236E3419B4B49BB08513A9AFF39BFFAF233DBC0AB5
9CE190AC24F4B3175155D4E337D533EE2C63C9C6B81952F7FCC3CB3D5932FDE0
FE6C716E4A4C7B56CDD6D7CC1710A60B7161DD4A77667DD22C889709D7EB2D01
D9ABB9062AA45223F9809ED1EDC8DAD3681F4709980A0BD883DE8D9798D3524B
6DDCD9ED868D0062E3515089197755665142B45C647EDE8DAFA639133EBD51B6
F0EA299D0CFAA8A1A9AD20AE157C85B1A80BF9A0C7FF878999BD871D5B2D9874
737BCA344117AA2F50007C5FD9A1D517A4AA29C7940B11316D390A1CEDDFD198
4FFA2279987C30CF2B9AB20ABE4DA05F7CD986B03CFB173F80245F302E38C1E4
8317CF0781E3100E832916367C3ED3D078EAC27F80D22C9E905C6F02D089E277
D73F7BE83E37BCB13336F916444056920EAAACBF89B12FED1CF892519E92BCA8
3869762EA8A30583461449933274F4486B274F469F7E3B5FC3D10C0E0A701C7A
79B72B176BECAAF114508891346A6753B4FDE77AB67F2ED491570437AB56C3C2
66CFE2779E2E91DEDD5AD740237717161D3A5050A6E53D1C6A45C7C9C1224D4D
64206B8C83376F138FCB308AD7FF6297A5C730EA903AB7EB3C79E6A990A4E05F
7E6DB19E2878E67F22CC8BEDEED4ED236ECF4AB44AD24B3495554871DF406703
88F61B96332576A040EECF399F97343861D52163E3DA3D74D18CAE4C340C11E2
E6B82A9633D877E637A042CF11410543A42BCBD22851666B910BECAC6D80CE83
2E95594961BB8867123AEB8C4FC8AEE341966C2B56738C99A9A5E880D4742BC3
6BF82D9B4251195D94DBC4BCD5EEA3CE220218FC58C9BED09DD797B876FD86A7
8BE2BB3F5BF24DAF4D8CBBBB445B3AC46DD4FA28FDA6C5DBC2E365A8C3777CEC
373EE02F26EED8FD67C51665E3829055B3667E3DE7A7B038DED36A38E7A13D55
D9B8A21ECCA6D72B7233F3B38D7AE1C80200BF92C3EF751AED67B7D1F48B09DC
DDDE0BF3360B7AC1978724E2D914700CD0C506FEF61A8A13992926899E3CB058
638DFFDF0A932137ECCFF0728B51D65CDD880BD7BD7BD123D97A0A356FD7BDF4
1C870C2EECE0ADB6B92408D4C4FE1C55C6C71BFC915FC679004E9BF2774C3C63
2ECD4C850CE433BE1DA4DE74992613BAA99CCB86D814D063E9C7501B67709DE9
8D8AA0DB3BD2FA1F26942A9CA661B924E47AC23D442FC7FCEE8F551F40912D7B
4AF88C5A790357B85705534FE5FA102DA7D8928C13753036E2654BC58057E369
988B1CB3CA8DF8434540631D3A345EE37840509254D32E85C085A8F9E260D9C3
61B2A474CDCD0E0E4DEABBB5ABE0325EB979015CC8D8417F6556A307FEA72E1C
F6ACD3696BE6BCE5375F253371DFF819E164E31BCE9CBA64FCEB47C479E4D31C
76F1CCDDA048F161D90B3E04CA63EBBCDAD326B432984B10C3FC1620D38A30B7
280FA93DC55DDA6E686453684F21932022BF6BEE864C9EBFC41402F3A22FAF26
12F3D448FB83556B718D2CEF09F50F4CC96F4B3D956FC06A29B91305D5582571
1127861D917A8366ADC2E323C0421CD919741ECA93B3F86F02CF572B31644140
06A13A50EA5DAD53DF370A074E3603A5BF4B6FF047661141C7A8B9BB235937F9
344B2F08A83196BE59D6C6F588B22CE45CD1092B4481EC3755100A137701DBA7
4F5FCED8CBC168F16391C861A0522EFAD58003807A664B5BFD07A41D91A67FAA
7625B5CD8AA13424F1ABC5F725112CCC44F99F125B693B71630BDA42650EF127
48E0AF79D65A5ABB46CEC37EAB2A07E1C7D7FA4640B487A34FD745A64122283C
A1349A3908DCE961BD4A98AC1F0F3AEE30439D4370E0A3E677A0AE5CA6F22771
30B4027BE23FB59A97B5A3336F894B3E54CB573CCF7C32CA9D5F9A40C3877737
766BEC9455A673B1757EAA03444D342FA188A76D9D6A1D1F156E739249DA9330
3EC4347FFBD0D325136191BB37EE6F519E54F56BBC1C0051B7D0F6AA44D2AE8F
BB33143502B0B4D08084C3AAD81B5492DB49BF881015A3D49317B243E052B48A
8B3DFCDE7DA1360D0123D7C79E8031C5260EC0711FA7FB28C5A86D0C451BFEB3
414681931322A655C03A109491BDA129F040A968295D45BB72E22682750DCEEC
D2EA79B1038389E63DB1ADD6F5FD6F9D9B23BBCF5CA7529DA8E921AC61B5D6A1
83460273125E503250F5C198ABE405E19701E7050845D83BCB18E2E0FB68D2E6
3E7AF01023571F25985620B629855BA59A265E7FBDCCF9C1B880ACE42EC4D7AC
0FAA1410463F4C7A1377747BB3A56AD0148429BCC6F848FFAC80F05D78FD0905
BED90F718D6CB20CEA578A3528FDAA8FBD1DF326767B98CD3E5D44374B56F4F5
19D3EF633F889B03C811CB3AFFC008CB948D2EECC23ADF0BC3948B1F41188B99
0E1FE47858F59E0151F9BD378798696D165BF75291EF6E743AB40360AEDEC913
2BB7C2244B2494350D0EE9A48D2F7D404699DCAF2E4D9E75FD98A7B9D4841E01
0908B13819A8CA21002B6251A58B9F0F6D260648ACEFBDA5C37232C8005AF8E5
2548501B170343DBB091EA9D9FEE0F563F02E56042C4F86C31668563FEC560FE
9E9B06A54E69DEA6896ADBD401209A54532F4DC5510F98495293C3F51A63C8FB
3BCAF5D6811859F1140B4976E78AF4A282730972CF852E5A06B9BF5690713762
6FDABA89B040B2710AA87DFC8C93CA0645B67A8FA6FE43FF02294DD115F6CA6A
185621C8636649B5139C7BF1421FD3A7BDD9ED98175F5FE3C6A8B27B275A71D3
CD6E60087C0783928214E21D7FDE5AF96759E83884001C93E37564A1585AA863
FB9C5C91C3A536B555788A41AE9F6A81C4DB507C873AAF83DEC48FE616D02DAA
5C35A7511C7975B005446AB7471C19272799648EB306EF9B8D4934B0AA7C4108
8AAB9068812516F2DDA826F3F1EDF5460EFEA9B456FF717A3F20B19BD5F38C70
EF7ED4FAF23917C42BE7BB6873AABBE6A8B84AF30D934C3C0D9A8DFA622AD9BB
2EE6944F6159E08C516824FA0BBB688CBCDB28A4A8B971080774D4C0E16D938A
5BBA2257DA58FA090CB13F05A471EFFB88FD1BC9E8600463291F116D90750E42
F78CFB51990A3A42CB1FCBB24EE0062F72FF8C9A866156B57CBE04A69B1C5507
2D0D480154B4318238AEC6C53F81AAAC6DBB249ABE84F50E172C987D6BA03C21
9D6BA67057F788EA99B1787A817136A8AD8F307D8ECDD88B5D0C2F3ECE0BCDCF
91359AFB7474E0F5AAC374C64F0563CB959455941884D3B9FFAB6082CA6ED656
EC2FACC8A28719D3B33436B139895DFC922443DFD47B18F0719E9F86F6C815F6
F25A2B91DA83A2D0D19FF0739AD73300C40FF74A23B661300A3D007FF1610972
6E13045809AE4CC5A3F7D20F2363C734A34FE82D4B08FBC9E1CA2DC8A82D7166
7C8297F7554A290D82FB483DAF1AD29AF2FB6C25A3014374AB8BBA3F45756642
43AB55A3078A6E45DF6D0CC0278B531A392F68B8A4D7DE0D2C5B871EB5FC4FF6
E0D476FD49D8F4C7D9733F60B0B5B92194B0550645150A746D8308F9A80B7E46
0D4F2D595634ED410DFAF07CEE09F60D11E54B7BA047B0E0171ABDA28DAB636C
6983E67FE8E978432C8D016523DD52B8CF1D67196EDB2FDD99859C34ACA78C0D
44B5E6F578AB9B10D7ADF7D110758F7B96767AB6A3E868B19FA9697DE341906A
FF60519187009D0C3E15F385A40A16518377FEE9A1B7BAAF458D19A5290969BB
D1241FEE6F8D495AEA56DE06933564F9DCFDB5AEA595C32987DC122F0242D76B
782349E4069DE0CDD6EF4375C680CBFE4C8F24F2AE89BF7785F5EA7435A91500
F265022C307E8ADEAAE1C6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 90 /Z put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD604548D553D4A6EDB247853225E24E7E9
89D71F6BC94DB986467E755CCC99069B313F5745B02B4BB608A39F0A0A732B87
7EA2DED68219754BF1FBCA350327572D769C962EF9242132D93A5C8E9725D8D3
AAAEC15ED0F362471AA58488620156F3474FA59CA080EA96FE995D2B3DEEADF3
3141D157481C66507725ACA5953CBBE1ACEE7E3F02C72C6552D15EB3D612730E
61A06A43575568DC3CF3844BABF04CA767E2995196097015E0C4F622C4356B6B
F41DBAFD797A4B9D7AC22332C552043EF98913D0D9B50CA6B7CDAF903BC5C04F
D20A952BA5CC35B646ACD0A287C956B98C450051AF6AAF79DF37F8954473F8F6
652BF03AE2AE82B99D820CF93F5FC0BA17EBD7AF90313E70594EB5C354023BFA
07912408F1757319C7288E99872B907D5AB583B082EEED8AB079C63E38B07D11
6744856E689A479CB3A8BC081F33CB06755926204981DC0A45B3ACC18F6865BB
EE2C50DB43B62E3630FC1D9B1FFB3BFFAA6D0A20C0381ADF48E4D916BEE85BA2
BB40F538F55C11D50F882B73913840B45161262BC8B0012694C3EF26452F9B77
2CD7C7AD6BFEEAFE31C8A721C2D46AA00C10681BA9970D09F1E10DDB693AFE84
246AB18279A2B24E5B50A2FF6337B7B1039FFDD4B00ED3667B5F2F7BC2786D2F
525A0E82234B30711AA835EAEAC2E404915FC7EC0081B194765032708B5E11CE
EF6868298CD26E5B9EF345BFA3EC2911E2B96A0B40AEAB95BDCCEE38F5EC170D
3BFB792D2DDA7E57BD2FB7669484EF9322A1BEE009594901095DE2BA9A15A0EE
4DD77404CEF16EA6C31FC04A8FBDEF27B9FC1AD3264388B0B12D8E476305B912
30B51624D4605C45B514473F327DC3EE8BA69032A95301CF714F225A92C253D0
D943C80B9CD0524C5B87A8D052D2E47A9725EF869D3B89097CC13CA9BC695FF8
A9468004450A76A13B7EE78A03CC18917EC44036C2DD237344E594569B8F2DDB
21F7619180B8C760741961CCBE54FD6DD07C4CF73B346099234A1EFFEFC88574
6324E4232BA18A38EC9F0B780C298877EF0AF42C1EBC2EB52DB64A1E1E352503
36AA29953A073B864FCB31BA938A4163D000A159ED4D345331FA1EB4009CFF67
1D107BABA6AAA48075C6C50BC7683929EC146594E55B01D4F5B582328284068B
2AB05CE92EEE1DF4557DFC8FEF287CB7F961F4F1828EA48B0ACF5C63E1EEC8FB
6A0EFF132268B7DDF7B465D4A21B05993F4A4CFD168A700D04A7303BC2C00391
392C3FF97E770E6FAFFFE501242B20B4F7B6C17331C64BDBA3E59695E176CC79
E7632AC6D2E920AA048BD1EBCF9909D8C314D2EF3CFC5CF88D8570BAA814D467
96D86CF4415C5B739FA6FE7B4C228F06268D28EE33381982E7B005C26D2604B3
AA363CA4732B9BB0E4D4EE50556D777258A7BC232087C9F00B0D5EF70270B40D
3071E14E4E5AB5AF1C686C5A7C268D36A0787DC9300D4CFA004F89A73FFEF780
E6BBC957E31B764159C3ADF752E6E1A6C3B5B855F8A483497A347B601E3C8DE0
362D76B715916113CBD2D3765197074104C7E17B87670CDD5C227A1467BD678A
BE442F196034B02132850CCB77143C2873447FDB8767C462C63916D9D4A13198
B7910E1B274B27644DFB2E8372C8CD55E6E2AA5CA952A079E1E6389927495921
CA39D69ECB4DF382FD2DC213EE382BA1A48CA886CB6AEF2B0C50CAB47B1FC40B
2C95E13190C92480439E3C56188D162C294F24987AAF4E15E8FF7ABBFF2A12FD
AEB884FCFFD671EEB94CC075B815C6A45549EC23DB85923F4C37221641B75CE0
C5C8FA8403C2C9FFCB66CC74C5160D6C7042DDFF33A954DD01C8E21B21F8F364
F6FC7353BB524CA5AF7D1406F82133D7BFE7F66EB79CD5B1937FF8E51CABD9B5
5A7E5B64918CBF1BEC1D07A9F817ADBD1C194471919449BDD74166B19F83DB39
0180C3EA858141033C9B09E756C91C66E22C10792204FF22481A49FAEEB2946B
75B1620F50DD46B5F299871544B3BE230D6AE21C471D874691530E6C189F0E2E
2797BA6CD6DB3BEC3FDCC0CA285BB4D820B1DB4E2282245070CAA10FEDC814DF
DBD6922B2923003F60211DC3A26BD62E832C689F22AB22C5ADD53E19790FC618
D3E74509C072C2669EF7E6A4320011EA28A2E8285C53A1B81B17E42CCFB6922C
2D235BF9643FFA11277C0EE898F875D57D5C67D702AEBF0B892A83BFCD0AE12F
B168192AEECAA22E1FBB1D532AEBA65956FE55E13A661C00953FB1BE0128C6BD
43A4B0407954BB834F2AB8F69241EC5EEE712E1F2C8C7751B1C7FA2E6F15CFCC
15EBE92E51E7FF064CA03F8287DAB64850A522D33B09929C00B48C2CF4E8C847
E706C508835CB5ACF60BA71FF3419336AA6688787853B10D8896713764599CD5
0AF085DA19A68B0F0E232C0A4BB85038D5BE3D4DA94435F88F91BF137075D27C
79581783618B011F86C93778E7D225F7C845C64ABA96FE0892AE9A116AE3D838
53E65640246E61EFE066B665ED53E44E4C42FEC21F1B21DAB1038C5D441D2752
BAD0DA2B4FE6885523B70F0C64694B73BFF1E2573F623D215F6C0CF80185DF28
7E092C5DFEE06752322A8318C465D2CA084B9F1402695FBB400940D12507B823
BA98875C002332D59242905478513F046EEC46F131FCAD27AC28D80C5DA6F152
74624D04D0E11B189E5EFC00F5B683EE45F3E579617180A13BD57F0A04B2981A
E0EEB27EE5CA0FE8415C0FE2858FBA0AB3B413B6E97541FE06864484D424A1B2
EBB4C8A6B8151129A0937CAFB053D440005EDDC31CE670D3824CB1754278E8D2
78F592863F4C580F80546B2D19B597F7EAD433E96B357B51B60D693846E8EF9B
2A9DF0298F4DDA399B2768CB41B29EE521879E4F6B28234317D670D4471BD476
69B723B1CB7CEF41C84EDDAF6793DADE09C352C3B92A11EDC335D0796DD4C0EA
635F19EED41BAFB33C8AE05F2508B8A75DE53FEBE1B7B92223D73B4B9DAFFA3E
BF6C9D6BC5803BD0DA9F143AAD3A815A63531D82F146431E0B609B99EAB171FA
648F1CC22793B52B6C6550843F379376103D979936994216D410C31F02FF0646
701ED90AD2994C79A2AE089202454FC951E4319A8F2E89808FAE4C0F3AF73442
EB438B6F4A02052106F16DD0043E90AFCCA54B004C3A65B38641C2AD6C528766
4D90FDA17BAE9D80F9B84B852D221704412F850A481EB75F9DC3D3DAB3847169
C1C373E296F613359CC7ED95A31682D3BAC62918F8E3F64B8D86E980962317F1
0071CA02C21B626085A290BD3F671E39401F579B300CCB4C89FBA6D29D94E63D
6FBB70555975B16C395A94A27CF34DAF73B90C8CD0DAFAD0958C9C7A705D0961
5E476F96F90F7B2599C76F8BB0C227BED7E7158526EE87B9D9597315625220D8
2494D5D2B9C1ED81AFC9E9F70E01A2E6B33489FBBACC396A909DDD600EB57A27
D00C031F100AB11746A2053E8C2FE1844232F54F4AA66E67CDF9A804AD1CD164
45122708A8E0DF22D96CD06B3C08959BFBACA60304268B90AA169B29CD47F1AD
D2D98505DF2EAF52F9BA53B2C6F34650E3B559B278A4716A24CDF975CC8EE6F3
12AC146287ED865BB55E9D0ADB6224D21651C752C8AE387F1D4C119110B201C8
DB3DC67DD1CF601C0F242B5401F78AFFBB6A6D780BD10973FBE43E83C1FCBECD
5732B8E9E46C830A357F32DEBE2FDC999A4358E5AC6162719A3BD1BB76105CEB
38ECCABB39F621AF0EEBCB57FBAC4435D31FBC2C8A5D1D94D9AFF61F4DBE6474
3EBC650BA80423137FD09BD2E7280B182B86B324FADE6141372F77FE16F25DEE
42D01653ECEBFD81CAA77040D37982241686B62661D919685FEB7556FC2C6427
E90E2B83ADF0687E5AAB4BADC47B0434D04524CDC4DFD9125EE0C7CDD8B67A0F
5C70BCD554324BC9E2293E7AC85A386794BED0232658EA1EBC819027F403EBA7
B5D993FE9EA802B68AF5A81208B739ADB6142F8F7CF09C657221A67D6B8E162E
F3F59C0D736946734761357F690FAC59B411CA7266CAF7EE437A3913C4AA656A
88CCDFDA0F6C7E6F375A49896687DD284AE059A29AD2E4BA1BAE2EAA537FB674
DE3165FB9AE45B59D33B969620673348F59F48E710D62CDE756AA4E86A0917C4
EE79F9097979D9AFAD0923B7D5A6FB06B3EE29DA78461BB8BE2EF4405F2BAAEB
C8A228B5820F0B5EAB6B09C5E51C944C435F9B02913A93505042CD66808AEB5C
F26953D18AD1C257339F8F24CC470C2B34556EAE6793CE1B1D2AF6FD54B8C163
8275BD76BB466F76A8368D8F95C87C64A0D428FA1A86CFF5E6C8357022B2A8BD
ECF188505F6156F8DC85E30DEBE15A07B62B24DBC3E271EC643D1A52D75C8915
BDA06483F8DD04F89AF8632023EB775FE7B11166F7B7B6B183B2D5CBFEC5D3AB
8468A21B47A2C431ED3D1346AB459BB77557163499129E1B0F3D28DDC392CB84
5FD000356F1E2446A3120AA5BC89A065BC6CC49221176A15EB7E9B50EF98C4F4
28617BADEE8565FC32B4A3FFBDE227EA6020A993A1244F7E8AE081589B7E371E
5E53E98914863DA9669D374DAFE46B1576F103A28462DB98C784359FD854A6C5
78103507789FC4A607D10C2DE0C5EBA70226F1016F4A9C4A032F72BC440C79F6
EC2B1F4CF875295EDC8E8821975930DA13625CF817E2379905E2D757A5C54340
D8950856E8471B403C11DCFCC7391077812C9DA079E3A0399BD4D53A88D1ED49
BBA298AB7772F3EC0B6FE260794B01E4EA40CB5CDAF4AEB2B1622E52000FB419
2A6AEE34B9BAF239E5EACD02AC55F99F05DFF5506C19AD3E8183E11CCA57AE78
AC688EE28C31D597BC0184963FA54A869AFAA47CB3ABDBD904B66EECC380295D
923C63F3619EC2538CA11A811FFFB409B515D352A63CB9430A6E2B6EC041C9DF
28361032F041B4A680ED275D9EB75B723671151DEC224CCC95BEAE07348CC01F
F7EC4F6F6ADF59A2DDA611C38FCDD244F3CDF79AEB9853AD597851E889B10A61
F5E80E16BCB311128B7FEF5494347028F74294FB777078BAD84FE0B9E27E5EB3
2D98DD3098A862C67CD1DC0F5FBAE35862E2F9BF54823D934921208A8E3BB6A0
E25F0116A7351DAF147B6C496891B9F34006745CC91C40AEE5E7FA1A18E90331
A61A495D32179BA0D6155735F7BD08BB942AE23B008CA80328C260A698A36E2A
B3D4C4A65E6E6002D73E058DE450AFBC326D3CF9394CC27455E0B0F397E4AAB3
BEDEC1B0B2A85823E7169D78308CCE9B0437B5AEFE46703E40F4091E3DA7AE13
4145C912EE3B07C7B2348EDA4E87257521E458F9D0ADA68B529C5613DC015E63
6F3C8D333F24C0FE3A89462744A65516E6C19B6034D2EF1C042451ACA925C524
0AA7C4CCBBD0F78975A1246484E2DAF21D823F18F77E71ABCD62FD3D59E08E06
94A69535A0FFD08AB0363506F4FBB3B54D7512CC2234F73288D9A7FBD96E8EF4
536394188304491461BDA989179320F0BA28E9DFD124CF0C69BE9663E91D735F
7891DA74290E7462FCB2D331045C87D74BDB8550E5F75E35DE8B5AC8755DC902
E9D7F4286BE148034951A4F9F7615AB21582C561702A5D3DB33DB3B1FD797D5E
81C628534FBFF64FED523777BA64E575B148447796610AAA2D1121D43DCA6E00
C9E997A6ED6CFC7D91BBA9E455BE0273D9EF1252CED0F4824F50F4CC0CB4CEAF
9E169C6728DF5F7AE984B4FEB9D7FD20677DC45E31B4ECC7368EC8B51490DFE5
56EBA65F2E5BC97B45D9A104C05C7866055CD072C599FC660F53057377C52008
A7F9D6FABF5A8E2B4897F20899E874F56808CA3284124EEED7E47456ACDDAF7D
FA2DB0DDB50B75134D773A7ADB05F4889A5B7DD4982A663C8D3CBDE8995CDD58
2A603E2DB6A6FECDA98767FD7AECCB0DBA796FE66B2B199910FA2874A8BD02BB
15FF5F97087D22FE3BC284C0461FE63F5364654463362C0BD1177354FFC51D7F
DA831BEF4C8DC455551855A60AF58700A80DD335C69A136DB890999DA1720F90
506C0ACCF90EB3CDADA8B07F530D2A3113B9A0DD9B062949E3FFDEBF8706E4DE
22C24947C312CCE50A37CD78C16B6858D3DB014F9AE60D0FB693706F19AB00A7
36AEF4DC14099F00957EFEB53C4FD5768B55FDFD7051B54FA32D42482211BF54
BB949D60CF0B3FC41C9EF2DE6AC79EE706BBBA62D76C60C4621E29B4B9E4E3DD
27EF60FE21AFF8968A2AD015405CDB34BD1CE6934CE5766CE10907E60BB49FD4
07F2E0E7163171B4404FD5BE87EC9815A05C1A96E8C1840A9B3EC652391994CD
3A3E1D0D904B0BFAB873D689ECBD9ECE1AF5171A40AFD54ADFC073A4D7243A92
C21F9971B80A937C9112E5C307F7C8B4772108D0C88CDF5911A9E1BFE83E98C1
2A303879BD029DF0FC6E50A114BF77AAA29214A4261285F8A629198948DD70A6
8730A50B7D0DBCDF2DBB091F5F2BA010D82B34B8675A9AD9C3AED19975648DBE
B8B96513B2658225B85DF844DCA0A4894894FE8FFFDB85C8970EFFB3F7B0653F
8547B68EEDBDEC05FC1FC06115571EB0136B1868E4C24AE6E10D410999E4F55D
A30C5DDF13CAB5B88C82ED2A3DB9A4206E205C45D4869BB13ED42624FACA6BFE
E1006CD496EFFE2BDE46AE0249D6705C28818ECA698A8E934455B63965348F09
75CAD08001F02BB7CF8AA72E7450E2DC659B4899872B29F6DFE0DC308A295638
18405A3E471DFDD551C28C775B1BCDB4DFF6615795A20141AC63CA2FA8C01101
B8CBACDAEC2D2941252693DF4F750ECADB12CC3BAADD1D387EE3398E9945BC50
F9114FEDADE13E7D9A0A03AB50C7C6E318D355FB06D1473FCF2D1B6180FD174A
78D71D46941424C83FF05AB95A2AB99B5E7DA356A7ECDA4A682D2A97EFB0D86D
D9BF884C74C637B48AE7697E18BEE311C0F1C425C952E632EF7D6066CF2A7FD4
2356FDD8061B0B7F7628710490D4EAAF5F3445157F899D9A0025825C42E64641
5A762FE6EA514F322884A5178A3E2DB3E8A0BB60C59D40F48D1C1C1276736EF5
03731C42F412DB12A8BFF9D93BE14EC2A1E422F50C54A8006475FC389ADA7BFC
EDF47A3EBF9DCF396EE5772257AA15524801C0FFFE9043CA78B4E566B582556B
A1AEB672A995BA76351875BC59054FB29AFA02C33D778F304DAA7BE3C7507F90
33F9230C8C6B5B071401A95711DE579D997D004C5FA7A412AD92870746D0F528
76354760E09A473619D30F541BD89A6D531D342D072DA1D67CCFDF8B969D943C
9BADAC939A47E60A149B040ECE4532F75B6296631C79AD12A9C6FE209696F5C9
029008C1CB1173527D2205BD40D4AE8004FF7B7DC57E0468367728A85F80F701
23DEC9B8CD94D80954988C289F428C431683A41CC6686831A5109F8B84B4C280
4BA6CF37AD7A9524001E5C6363BA740A6FEB2CADFC47837CF2A7F1F7C90583FC
13F34DA49EFA45618E5A9FF675C741119EA6415668918E0C477AFB4DF454E378
F348A835F824625D53DCF0B9E238F6022F0659002E7BD39CBB12B86A00130F51
7DAF9F637BB1EAF3D30F0C4049E653362BDA82C4109E89E725E6AE9ADA6793DB
CC56855A7F22B0749AF2E177C9FA16A09A2A150188F4024EAD5CBF3F5E7C73A9
7CF317F7FAE3CBBCB59943AF7F4A89E4CB72908BFC04029400F8372ABF3D4671
9E5ECDBBDB0C5185BA23EDB56CE096674F74945F9C9F3F718295A60B3468A7A0
5B16747F6BC363C691192E5B0761994A7D47CCAD8A5C03B6A73803B828A4E99D
8926D416473B91F31957305AB9F9BA2B2EC79D2356B7512FA33FF0391C9A614F
FD3FA826A4A87F5527956376B10D0CBA485F02E4F66D1B5A152BE152F2043524
3B61A3BCF633A03606E9918A4097053E593A7341DCC1E13B5B507120AC31CF45
B58D7958D437539724C40AA423840E546BE85EE19D1EA7591FC0158DBADA38DE
2ECB339199594A1C79E8B5B908F96170B52D8380C5112F4C53E468FB62CB3F46
4C2113AE08FF62FA69518CCAB01E69BD099FE75FBDF4A18495CE3CBA91AD1D21
B3F7BFDEE916D428926080BCBDDCD4F6506CCE21E9915254601B6959E354B9F6
46588CDE1E90BBA6D646B4E6983E86C2E433D84BA6205B426B749C40D14DF34C
C6A9FE5B32C5CBB9A5E33BC18E5D3A5E84D0A82277EEC0BAA7EBC8A050F5E313
3F89B78076F7D200381E93533642B57C623BC86358CD62B809AEE00C5FE59AAD
55E6DD76A65E8EC44F888867A25FAAA162AAE2B116B524FAE2D5DA487EFE1B75
8A8412A2AD8E1A816FAC93BC6A988632F5B0B4050421D82764F8A3714FE08C99
D4CD873633B90461EBF852778B7EF35F58D155512818F116349F4C815183A30D
D79E71C527867B06B1C08D79685F5C18699AB46F2F8458D9C1027694775D8D86
44C0E5628F16C7C9218366271E6EB8845005F6A6A1888B5C6A512B253A74858F
A7CD3FE9B1752B8CA8782C09FBD6FDC42959FDA1B1217328850E51CBBDAB5117
BC6CAB7BD5AEFBE53645251EE149E30DEAB24E6104963705693D2622965CBE37
9EA355FAE90FFC9AB28F2FB4DD39B141ECDD21D88DA7AF33F0FB168449288391
6BB653AF7C265EE7E02FF97B0D60BC12355C3872CDA50BF08FA6F6140CAB3895
E42D501022D4E2D3885C673B656F305F9CCCA1249F47DAE52C4BD00FF313A769
8D4797D35378F1A92328F15BB057059E8C9E25EB2008C28A00966661F28F25A0
873A01D4AD90E750AB2867DDE2F2762D7C63D4C4F469286508E6C7235C13AF9C
19744B38DE54B6BDA6592B907DB7162AE7A57EC794322A3282D021596D491364
840510325381E9E2DD8A29811E6DB95EFF3E9E56603E2D6D187F78BB04105CC9
7E71C2F5A153F44BF458CAF08BA662921D1A90812AAAD786A147058F37A552C4
752F23F9F1FB0CB593EC7290D4BECAD6BB0899F00E80EA9735C4BC61F41152AE
D2A3C7F55A45569882A9737A3814283074B5C1D96D1327DBA9DE090A0B128B9A
064752E5665BE7487664A9A07301B4F832AC89EF41564D3E1A87BFCF0A1AE244
DC97F06F317389C34EB26D71F3809297CF695ED82998665B5596E944AFDA8DA7
4081912C0609FC8F8C0EF3B634D502FDE9391FB1A1FAD724764056E4196C76D7
07605AB1E4F298ED47A5E4D7526E3E089E60A6BEC1CB77CB2868CB42F6CE1E14
CE7E475AC92B111ACE53D3CE5F059AED467B10427FD825803D6D7C16A48EF59C
658F1C696C3DE3C1F8D2C389D6C911C8F06205A8788EF6F42F891932A6F77148
9086543561831E3D1A8CC664A6D2C444B2EDA0F0C095CB58973D2245199F12FF
6B46CD15CA58301F9F358AF50B16AF3FB2EF1C809746E417217FD59ECACC5CB6
B421B79DE9696B233B95606BCB814214C1363E5B11EBD8061C2BC2917FB8D834
0AAABF7738A42D7146BAD8537874CC7CC730C9523905632BB4250AEA82896FF1
0F832DA33A8C2D6BB1745E004BA8931B2CD01BFD3800B1AE70C70B5C16216F79
4C6DBBA4E66CFF98312712F284E9C2C66B6BD62F98C8D75F4469FCEAFD48E196
820A06D70A3885ED9BAD1FFC9689D421E92C70B5149B7B65935881597A7C4E8E
4207080F8C2F4E86D1A7AE1D93B36D89884476823CAE512D6B0200F8806FC8BF
4EC21CB2FE236E3DEE3860148F45B90A405BD2E10425673A11FAEE16DF5A8DBD
DA30D2AE5F83FBCE258D1514FA4CC2839EA34359ABD21888E265A2AA3B272CDA
6A31DEC45B149885006E688684A426BC31EB7A051802B4626AEB6BB16730051E
DAFC10D217CE42EDA3E5D50129E165AD1911D78057F8FD2648D2BED0A647DB7A
BAFDC4640C16EE5266053F000659FF0B77253424B69A65422B3F05B4A6ABE46F
93673745DE46AC6F607B40DABE9AED473F05EF385996BBB24ACD27351BC2CB3C
B70F5B346DA1B83BCF38245F8BAC1A14ECE3270E6D5AB09C665691181440D2F0
A0F3406F3B524647BD936622E377E76CF54046D1FDDBB87A19255439CB66B953
8D435A73936DFD699B90F80A589C2C8E8145C824DB7466314A17FD9B9E760691
CA9C46977D7AD395AF659F32B968607F926A1FCA6467891FF7B01644C6E44869
13511327D331F4EBB4FAF7F7A3BA82582BFE572656A8E537F7B80AD53F49BF37
B9A989B020C8F8340FDD38CAE02D3ECC8AF97CD2E2D9F527535588DE71A3FBEB
7EF824B7629CB10E37633BDF396471E1AF697794A1AAFC57FA6C34C812875DB7
452D2D6C23FB8CF6994F2C3C2D8DC72F4DF84AF5583D544B9D1624A27046A969
55B9315F0FCF55E08E70BF16A8D39D982CB02C01A6C93CE2893CD9D247755768
71B3E41D5780BD2F15E9EBAC23CB09F541BC3A5CC94681BCE1397A76495C7418
28648330096BF9C0D7ED3235797670BB75950F6FDCE741FED7D878DFF769BBC6
250E0CE80D4477252488434D7D92EB3AC6D92D0568691BBB67ECC948DE1F3D33
5F5CF93DE8F8A7F59117F359EDB333FF1C98CFB36D4461C6B2AAE86C6DB50F36
A005FCF238518ECEDB09382F9B1D40E99E5A89D6AC0A05725C6A565D09A73A1C
8F68029B15008F31FC482ABAC783400CA64134D82252D223D367EF2855F77FEF
6C9F462EF1AEF1C44F1E391F0D60A920A7D7F5313DA3D51118BAE84496CE9815
C170744602E8BF9887ACB21D02AD043715F8E80FB39C0491FC57A3541476ADD9
4870CABA696D28202777E5534360456707B970EE71459F35F5F88D7107757105
1F7846638F5B33EF0AF225B5375FF5EAE1643E6B1DB8895376B02CCC1DBC2BF5
BF5ED374E1025AE89A890482C09ED9AA2054654BFB4457635C2743943BAE331E
6866ECB206A602210319A6A22FA6A3B430BB6421AB92820D235417865899D981
E053BE4840F218EED6E56E3F21B998BBDC81214C01F2C432EA9077B11468F250
60C126405F0618B761FA917D30FA36FAEE983E7C7ECCFD7F32408B356DD57D88
AC7F030549281A1EF969103D06BE7F2B31936D49F41FE02AA1826C4C8572D537
8BD4641663CD0AA042BAD97F5A12EFB5DD4943F6EA5CFE1E314AA44C18233512
688B2C3118F22BE159393DDABBF7B79C70F865F9400E6DBB79572A1B5DC2B618
A47774CE3CDD17F4E1A402444B19F6E0609739A692F2E1B2C14781C5405B3C78
C28991E2CD2CF1AF1F7E730298D74CAC168939036E1019F2213CA9A6C76BED75
407AD46EA861D7958A698EEA1A77A427E89ED1DD4E68FB0F25D1912C61FA78DD
162A06B3C60CF6B07EA34CD1596707FD53986E96B393800EA4FE064D23F753CA
11896FFB308C0D997131A57E37C170C64BC9095BAC589BE3F8C7684E7FEA55D6
62DC9AD78F82652C96E6B5F493453E3F4FF143BA97A67176A0A8DB86A3FDA6FA
C42ACC95751A49E27F1A6D783985F6908EF9F6E3A24E2D8E9EC765FAE888D848
EBEAEE67343E1E086E33A6710277293AC90CC9CF6236F0D0B297A08EFDF419BB
CA172DDCE4C0060C6841B8BDB10352A32C4C0EE1FF79E35826A88FDF6687EB8A
37304499B0E9DF090AD6073F1A6E1E1B5928302BD582D931BA20281CF2462595
E13B997F362A96DA74504EC17F3F5CF79A8036E966B7DE0122E890BC75DD60BD
7AD9F6DE2DF8237FAF1952F85F9BC5319F1E504C431B99EF4C264AFEC009E217
3C12BEB88D7CD69224D017A14E57F2F12524CC6FA85ED3DC2559DC3DE310922C
6172862251C0F9C4817FEBA0C96551EFBC5B716966CF9A3D0EE906F30262EC32
DFF30E2F05103BBB9824437A76FB0F6BE8A20453379519A982A75ED97434BA2E
4B6D524E529BFFDCE98C90D26F1CF716DF8BC69C763EDA72FEF798A88D0333E6
18DDA239EB416D5B6CA34ECC175F86D494D3026D631E8658F78578D8E8A0632F
8CF081F0DF349318F6B04BE332C4D9B6176B1D99FA6A4EA5DB214C4A978D43C1
10A82265AD68C8D185DA6207E47FC3C6CA520EFD42F6079883F1F466A863D5DC
310FCE3C1432DC8237A1F760E7A4EFB7EC2F4F4AF29F1D37887F9CAE0079426C
9E8D6DCC6DF188E90328B33DC496F0465D57F5F6F050DE9561566C772291DF24
0A5E815D22989C63A231D337BC7BB8672EFAE1111C8E0CE9348CCDFF4D18A3B1
DFD3D60C3DC5CFC1AA777F0E378A24E12D1068B36A84342412546F9B2A393EB5
D7863393F30FA1781C3912E58C3F4E8959E724D526BB479FFE17CF246442D082
D84F9BA2972488C27675CE4013A38AAF6ACEFF9120925AE6C18A96D4145589B0
5BDCF88FE700488BB128E089F5499F09AE9F1F4F9FA692F0D00391267058D4FB
21542559C799326A87F55F351DB697597BD87E878ADB29F2DAA7BF731405F48E
B68AA41C9E667522E3C773AEFBA86CF798653712EA7B0BEF5B674A48736EA5DE
E7354B2DF77FEDCD0A1ED33F0AFC921D8CDE19106E3521057A1ACCDE913EE652
83033D6C26B7B6F91C5E3A6C8ABBED70D635480F120034565A2F10DFAA3791D9
31DA8A93A600FFB69D4BB78D5E79CA1BB498E5095B5DF5D52F46BE89849784A6
298CE9E1B24F566B74589720209613A102A1979163F3A316640E94E49A9E7375
13ED0365509E6782CB8F4EEBA2D4AC9E3FA95B3E6F556ECBE5F094233E2E3E3B
5837021B6085D0F8A3A58FEEDED393CB0F99C2CEB67A4E17D597F1A733D5C116
9B65848C71B943D6D767543188B650713B3D41FAFCFBA2182A8E42DBC295B492
AB3B5669B9481AE73902BA96E448591FBE2A40F1B5FA395EB5427F4CA470F96E
6D2B3B2FA4F62C1D8DD674AA671616901AA2FE49D6B4B48B9F65CA46355944F7
5938151DA2243DDF775F9EAEB4281E5F59252EF903782270779C89D4C1993EF9
5E90D23E22405E25C0D85D84D6D10EEDB1E331EACED7452814097E4FA6881E12
38335A996F851D0CCCB0A31D8444ECFDAC52897FCB21B73D13B6FA37413F65DC
A9934A8726A44830EC9CA4B3162CFCC8EBDFE0C8C4CCCB643DB717C547426093
A240D5C7FEC14186FED3FE4B316396D72B3E3BE51ADD27C81123659570C8A1FC
A204D0A8CA5D67A42134C6FFF5B72527B494D7767C7905406830862A9676FC93
4519F602698FDEEE4C70A4289BFD7114805310C2B4404F89FC180D193AFF7775
13B75729E9DE6F95F86CEEA8BB3FC00F35358E3F8877C8FF3DCE54B3266A3891
115FAD3BF0D4094605639102DD4F848E741411086844430B4C46937B193588E5
58CE52797653FF2E79E22661BA499CDB19FF7494FEBC0E02F338325718DD3AA0
07A5D22E17FBAADF807C859CD6AED14982875098DE87B36CEA6A1A5E8E3D7E0C
BDDB76FFC8A99122AE990E3FE6A088CA22B74848356914B5864D41ACA8798DC7
BDC9D98AA4A9C3B5105E826EC6AD3D7FF8F130282B11709D18A45CB7C73FD3BF
61C291B742EF292AD7D97DE1BF7390DD19F3084BD9365ECA9B62C83E4D0796A5
7966F7E0B3AD174895CD983276DB42B3C0FA77214E99463C1EEBB4D44249C853
681ED162B9A260B12115788E6ACDC4AABEA80D2F71DF5753091C8FEC17E0054C
813F567CCA9829EE5EE23A2F39DF765786D5E221B1A6ADF8D2978FD52270B259
78C81900AF7D0AC629C16E5B7A9766F416CEB87BDD6D2C7514D454DB1E65F754
BF6BF0887FE26F5F1D85DE8782B6EC153A44A4BF2E12E9F3C03EB317A252AE4F
EE35E454776F820497EDF53F55BBF633BEE2FD2D9F0053A15F80E9B6162E4057
138FE6F698FD98847A335595D4DE9EE3F64BBA991F646D9A43D74CD40D6BEA4E
500671F00C404213368746AAD220F60B780901A8DC37EB143CA5EB69FD614D80
36AAAEEC5CFB8712E73CEF2264AC714834A884A4957BB6C79C900E3E618B9757
C91EA8D18B2A5F030F110B321DB123B36E3BC9B73A9A9F06AC5DA701A6EDB06A
8A28398574D37CCDEF9637EB28EEAAFC2CCF068798CC12DA12C2871E2BB3D38B
1E26C038AF44CE8A60419332426D394B103AA8DCF4C92BD5C12EED193FA438F7
C5E17BFC41261EB3B868F89AE2A143F8322959CA7295F1B1FD03875369B17C25
4535313F405136B388DF62DE7CD4DE8227D62471902FA06EA4F1B354B1DA2EBA
9F365F7264AF1803892C59B45284AADC7C1B0653CC65DB0578AE328A7ECBDACC
A27FB13E9B2DAFAD14ECBC369FEC7C566F007B48F2E1B6E76DDD6A66BC8F8348
A1C62EF0AFA87942E7323210BD59779CE4A736A07CDE88D6FD06F2CB6CC0E7DD
47CE14A01667A84EF1AF5F22C6216C6D0A90DFEF88357FC14CC38E0520E9FC0B
E0D2AE8283D5C045B24082F1624C3C1D2E28E876A252B81A7B00EB6BC82167B0
54DA59819A21F1C8B92DC5A2F87357AFAE795A757CE00658707573DFD5729961
7BD0119C6505221027B58BE33F8FFFD82166270318B8FAB730C432010FB725EF
B71A2A76CFF868C4AADA7606DA58D4894A9B0B7B1B6AB1335733109A98933F3F
47713E70DB7BC33318BBA20BB4BC00C76FAE12DF90DDFC778F5282F937B3A6F9
C4CB065B6B452AFF11328F28F58581C1DA01FF7F257EFD47E0818AFC72C460BC
7199477F1D8C025E641C294586F537E6CF187A9D3E04263A2D0E008055272893
F27AE5FDAABF064EE8DF419DEB678252BE5350C2B55C6A6AEB55781F08A2109D
4109BF113DF3ED5FDC66535B3BF3C43EE293B0C64B83015DF9DF0C50137993E3
961DDB2FD731796BF713F63C42B16D13D11892BB6029ACB1A1DC06F967F7913C
71AA4A086F51E0049070F938D8BF707C52113ED59212D2C66AD23FB26AC4F131
AA6719C519ED8C0C88184256CEC43FD3F1F143B898DAB878C83CF34719C21A7D
F6E470A5461F203892CDEEB67386D62768523E0FA5EC09BAF72D15FFA19FCB57
F205DE1090DA1B5260A5C04EE693619BDA6694730597D28DBD9C8B2C5C02286B
495A6D3A4D6CFE2FCCAE7A2EEAEC10A82C700635CE1D421820A376FA5FA8701F
F163A7A60105745ED1B0508309D3C2B1EE2E1F0F8D648D84C654AC6C56247F67
D3FE92015971C3DE68F34BEAF4E4CC9C8D80E2C16B4017B57780FE6185586BBA
F699E8FE93C01360B6E3EB8C755017D5EB16F17CCA442310DFD3A72B424CC8E6
5ACC5E4CE8ED40CEAF2FCF5D978023A435E3EDDB4783B9C66CAF82C4C89F9C7F
1E75C506DFE0FA63ABF48AED535C4096133DD56248A987CBA94F05B59B7388EE
A526ADDF3B486C025F11E4DEC2B021393A2113F5ED29159061F1A55EA814C2BB
F2E38E044DD3C306F3C44B9F351C81E06D4358318588463E9D3FF25061AFCB75
94D927B07A7BDEF9AC696D42451619C3C8D672319E03EE1523D212F540BE196B
E0795CEAF43BADB057C4FE8BE8F9D4A68F63F1FB9DD94519D774DFFB9EA25BC6
21F1C7ECBD8D15EE11E991ECB7B1BA9B45857AFC4009E80393D5B72216AB5B1B
027884F5FC21F1B33FA2C1A415C787BD15DCD149D43287BBE845D0657113F6A5
D49E3A023FECEEF28432EF31D2216B2E0337B05E56896AEECC61806C5207B70C
6AD420721F69F998A14F85F7DAEE67934A97BBEAB5805BBBB01A96C005FD77FA
647CE01B9AE8C9EC2FA359C90E91E4B030A0D3FA43AF8597438F7DC843FBEC82
25F5FFBE23076139154AAC402950C25C89BC08817D2ED3B07907E01648EAB22D
17AAD232116B2EC637D361AE80FB57BC682B785E9E109D13F974C0455DFCBFAE
2C7421810ACBFDC7E518F3F553D2BEBF5E44E1243011A3F66975CDBB85E42422
6D57EF6F4366655C51242527316D800C1473CA28BFE6D704D3C1F539A00D8CA8
B60B2A776075EBC64A00548C4B15D888CF12DADFC51BB2F9764D56EAE3B4171D
BD0ACFD414D5947F9EA81F57967CB54981AA528D1D5D878535C0EF366A4ADC8C
1CBB09136574AB691FE176421098A4292D4AA370C87B68913B77E583A54B1DEB
DEB9C19D18C1C709EC1EC079D56B5B7933389BFF5FB51F36A92C610416D935F4
DCFEF58C976D1C27B67A01504D207A4FBA723ECD561F8F31ADE2487AA885E3B8
29FC799975402F5748E325D9965510AAC6312ABA4280D009CF5CDCFAD6ED1614
836A239D0955643889E5E89DE348147D60BCA1C7037A605607AB094A90A8D7FF
1CB190BF21725AF6E63028574CC39C47F827AEE711D24201CC7FCCACF67E6300
AC1DDDB2EAF2FAC6F5B31544F3C81C9147FBA3BAE81FF3AC70E29787AD34DE58
967015E9F13E8C703F1AA814A44A279976857B0A03B633F11BAE1954B5329507
26D8B69C6BAA83B656C36E1EFBFC603AAC7CA6B4FFCB2663738D3C891E8884BC
75B3127726DEE078DF4E0747EA6A3F7747839BC46811D4D4F88A2A7C3EC1ABF0
6482F22D7E4995E73D37CFC2DE68101CD86F4FBDC00550E92B9DB565D33F6E4D
4A0CF93248F9E6FED1CDAF000916F99DEB2FAEA4637EB06611E8B5568DCBCE4D
4A0306D6F3C586730DA35A2B7BD2307BF531CD940AEE201B4A340B8F207DDDFC
334F035E8D26C0138808F207B636C3DE6A5DDB3966DE068BE8AB832D49F73A64
5C09BD88853DCEB64EA109015887829A54EBD4D78E46A9CDA9A7F49724C2916F
B74855DD9CC913DFF1B556BD41490234E0AA2E72D3561A25BE91F009BDEF21E5
EC923CB52E2584A077707928F58BB6E70897F6E7E512B956F7F9ACFF2BBAC226
4AFB3B291887C87CB1720F663ACDB43246EC4AD2DA428C1B35F991BD59B41857
852A40F06C8BD6B6772FDB539568EDA8A072CE5ABB4429747FFBD1C19FD32503
97D348E63BE58B43992424609D9AB1DA8BB07066B3855C49CB252BA55C7255DB
15DD023E527781B90475D6169D8C304C2DE1F2EA95105E2503472B23C2DC4B92
95B979D02DE1C6E61CF962C03C1A17B2B1CC53E00E96DC97CC4FB149DF1EA706
A0DC87091523DE3C7EB844CE569D2F4EC3FAF8BC5D870944DFDF1C4A5D86C429
0EC49C63487A0518D578FD3B4F4813338EA025B50DA51030B0D6EB89A167CDBA
BCF61E5D0259B13ECA787805E7F4C34D84CB45C6D9D062756FF39ABC75F69702
7B7D30B15E56BFA0D3388A5E121260202B17E1F54DD0FBB51B24AAA6039EBC53
4F149FC9331842866174FFC68E05A9A0FFCEE7BF7A3AF1500656ABC9895C6BDA
87331360A6A5FAEA32E6B94D1116F6189989EFD86432B324656EE61CD9456567
41849BA7CE92155BF03A84F0DC42D0E3E5B9C7C2E8C4F3A2108F8D9407598854
E499BF018076774B9199F154842C5985C7F101305C5E4F48C36E236714AB74CA
FCD5EEDC6AE76C91D5260762375AD18AD90B03E9F96D5A04CFD0F5276B92B858
00FC2296B0331A3AB9EAC7F90E4E226A7C2D41825A5CC7CF49729F121F01568C
C12079C24C6494DF2F7B5CE95591063619C96ED20B580DA32999639290F07F31
CA1F63C589D2785B6ADBBCB60CD35D1924CE40816721D2C3CD1C2FAB9C0FB23A
50ECAB2A626A7E9B294FA1F0C3C7D3ABD49C077E08DE549096FF67E40EAC4176
064DB5388507EDB0CC16EB5D05E8AEBF6B00FD021ADF4344C6A33A5C619AE0D5
C5DB9CE9146CA0D9788259FAC37D3EDBDC82C071C2A8497AE19ADD57E2D6273F
AE8043F10D2D3164F09E0DF24CC81038FDB1F0ED831441D957D9BCC3DC399A2E
543F971351EDAD0B55A8FAF296CDFD3AA7CF90489301D4D91EDB974794603F32
22D424E84076CAFE5A3E707BE4160FFCB6A2EC5055F87364D96A70D1380E7DA3
CB4F3ADF7C9759041769D386593355881FBA1F7E5F4AE642F33E91F006F40C62
5A23B460F8AD28968F0C14384D6D068329A79C327B2A1294C94F90303DC75EE0
8ED5912C5CCFACB8B2B1B3C84B1F69B4BCF24218E18650B1FDE06F71363E0352
F7FFA5AA824D2B721CAE8D450BA1F7DA49E7DF4D25F26B9AD6C4354CB29B25DB
3406996FC4F1C1CF0F722EF08F3CD2CEAF4B4918295C5E26B467B8A455E0497E
5181E6C25F881FF66DFDFF5728202724F59B94B56DE9A23DBADB01EB6E34B872
E847936822F2DEC8A2F0B7ADB2CB55C15A17A910A288ECB4B9DEA8185A6565D5
2CC4B7D39765F3020FF286CBCA1FDAF9001526FC2EF89C3A6832DC5B9199D858
D4F2E08E871F8DC3F79C3B72654625F824CAD359CD56EECC6F330C0D1EE53831
2E55B32188C0AB927AA295FDEEBA1836F84BF790C6DC2B10786C9B5FBFB027C7
3872BA016D335E4AEC9E26C770179AA47E9AD9076AD9B33600C6989AE3A1B49E
D483C3BD7FC31DF3C5EE24C352EA771D7EEAABB5CE914901990694CFAA6E0E63
F10593E2A1BFF387FB03FAA5AD128BB28CD64C2E55E0F73A7BDC616F52758732
419CF55F06E7625A88A96A76EF4F60297AC55DF6698FB08D81D2BB63E9846AD5
FA6BB0E1781EDC78E93F0C965E94A2862261DDEB50F8918520E5CFD8DA27BA84
70E49E644D64D6C0A55424056509BC9BDE9DEEB2D1E37C0FDD4EDEABEB932F4F
8A5D1FEBBBBE277D0D440E1D73BD038CE71AE2A71B665E5EE2F5DEDACD001C56
C02A7F3B0ED8E06644AC5A5F044B2A0C74CE7D2821BEBE25E1E3BA6826CD1DB8
2B5D0B4C4FA6A467BCEFE03BDCC94AFC3F9ACA595105616809A1D88714CA6495
9CB2CD092B87393391597C6B53C5CF4BAC36176757CF6ABCE6D61CBB2BB79334
AFB99007C4D2A87C711BC0202C9EBBF71346EDB3719F0FB8AE710ABC89A739C6
40589DAEE82491E2ED57A3638CC223994CECE99D69E90A522DF3CB8ABA690D5B
1307D178D0B824FCC0AF66CEFE80F2149BFE59D33D14142DF5B45939E2AC034D
028650C8C0CB6484471C265CD138201E8E7773086C5889E5AA4DA846448D7FE4
7175C8EA5084E4FE77E2F6A32637F92AFE35DEB0B0429B210C618E4B8BF7BE83
47377AF888E8EE2336212A3C6681D3C0A65D39DCC8A8B66EF039D64D403B60A5
D4BD196C742383FBA8AFF739BDEAA55E0B15696DBC86B264CF4F3D892D08801A
DCFD6D1B4B79F47CAEC3ECFBADEB336BF4DB1217F996533D6B65BB27413D84E7
1867DE2CB249D2FEBA4EFA65D653725172AA0207693A627AD198FDCC637D3832
25830E90DF5B75B6B74663E3CA3D23E839F8B2B50EA8F1CC8B0B2825F46E2E3A
68F60A97D1CAAE43A1F46A2114890A721C4B7C2BEE9B6C91F780A44AA0EF954E
28D8C6E3E116DA3E1FCDD8F54E68CC78BDB76C25E78C8F0A2EDBC93AFF2CB8EF
99DFA9A90CA31148E0A1CED711B606224C062A6069CE1D4BFD5E32225A8492B9
198F411BD2421FAA2A8BAA58685F9A92FB48826F625FC69890636AF8E3A306D7
9419D8BF7E72103C34A8A9BF345EBD651607383A6DACC54D9B4527BE886A0E20
7CB6EFE0633721188BCD326C7C332833571BB980B2EB87D5A8FCCA97E28978A6
D0E43CD6E4858F11F816654F1AEC24420105C66F51F3232847CB0B7581B418B3
8B7615131BA52376B10ECFD157248831B5B35B94D741CAD2C4888468328090AE
920030243C4778A87082A682183523066A07A3AB21182CB2ECC0C4211A289A85
5401BC45C15C3D262149C7A454F77A126A698118DA7C644936F205F2B9CFA53B
6E504489B4D779270343308E08F8781F5806F286816972AA244E1A0628A6C37B
33715B1E2E8A248ED849DE286CD47CBB27E325EA60B41B3577DEF20066C3E85B
E169A22AD798C134AE7A81EC776A94FB6224D6AB91B495BE19047DAEC0E24CC0
FE947C4D9C05092A895C14B005BDA2836AC252BFCC90065FA2EB9982217EB7D2
613E5A2228206F6A6EB67B72EBF4108BE527ADCF1B38AD74221CF033BE81E93B
B8AC82DEECA6B961C9608BF722928D0467FA53FA1176FCAF6DA55A0918693584
3F427C8E784471F2F76D1BF8192CC5B709F6704F24E3F9A25B95148BC987D5A9
2330074EA004FF10D6184095A1FA040AB47E81CB40D3AD540701F4CE1C1AAD63
610DA68C37B3CECF63F045921BE63CFB2FF258DA7014E1F0D04E8C8D0DE26EEF
B386BE06BE7D5B4CFEA76FDA756B82682FD29CDD5AC49519DD222566CD90480C
B7A8D77081F8643B103CDA332E0E7A208C812F1E995905942965F33334763576
B53C4CC5A84F9FBCA46E792EE1F6245212C035AC4E7DCD7D136F8D6125F1EAFC
72699354EDEF9915116BB7839F68CD9C2488DCF321522E4FFE463D8B704A11BE
BA9A56F67AA753BB875C6A3018786B2F331C041090912853A5BDB74D857A7B21
E31A51737557B354D6CFE965D5763F4B3A285FD59DE5C025D128ED4A0F94D54C
9F3F0D72062A8A3D3A04A59D8D38740313B82FC69BC6374AB9FECFA37DA046AB
4C3E2AF3B7EF9F64BF2CEC31405E80DFE144465C85A86B98A7771FE672DA2F41
BDA3FBD61818EFB40C307496FDAE08BD682CA2BC53EDA950E9384F5DF855B848
29005A0AD4275D989283C6EA95C3588606F7AB41B429CB5FC161493A1A6D2441
BDE98618232D212374D682059EF8915392EA7B945E4732222FCAFB4E33BC9374
B610A65A39430900C1AE570A69FD4401F7A6D2F36025DEBE2229D36342CBACBA
82C6BF63691B7E8F089C9CF55D99EB15E0C195299B4691ACDA5454DB4B3B22B2
AF7437D5A5D2544476CCC6AECE52122274BD04359597019B09F5DD07A2D5E281
B875797E6E1731ADEE5C13697879B89D127E5DB62C8636FE33323A58D97133A3
C8D8B03E3A0AE004E24A108DE8748BF192374629101587B4DE9BB39DAB167C8E
0188B3F06EDB59E666AF8704A8DD18BC7353F2F50003FED5FAA83F25F5A8EAFF
5C071724FDA0C5F159645D3F9CAE5F1692A1C062EC1A442D3F404069E89223C3
B3DE4DA8D65136E5832E4ED3C7849F1F62C3348F6B946F6EF8DE1E5B61EA2A70
0C00D5FF2956726DE6308F141504A86F03FC8AD7D84446D7F0E8869301BB651E
897E7BB3A2CE85B8878DFB0F82C311A04A86CCF14BF056FF0804DEE30049D1D8
D65FDED3754509AA9EBECC2327B4C4A0E629CDC7888277822490EC59A45A176C
BD4BA2A6AB4D40819D432E99A6AED83DC5D4E434A520A285EE506A4D42F778FB
1E21E1848EC1DC1A3E7CDEAF0F2641A5A344919C81E80EE3A0B85FF02E5AF8CE
BFBE4C56593FC71569087F9940985825CAA318B0D8DF7436DE4EE961D20A71A8
84E5943F7B00D0F3214826F1F35C332D1EB4046D6B37990E9F19B7627E74D405
EDC942D3BF96D188D0FEF111F5C17FE78055663441C2AD9372AA258380221CE2
C8A0AE97865CF34F65E8FC94DCBC892587036ED3EBEA8CADCC989CECA2A38682
0183EA07DC5423C2E4DFA8BE010736D2A3B8648306F78A3A4EF5178AAEDFC7BA
D4496D070F0FC85733B5CE56F18EDBCBD7516C2EEDC71B518A7C2DE4EE564F32
4DA9554A738DB224D17BB87007A04A5343AC937261E6AFF4312A64FB34B87A0C
9F66B1E6E6F828F13C795CDB269FD5D54442E57E247A57F0BF6B62B746E6DFDD
B8199907269C506DA5A6CA5355B1492210C5C1C2AB274EF7CC9E8DAE24079559
B2A456A2A8E1273D9D5CE37222DDFAD4E06D4F4F4626A30647A40CD317E85D9B
EF6513915E0B86D1C52A895AE64C280D428A6191D8D04288F0196A186D50E98B
7BA3F862CD07D9E8EB36085B3E83992BA40899DE7F19C48B7846B745D1F6B64D
FCEC6FDB95B2369131190455DAD2418FBEAF0D70C8F221E7C0BCCFE699D59668
6DDD16573A108EF120C38BD5108878B638AA2878CE98F9614B13F9454576F86B
9166BE2151C64D49A0CAB56838C40EED683CC59EA715F082B0741959301DE09D
70DFEFD846D5252931F738EA70396B133FA1F8D80599ECCA66A399A26E69D8C2
38D7F3747C0457202D7D0F02C98B00373AD6B2908872F264BB65CCE0EF44E794
2C80784AF96C89D9C0706B0461F3A4F8E6B88C4BE51DFE83C92796310320999A
3159B737661C58FE4A119B8965FC4C857A7FBA884FC9C1F6076C3064E2CE85E3
4C5AE19A491201A7A7E58845070F4DE9F5576BD52EEF33043985C3560D43A072
DD9821DA593D4C88401792F14CBC5F7D870110D1C9C8B788AEF720BB7EB22696
51511FC32E3C6510397B8C8FE38E6FF4C58EBA799C53D68A90D54A156B19C49D
7FED1775DC177245065D55DC908600ED688F3548917B72034E5A1BF9025103CD
91336F6825DB538DD7DAEA57847FE3C68913D278A8D5FA962056C5574EC0BAA2
3E8AFFD5AEA67A1239680C7755D044765363159552917FE40FC42938A65A30E9
8D2460DB78C50758197CAE4E095A7B0A908A78B2FDA366587579CB524BC49E5A
0AD83298F088D32818CCE35143363F83CCD8ABB778E566CCAD36F91B22DE8149
8E4119ADBD819998BEAFC4CE5BC1174AF722E5EA16C02B23FA99370B7B08AD1D
245D2D10F379B0555D81CB9E2A751FD2BC0C0A8D346C0376AC960DF0128F7181
14CDEBAC7CEBF4CE61BDCBB6EF32F49243F7C91B10F5F6BD3710DB33F0AF5071
A26269C0065A9F9FD4313063E460D2B358A62FA636C0BD990412D99D9BBA7B3B
3FE599938FEF1D799FC8891755919129DDA8C4C57E2B15BC2B51A25AFDB18801
D367D30C51DE3865AB8C19B176F5EC50C65EEB0EA7C3E3D755A2A38C763CDF28
3C263D0CF9373C7E54CC5FC840969AD47F1784316C06E55AC10A1F2CAA57882C
C7EDF4AE2C3754CBADF613B49AD90D0295FEB60060A13C731EFF9609BDAB4710
C9C0240F0395446E4F2AFE9F0E6B78918931FB1DD4EA45FF1F8949560713EFB4
CF254C84D21208EE4E8C9328ABE15D84AC5213CA316EE91DA73CE5E328A4D186
566DEA1051877BCCE6DEE7F22F7CC829A95B9048F6B216FAFC8D917BDAD4289A
D41895113D3E88AD172981A31FF6BB4F4F599BB57A6D12574BB4F8A93C4666ED
9FF711513C639F781D81260CEB70F8340DE0ED4240F912694E443467797BC2FB
9B321ADC2CEB865A447801BEE1E57D7EEE879861CBC005BF8D0173E75EF7DA49
C57FB362A7D441B7A336DC13DB42907ADFA1FE75561666013CA00F5EFC8C312F
9BC9A424B518C6025F8ADFA9D7D8E795FC54477975B5D43311E707DAD53AE2F4
B8A4A5DEB3A711C4B911DD27519CC9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 48 /zero put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 65 /A put
dup 103 /g put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BFCF3BD739E32E7FE909AEE068D50FAC33605FFF98C7D0115FB860178FD03DB9
7985B78E0AC21F2EA065FA841F5928FB85163B2E2D8F850DC7EE313912C45C28
2783F6762C67882EFEDDC7E7567F91C16B16FD8D5A1ABF35B5586307701B91AD
54984598F2AD46FEE3D68A2731BEAA754C8E730FE0E84952EF77930E4118F8D7
2F3AD756DD9C3947B463F69CD1C81BC0B195FEEE6CCC98342D18B2FE9A5FD33A
066B5ECE33BA7594C2DA29A2BEE2B97975222F742E7ADF46171A5A0C0601758F
64A53E694956427A8FF5A7D68BB46CD4780A7B67B2E208D523B5714A2E9C13DC
BAE5151A16A45B2AFC1D9D8AED4E9B6372979E39199865745098B017BA749E62
4E11FA97795F87F911139CA2CA5022D40E5359410D480FECB07FDE279E1FE01E
A77F8B138FEC7E5B20F04C0A20DC6FF69C7B52E7203A15B5CC93A363D46E5760
E6EC36AD5921A53486D1F995708EEDCFA10808814B144F808C2FB0F28C36B65B
B5ACA35F370D50D9A1B1524437EA127C628210CEF06E9591437E833CACC4EE38
33E13D5BFAEE2FEE5791BE09F27E2AE35FE3345ABEC8AF1531D40E89F78CB8FA
C276E15A3D0E59869B06C741387E84737C66BD1EFB9A13BB80E180D49D1DA110
A4F23D03528359F9CA0BC74A7BC4D98A4612314F3000F75164E523EA028617D3
266332F1E416B6D862698C5853735B522733016EC04B2C61E60895BFA5D2133B
20C35034D23F4124F5026F442BA04C7B2DAD4734BA333DEAEE5BCFC4AACB23F0
5799CDB435B12266966A3F7A04CCF558B628DCCF0C806D17E50BEF8127F42848
D72FED59C1F78E5592A74A73E9FF704BD67A16F594F7AE332E7A80AA80E1EE80
EDD44ADC0E725A90BBD683B767635FBDD186DF7AD4AD193DA60D15BA77300401
B10D2DBF315E24C77B6BF13F46431D7B2EFBBDB4437A6D6366F9E16B0CE133B6
4676A58E68741FC416A79948D0914C7D86C1DB51EC3CC2935A60D8D844A5C641
FD95191262C803A401382B41143F7CA6AB1AD6C65BEC06998375356348727FE5
C268C74B08617E3C6820F952E95123757B0102669CB93FAD961081CF5F426FE8
5FF51D07BE3D5F32E24E78B1246FE17EF44CAC2CFE558A5D00D0411A0F9B73D0
6F4E4B03120033D5F0759B2F65C73F507A4EA919C9648A2D2C3B9E5BC8BA68C9
75E4EAA95F45390B8CCD58E4CCA7D1B1CBAC04F6CC8ED7C87EE40CF12F0C4BF3
D90BBFCF71C6CC226158A5F10ADD1FB99EACD852220AD43E2A735610E589F141
CF0D4E1B411A7286BA4A400FA756D7B484A3E197CE49BC4F35513006DF54D46F
D82C9F529A5706F7A8FDF448023C86F4DAF9E3CB38E35855F1DBEDF0C871F5AA
3BDA32888E0742B9604485270E2994B1B5123FA6B112D3E61919036248F4AD74
001107B1F1F2814EA1B1CE22FFFD34855F0FC5B3E858FCBEB3B11B0A8E4B2646
ED6E8920526CBA49111EAF0EC21D3D739AB929AE517C08715622ABDBF8A40C55
6DFA97437CC869282AAEF644DDCF7EC601F86C84CF4AC39B02548063A343A03D
C26BC078AB05866A4D1D62E3260C93DF60950835CE79EAA78443FD573016C866
B1F0B1D7EEF7E3C93006F608026DF2B108D74C1B93C1E17FE7D78E3830D04186
0926E7D218CF5BF2B0FD1AE839818CD03218FC6DF6D4275103BF06C331A2D6C7
3CAAA1E221031B3DBB9F6989A011888FB23130A7EF844153031F4B458BD53508
C247B85E107C3D2BDAB19BA1D3CF06D9216DC46BA9D849792521A3F4E38B311B
CEDDAEA42D3180B90030A3ACB6BDFE4B5B9554010AFC76D35AC4E474D46938C2
B3E8177DC53E3D2FB25AA23151CCFC466BB634497AA9864EDFFB1910C5F81B36
F79D1A8A31381B664ECB2618819DA9D2FBA5B93DE17B74F218D02B35A518E237
39EBB733B50BE7057FA791CC8AFE80DE8151E06798A947808A132123D6C67847
E952334742355C2EB7EACEFAA7ACFA3A8D15694CC58A9E3BDFBAD9226955558E
CB00FEEF03EAD3752D80ABE23A5B806F2A5AB8DDAE320C19E67AC3F289D35907
F88C0F90ACE736AF39E094700F05DFAD21FD23231E3091AE4127B420B2B4172E
010C79AC414B7BAA58F2CFB623F8816DB1BFA6949F7D0A7D124F960A13E88A3B
8C09C566E69F2A5E3B977C19026D1F7A56904536880E646F751C64474BF5F1B6
3A9BBE4EC499CB74A40BF7ADF71593C590A0BE06518BA6F5C60F85EDF8B4CE5D
9F120CE7DB059A6580B886ECE2D024653908D4A0F9B6086EE05EAAF59ACC8404
AE8D0573F092A4CD4538B92421865D28903A67F66E178CC95CF2CC76BEE95437
12721432E13B9DC9FB1291E705A71F501303738C0DFCB6F60993E92FB951754D
BB2E6A051F08F732339935B2359A22BFC9D19339E38929D5FDEEE4CD614221F8
F66131ECD796B7A5D2FA204AE27EDBA9F3F2A6D8A31AC0A76A2C1D2772454962
517F93D4C3BE9DF8811E859C6124D2E6FE604D58C3A3F9CAF08AF7C24B416623
BB3716FCFDE051F8AE1B24D89C50C3C5EBFFDF3CBE89EB1CF2997B290808029A
74214F2AF11AFD4D8369F055E3075DB011F0565A678B7A8680F60984EFFBA6A3
0112E72C1EF8E3FCD95A5427616A248291999FA2769DC7AEDC028F83778F84FA
8F49C3AEFA86D2A0FEA4E8F471FB7D81E4F41B95D71752A3418EA38B6D76C7F9
D41AE9AE9650E109E5F61FAAEED7208A6BC18665B51F5F633645B30612384856
A91E5C9B3ED01636779A315D7200451CA1016256A98C85E014AF2D75A7EE43FF
F4FF6DB61EB74FD10FA422EAEECFD195E21895061D6B2D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.0: CMR17 003.002
%%Title: CMR17
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR17.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR17 known{/CMR17 findfont dup/UniqueID known{dup
/UniqueID get 5000795 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR17 def
/FontBBox {-33 -250 945 749 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR17.) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 68 /D put
dup 73 /I put
dup 83 /S put
dup 97 /a put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9D6295729076BD8E
CBC0F4C1BE246922D2482233846A96D867B66D9CF25A1DB661141D36B8506E61
A022F9EF8BC1F2F674EDF1533E67A78CA29A612AA9268E113C5EB84DA56CEDFC
D7A111403E6E2A8682DB04368889747E003A124395ECF0C7FC81218552EE7C6F
60BCFB4120893528670D0E8A4117EA5676915E3591AE5652D003EEF67818A41A
8882E102AEEEBECBD15DCF632ED246A6A58B6A7780DB6F1F9AE3FDAC8344585D
E104F2BA2DF06D68945889A2A3B6C262FB53FC670BC5EB7C56887FBFB7AA7026
84115872CFB0652C6BB330447AFF8F0F665EFD6A41D6DB6877B08052F402448F
CB21C26BDC900636C99CA347B79AA73AFCDE9762A992CA3DDF7279E5C50F453F
52098529850AFB1F501A442D6A02E0A2896F81C8AC735AF1E7EE47208B4CC944
649DF6802EEE813F1456205C6126D7D0B1821AB62DD65468F3A30575E491623E
0054E2E680E4402E1C8C538DA389B81603BE88D6DC287A076F92B224CD58A0AC
44B8D490197341808DEF243660971F444A560C747BC6F52707ED42A99736ECCF
EBCB694A561C3A70A319D204CD40D402FBF937A00BBCBE85DD26C9E3F91B7D10
D85B9D314BC3AAD5A58B107F5F341BE2C53490924142566417D6BE03BB4977FA
6635EA58DEB9508E40B9FFAC75FF44C683680CF242FE210519C9BF92483B0A54
83F48341318BE16D2F8C988FE3DB2E7914581F579D5E323148A31E4ED03BC24B
C990372DF5F3B0C5FA32EB2CA4FA0EA33316569133C87697BAA2292E685C26CC
F8CD40A2366E60B47D47CC9D0FA29D2836011376A07F78BA7664DE96E775CF45
9BC91559A063073A4C2FAAD0893C517C5C46A1425D07EDCC2B57162E3A45103E
FF26A2D2F98B194256A4B052AAFCC08965A50EECD7B9E8F35AFDF7B6568B3983
8030655E7C2BEC961A2F20539D617626E8454E3FE9EBD3EFCEF7F63498441DAE
16CB509BF239FBBE25EFEF07A3E16C9C71EB8D9DCB8403916FB40FD7F4E1A52F
72F2DFF94FD14D7D49FE775390C17C37C1BA0CAF35CF75D682B7833A83224158
D54CE962CFBAFB1B2CA50B60CBEB1F8F58DDB2F5470C355ED9632342D9382AE4
5D33BCA3A0A25EE9E5B39BE5370E7F20684C664EDB48E7973FEDAD9676F9EE8F
701CD4D8CC9B9EBC06E8C86EB88AD56E15CEBB8E1930E8F711CB6E01D5D14967
D7E6C1BDDDE2C4D00384EF4CB02877DECC27AD53FC981338977BA0CC0257CF7D
B42E9BC91AF45D9722461EC3CD9DEAA8011FB855FE14B74BE0A102008EACA2B6
0E287BB4F466FBFDD6E65A5262B9322F95E20DAB875A10A84572D982E6FC7ACA
23C0C37E5EB47B8E69C07507B53CDD98CD1B6445E1699CF35B3DA3E0DC56BB76
F997C40E2ECE47DBDDB707EB527055960113F2DABC87FD9EC7D0AB36B400CE33
0D54D4F197B2830B43DF0AA802DFB2BF747A4C44B31FB708B2C8BBE1955A6A28
379C91AA4CC065A50098AEC0B837E180B76801865A43C74859DF18FE1DA1483B
C17843BF1C7E1B11A8C6D8BB8CDB1D552FE6A1FD0A696A8F7405F2320F8621EA
17C1A32056C45A9ED35D2BD12D02D8B26489CAAEBF4EF33B66FF4BD9B46E4823
6395831A8F3366EEA0D0EA88D612DEBF63DA7FAA24DA979ACC1A52544BCAA007
6C39946BEA6076ACF45722B2B8E4D0823EA2D12B14A98367BB0433A21FBD9F94
18DF298C56F67ABC9DB1868D431A854DBEDF8E1F49E359A545C75A7AA1FA4D5A
50F1EE6B45FC68ABF65FFF257964E4E50D8B0C1FAF498DFC554073697C2F219D
4A68DA9E873B270B9C56F0DDBC9927ADAF9203FD684DE615F68C24ACFFB44690
89C0D5322049FA69E7FD00EFC9C9B2BD177B5B339907F81C31496662847BEC1E
56B5DCDF4FE618970F4268F475B2EF7E0F28CC986DDF098E59DDAD818649CC35
4080C0867A884B8177A6880F06F1E5CC130AB4243EF8DD8032FCF390765BAB1C
1F0C9728EEE261A09F8C1D7ABC7A6B1550551BE2A7D19D45B656650DB00B3A5E
B3E1186043E173BB4DD5EFFB379654F88146382AE3F7196F099BDCD6D245FB6B
AA2FA9B6CFBC9F0CD52798DDF2F13874BDE5B124DFFE0DD93E24C9DAEAE4C3BB
71A9A13AE2860F620B4EC789F95221015D9C510CB4AC775EF69DB9E32E59C896
1AF82C9F0DCDB4812A37761859A3D3BA0CA57F244489C78065346FFA78F5F7C8
0B2E8CBA9EE62FF5C27369D0BCD52857D40F1FB8F8A1441B83565A4150AB1945
0B54D6E49F66389E43096269EF5CDD39526A288C0CB81E324E75D326EC9A182F
2CD966368CE300B41873B08E17C3E6BB51804460D2562AF5A12339966F44CD09
114C6809AF246B5BA6937631842CB9417781A58944B6BA4FCF961465C208957C
81A662D560D0F81BD3CB53C06B6D979F04F6121CCFD5D52702CBF6C70C01EDBF
2040AAB9CB144321E68C4010E0E98CCA2603EB55DD62E881DB621C37EA4108D1
528ECC7A0121B57C6BB1E26F8AE7161ABA7E88256D2D6A8B7CDE2E730D137493
3FF628EF6030DD2330D747FABBA03B44CF600418C245C388F33EC5559E7313BC
4B530C4FC12530D38B27D6408548F25FC084DD0523B27D29D6518D3115AE7755
37162CFD4CF528214466FE525B13782F9C3CD78F3D6C7423E63A134C0A371F15
10F4ECE1D482C647B563D3D15586F80BD9DF7381BD53927825D5AEAF762E1CDC
3BD184F345029A95B3AD4D1B66E79AB4F0809418C0CFD4D503457A190D02F134
3F57FC04FF655AEEB783D6791E4EC300755861837D3D50649F6B7F60766211B3
8148F8E575E28D6C2DE75B15E722ABFC6DAADAE53D89FD295352781DCC2CFF6D
982F6DB778D6FCBF1B7BDCB53F3A23AE6EB499BBFA96E8BE04C3C8E5B660EF24
01EB842DAEBE979F2C2DB72AAB4D21627063B1D3C6CD40944E4CB81655698FBA
A343766CB22E392E5DAE01DB33A00918D6DAA07F2F38B336A3C5DF3708865E75
0DE04D3AFBCA27A249E97377D5785B4E28EE0E93F7D353619C200DB967372ED2
153BF8BE945474266EB2FD30F80042A11B7E3586DE4AB1FBD4A741D36DE583E9
1CA25DA345520AA60634EC819E7EB493CDB128BBADEC3890F055455F060A1100
D5A41D7B180027E08AD6EE7E393DB9F83799544404FE397F557773BE6A130541
157C0EB37E036C94825B5090EF85F8B4E3DB72895D86687758C20EDEBD6D1079
196E9949DC6ED0113571C70B150B37E446E319EC54D44CC0CF6A14760953DF4A
D0E1F33A54D240E236AB63B35BA8E071D77776BE5B9312245F2C6E4FDB4312A0
0D9CF723E7D9A3D8546C4739C00C301A89ABA60A02757AB1A0AC40B24CE6CF12
5850485B11E16646D7150795EABAEB08364A53161111F46A7BC3423A0D3BEB69
BF15726C1F8363914945DEEB29CB8766328318AF3B344FD6D77BBB92BD7FD161
93356493D4D8252AD125708D47C124E44232FB2BF7DD75F87889496DCDB75D03
F58A57D4122CFC194B75A9E9C4789C9A33C0435FB4ADA16AD4A6191928D1663D
05FB8152C0AA176FBA4755205F8A66713404787070757D3721ED6E6D55A59DF0
C92BA8F05EC7BE05D0A2E66DE85E75373483EA3BBEE0F0DFC7E2FA5FBAFAB118
058D095AA71FDFC8AF37E5A98406B64E58BF476C6926725D7EF3C2346CE3F662
1E5A4A18D966479A37070859014719456EA2C7F23E68E1AB2F25ED3A0C00A18C
DD403506923BC983F89CCA125780DC76A411472E38173BC0DD4CDA7B43E13419
B5AB0B9A35E77C58BBA12AA4F5C7EBF8A29996B059E4FAE6809565570442AEE5
D56CBF4407E1CD9A4398B1F3ADFF023F64B230E3D29F526B62D964F5C8DF801F
E94295AD85BD9E1C18E6327977260A871E921C0745CA06A263E335E344686E7D
D6FE3ADB4EE0A7E462F3C00873C3E95D183CCEC71C0E5DC1D2FB310B28FC3611
67C23DE336C374F72368F4973052B48E39969305791C986E6EE35D0350571860
3A8ED849712CF21AEF444BA390644E8646CCA16559BA4642A5800827A0DDC453
7CA0818BC47DF6348A5209A2F0A10CA39840CE6346E89CA0E842BE8692DEF25C
4623A5A0E0B98708B9492E9F564324BB3872D6B953CA59E9F393C477E2AB85EC
C557D333E88C111CF995FB79D9432DC94C2BDB3BFEE13C0D7D1BB920DAFA6158
8548447AFC65CD5515D5021E0ED7D213B0C08C35BB424AA91885CA023D7AF767
B83E619B15DFEF5588D2F0564296E14B5A6ACE03751E1016105C51BE76EA5ADB
4167BAED2A8899031FD7BA05C410ADA25ADD94A787EED1A7AE133B0568B1DBA5
44B41BE013782CFCA3D81E8E8210DD506ADFCE7DC7E792EFEF438221164A7D1B
5E7089F476240C5F94988F081943F24DBF7CC3D1E58CB89E1C0C1624682CC3D8
C95815ECC9183A4B3E353C7F920B7E64086E01672DAA7C8A81319BAA03C1FBB7
8E5E84CC5BAE0E107754794C755B7AF00953504094E1A9DF357D51B578259613
8D26F0BA26AAC459BBEEB90BCC98B865EDD26AA4DF533D6624EDAC762C446B6F
CF9F86DD2D8989D4655775E662B93BF51805EE3CBA0AE2293D95F166E80973CC
82C53042D0249C598B0821E9E7F218BA6114EEC86C158F277934F2651490B723
7F0D0288560DA5BEBAFDDF243048E590871AD18B3B220EC56549004DF122AA03
BAAD6971D790BC644369FDBEE74A324083CFA9496C2A333774F06E35299242BC
F4B26578907CC5AD1893613F2B8622CFBB7B55810162EEBFAAEAB2A6D69CB72B
D7859C73843E665125FF450631F32E64F13A6207F368103C7A7318DBAF2560D0
F1CDD83C3E48CB30C62AF1E0896E1962C655D9ED98E1BB38477C1C60ECDB6B95
067D3A638AD43EE886338F7AD2D2A574CE6FD2E21F6FCB4220EFEC85ABF8272A
82081CE70E4390A74EC717F1DDD168F4A4A080A79EE2ECE0F98A96871DA4B52F
78441601AF47763C2219F5A167604C32F478D498835EF3A6167936994F7C7139
3019FF43C97E7978D3CDA641C1E391FEA572D308E759F28DDE2B40B5BC207A4B
C5EB6A93EEE26782016F8B6534420BE4D790A2E1A65B6CDBE9468152230384FD
14E9AE84418A44F94E6825DD7D77D0BB5486DE26A692B3DA96C81FA4440C5D44
8E7F3CAA9B8DF38F87E09C4D78841F629F78F4E7CC8580CC44E59E5D9AE8B2DE
C0682F793AE7AEC12A8AE688636197E8A08FEB70EFDB6203681A60223B9B0D39
2DA656E5E99B82130D4BE38D7AFE18568DD30B0CC3C73C1E2914ACE11A65334D
A9F18135E7B86157122CD221C33C62012FFB16D2D2F3473A53BE3E7B9FD4303F
66ADF0B07155C7B9B002EA68C6AC7247EB3CE7D2670A60138049DAA964F86A05
22983EDA7242E6BEEB90DF61C937399B2CE1061DF1E551CEED4A80D86C2D4649
C9FF9A1F93E96773CD392478D5B70D5336A03A274E0A6EF44BE8CB2274324142
706BC2E340DC944339D647961FD7BF29944503B4AFCDC69A706AA6B0F6AB2CB5
D220A96ACC1EE5E7826F6F75F044224E5260D581AE761AD0C752A06AA03FD935
FAD65C9EDD4E5505396E331D45DE88F0D1A4303D766ABE0702C17E2A7F53C0EA
96A4DEC5A6B6186F5DBAAB05DD78E38AFE630465BEF0EC66ABA9C1C9232214A9
795D105C33CF069F6BE20B179F4CC9F484AB63ED25C1212C457DF62CA0D56E20
608572216F2D4C09010B03A8AA6D287C8F514BEEDC1C912552CC2489858BF4D3
084882CE4F4B6FB9EE27C0168671E6DA154018ABEAD013C88E1D3EC918371251
63D95BA0FE20212C20AD3F4DB614EE36B488A3F55D94C1EDFCA8E68E54A1EED4
7DD168DCCF07C3DDB5E2B499DB5635C5C5056A7438120DB4839427D07F96AB8E
F842E285243E40259F6DF029E27779CCF3D3BD7206B2C341045A5A4AABACC2A5
91C6830FE05ACDCFDE99046F16F2AC183426ACA4A89FE5F09B7EB2F811BB5FB5
AF073BDA2886070B2327D582DCBA66B47E8948C3BE05E837BE4B81402A583403
74FF9E938F0E9DC3B1CB81B93DFD4070F9EBAED40BA570DE8F9A5C2C0A097311
22A6065139A6580E332473E9410D9F4C734794F79E41D0D437CEC7381919DF6F
A24B170E2BC97A6396A4E3AC3D844AD6E2B8FCE1C6AE97DFC5319F49130C3D6F
AF2541EB2384D5D4CCBEB976846EF8C2165DBF706112BDDDEC9A57D157F5996D
95229FD5C71B885D16B177BAB06B9DF5740A45C2A005778EE879193290419C0A
A4A339029E37E685B8A05B111DDF94AC19B1D85C8E6026E57E3D3B373C08557A
F96E6FE3916695ADFC1F0BF5D558565F42A71C61ACFEFC9026424397F0646642
7EDAA05794BCCD164A645860B57EAD53CB6899B18C6E9496EA4DAB0A0C272639
DEBC4FCBA94B3BF123F7771F602E7667C8F56E12429669F2219C7D8E294BE07B
71E88EA62F5616CAAB7C0198E6FF12A348E36B306FE2684A401399431B6A84CF
B46EE4BAA0F4099E65E9AF3B70274EDD6B6524F4FA38C23F9CD5273EEDC8C6C3
E7312B6E0497C05AD3F3C246638F01387CC11DBCBD287ACF54D8E24759F51415
35ED64132EF4158F54AB9F4D567482B3057880490F805822F71E7E2C52F7BC38
8B1F803AC3731064B90E5E97AA3351D17E73DC2FE526CD6C91158636E395867D
C1150FD3BD12493FFFB813AF0D08C8ED0B7418A2CF90BD5B783364358605D075
5DEA95A9299C0654EFB28E2FE8A41358A0DD124D0314A27558E42ED5F2D74BB7
056DE04D2CF13B9B804A3CBBA29BC155A3F18B8B48283194C33CE8291677E1EF
0721138F8E0409D49BB99F217607586D2DF00C29A25536E21924B4CF6702CF85
C02DFBFD2AA4DE3DBED1D2C02E21052A8D10F96629D0D18154923638FE0C48BD
E2DEAF11663E20717EA77A5453686AAA39D6FF7919AF09B1AD956FDBF734F49E
262F3076F62E77BD45122B55A5913902D9F91C4246FC235BA9C0FA4A96994291
830638949BED423387DA2D455A3C9122484EFF27F5367D1D3DD27D207D973815
965E1CFF36F43C653ED406F65348671D9FFAF55BA3FC266D438AF473181B7801
164EA3F04FEC870743195B3F467DE36B3719BAD9BF15A18637A314C887D46673
445BA3C212749B0A33136FEE9FE2C9A13D62E7ACC96378D257FBE0EB06AD4D4E
D41976AB92AC720DFD33B0677062C32E6F5C992A0324FD26E984B5341A58C190
D20EC3F1144697D514D9157340A6C9F82E62AD8CFDEE59F6FF86C6250CE33D6B
BB82DDB4F65BEFC6F6D0E4044F7BF307CC346E2FFD191846E3CA288C6F91CB71
5FDE855FEC5E38816CC635C470BF15263A10A409F0BC4877F7E6D4C223E3564E
E7BB5B320AAA5AAF4F32528F7413BFB97C70FF5E6843E1FE501472129BC9758D
7531BE576C75840CBC4CD3E6D9E5FF52559B68DE6E7827128BB2ED1BAD43F36E
A0CB68C1A147A7093EB02062AC5492DB7EEE08B1BDB187E15339A66269E459BC
67495937B4317AF66A498923322B087ECF47B601C26E253D223A784DB2D204FD
0668BD403A73723848018B7C86B627B9AE0BD9038F567CD5F670CAFC5C4D86FC
ECA211B713ACF8C1370191161CBB6C2592E8B9DBF3471133F2D9A60F15D72F9C
5E5539D59A6A7E124D9A38A6FF6EB7C71990716F88E1888295584F17D49144B2
B57252D7D87CFB7BE009E0E1AF68C57E2041CB837A1F9DA290FC07240D616876
CBA29ED23952F977F27ED97503F6C6CB48DA6611E0ED9D90FA865D099740C6CE
8A5DDBB1D6550B208321C365A5104F9ABD66A9238B8A2106AA74CAC58D1163F1
DC4A62013C0F6DD8A3E8E1A6CC6E553746D570A744863FD8EA705890890AC5BC
2F0A068C740572F045B32289A2AE66CC44A1C13FB8BBD4E1834995731D19B47E
7C2FE360AE79DACB95856B01EE39EB3C7C9EAEB3D47348C47D928BC883B8E760
6724D80DABC4D736411942BBA8CF08157F21D63C18924282193C5C8E44E09048
FDCB8DB2E01C8A496FEE2CFC19A3A0EACA508237C8BD988ED6D33D01EB548B14
61A546886AACDAFB7C8CA69056B1F428D72542972ACDC1E857B734982C57F4CE
85FBF275195692CBAB373F66D494FC4EF75EA4F294EA04B72940FB6B3F80AE5E
7CAB16CD87430846E137E6CA0BE0B6A48026468A34650F8C47D53023F5783EB3
25C4F34C0D8805AAB7E48B4716AA8566F19F8D64565B988E4D8B2285B14E271E
6B5DE1BC2D37A497652CB6483F74DF5802E28C85C0533DCB32E2F1AA724276E8
B0FAB03C0C1EA39CAEBBB3188B71E008B84417239AAD9E0B4DCFFB1BED126B0D
DCB1659C7C1D44625F00CA06BEEA00D3A953B5C881BB0DB98F1C85C085FD38A7
E22885D2FA728014B7507706AF80DE760BB5882000C8D72D54AC182908409A3C
08A8E9023720E48037BD3D46ECA5E2F64387B0543B9BFB32946028E51269BD38
9B4406F69D5270BDD6E6324F3AE9831CCFF6989CE09E5580AAFD89788BFB0D63
F9ED739E7AAB50B40EAD37CF14FAA4CBD789F26DDA71AD64BEF71ED886B0CE11
13D64B375A59AC1C2D3A54CB9CB0A11881157CBB13DA702CB2149B6D864D19A6
1E9FAFDCFF7F33B0E8AA1CAFC64162F8798DBE3CDDC4FBE0715B738F02CB02EE
1374BCF43E0E67EDDA6EACC9B1639865E3CADDD4DE7C834760B0BDA44C32CF9A
8A0E444D3423931B627075805F50E1C8F9F89476E74B9FDF3D7EC8B15DB7DFD9
80AF4F144F138AF0B14052BA697B9DD1E0327FE8E5BD36DD23889110C20EC452
377146FDC4D372417857FCEE740191E2A0206939DB96272A87C213CE696E382C
62BB8DEB05FC32CAEB42FEF5A38D229459EAC9CB84E82E3803F6B4CA4588D543
B580140A7661041B7EC324807D9D77A68B19759417A17022DAA80DD6D9A7B9D3
E1C99855EAC695567F173B48D82AC830B5925A75D82927DB0C2B8597B461A7D0
0FDC6A24F8CEB344CC568C37C52857C9AD12AFA9BA9D301E6432155155D250CA
7C74D1C4C297C423DC29EDF71A7C61DCC6EBB360E7A42688C8C302A952DD7843
E540D02582978D4CD6F21797259FE42B458B5600D2F9576460CED6D3BC989ACF
1AC24A9FD1C99DCFEFD48D4A28CBDBF3691D07D37725FB4BF1127C0CE693575E
4441B27BD0C0B763307E8309EE25ACBE6454511C425318DB138A241CCD54AF30
E3CDE2E0027359280B85C4CCCB54205C467453F0BD064006C16EBCA48AF18C98
E9060EEFF10DB398215EE1F5F162EA06887A375D241C7F755C66FE6F2A3C3E44
125D7B880B389EC343D145840C463E591740E1ED08A4A5C6B68881960E7D6EB6
EEA0CA34BDC05F917791A3A5F372007747A5CB71410D752EE1FC7A4CD309A248
A144B246D56FB5662ABFCD99243748C5ACE869453B11CA46C11EAEBC6B4CE397
C777E42D0A83466DF69FD3D64DC0A814F55A13C7470B1CA08131544691E00B31
0151E1B5AE099D22F84A858CC5E043963855B5A61CF98F232DD743520AF622D6
100CB451A9F5CE77C8199F735B1DE338C9B2079877E3DCB2137C6B8A42A9FF62
9C6F697F3B305FF97E0E67C3DCB2EB49D606FFF5BE8B6FF8758B865936C23E42
DF4EC659277D4A4784DA0B6226593D1F7A59B5E3615DDE9637975FA1B97C3F42
4CEB46C8D1727F58303B24916914E5E4D6D4C4413983B056EE0245711A0E4D8F
46FA3766FB0D3A2D4259E516C501A0011FF87D7F14143E28E1C93DF87080BFE9
B1964B7A363255741FEC3A9FDF8DDF4DDA4A7A147F6F5C958AE1CE3D76E9FB79
C80738547378F268A1FC711136C65D4873EC1C1D69F53A66801E3A369F220B2A
D45E758BCE0488172817E626B3E1FCDF81493A5356589F840D1138FE79B8B5CC
12DF9CA42D958B4B6BC40F74E76D2BA4F001EF8F7C4357D39487A4A86E7C5958
88D42B6344E91DCB38C4EF5B3F2039DBF655A5F0D5BE30D3B935E6931F8242EB
C8057144B75693B2D34F182584B18229AF263B9B9B23CBCEF25374049F6944EF
BBE31DCBFE248CDD7B7069F0682B182FE2035F15CE0A8D679043CAC33850C64B
A5608D5E46B253D9445F1A0D6895B89CEAD25D6F165F58A452A1875ADDE79A1A
FD332E799820969AD1E4B8711857B88DA1D2BB2B80448B5E268E3FBAC2F793BF
800F9031EBA2EA7E00F6EB40E010EE227C87A7F2914F069CB7B75C7C80281E3B
8177E3A33E479D727DF8876D4DE4D7F2EEF0A234763F8904B8FB39BC7580DC02
37ABD6B8EE960A9B1F98A214EF09111B5CC7CB1ED2F57D2FEBAF5BE55DF4CDB0
0EB6C1856946B632A4951F4127BD1DA2439C65E1C29D5F60DE1529D7FB2A33F6
CF8DAFEBEBBF46D2DBC741A0705E1197CF49EFC1144437E12753276C50E6EF87
396B5997C37146DAC14D86376653871DA651E0A84A8E30FD8F6D265327983995
C39933357D6E885496EFEB888BE8C91EBD4CA65E0D39B823FA48E774F9732D1C
BBEC3AA1DBEE4DD952C338A634F222927B4A4DFD93FBCE10E6F92F24BC4FBAE3
616F5DF8CF785407B2C5F7C0304C047532E722EF1225A575E4ADD1C185DDB13C
92CFF4BBF705B1ECA649E8EB7BDC62E6812862C197028D1924AF03CCEDA6D0E4
6CC235EFC2F6FE5FD8049611BDAFE41DAFB01DB817C9086E36E5D00A4F65943E
CCE596633BEE99EE18825AD8CA980229DEA1AD1C52CF00975AEAD8D7A6E91D29
C2C02A397B9F318B3BB58FCA1A355D2670856B680775EFA9166339907E1FCEBE
3F7B5CE99DF80540B2FBAC90E4EC9A8E7AFAFB7C901D78B4AF885168CCE01582
BF0C1AF6B8CCF4C5FF8AE9DE5211D0E81E9AD63E096EE67A69888760EDB5C8C3
149FDB6125D39154450C3119337B4BB0A817E8BA799B8FFE443EA686C9ACF631
609DB890890200D93373EE64F5AADFDE066D920D3EDA7B567D4129DB284353FA
95C0A21719A5035F01702DC23152C6E3FD6124659EC12124602355CE5193FA88
54C03A03FB1F0407CCB667CC9EFC21F883113AD0FCAA4E7086912BAF24A8172D
0D1A9542235F6C774AF8B1FAE0EFF0F0E7CB2C6C1FC2ADED4657C85E449D4504
1CCDF904C34705775F8A904C186BBDB65FEDC643FBA306FC5E40690EE753F925
E39E2126FBDCD5FD2CD679E322C571A6953B97F020E0D0060E56109D90716F1E
F9359C093D6DC74D5B7249C7B896648B9AE75A36BDD547FB5A58A8A43BB1A18A
276EEB7FA57D3DF8D13A84E1D6B6DD72D08AB1BAA4E1824F6DA43E60787F4DB6
AF1C2732D1FA3116FAAFCA168FEC35D45C446983BABCB02077831F39B89BDC96
2EF3D0B718E5270D248C754C96C781F9D595F10E4A95E0E9339088EC9E411AD1
967617E34578BDDB96689CE23A5905404ED6902F9E4A0FCEE7B11A3173BC9845
FB82628115E11A74CA8BF2CEBEF97852F16DC5D4BA8AF2FD57C612A25B26FDC7
1B629747618E54BCB5B5AEEE9470C43A0D10F78D880D9287BAFEEDB867D3840D
144349A1B1F1BAABFD3BE1D65EC0FBA31D4623DC2EF9BDBE59033E3C25155BE2
98AC2EB1A8BC6F82AC5ADA3FF0A57D6A05BE5B5D05217693D068F2D07E72205C
5B13074ACA6875FF0A8C862898B317E5865487890C9DA4E53930BB74665500B6
88C33E1C084D574CC762859CD03B3BA42609D28FEEDFBE60797863238EEAF916
5EEAF62621CAFAFF01A9F2FDE36704CBA3011B9063C6145BDD06B5B107817458
14F1521BE2F10A850BABC7435697FAD372A2EDA80080BB5F1EEB08174A8B17AE
A3346AA9C97FD6176FF0042B580A1F71356DF0C5DEF6543FDDE6A8B522127F86
107D21DBA0CB36C09DC41540431855377C93BADB769FC0E3A588AFC9A8E4439E
A433FA90D2C6CDD3E120B568C83A81DDC5219EF0D7E9893D459871AB157F0467
AD5B902490753A6FBA9D2D0A966D045B2877DDF2F8125DB41E720E4A2C2CA6AD
01ED6E4B2A3C9CB20F16D7FC16A3D5CCAACB8700682ADC1AA11B031F59B86BAB
CE3991842636D9E812FDFDDFB00266EDC6D7727ABB3421A9C38C1EBA3DE1C8F1
4E112CA917B5EAA0E8C969D713EDF99059A4851A86FE14C5AB9006C542E70996
EA204FBA3762B50BD18A9F9B45827AD94737FB8A10CBEF3A8FD64933EBA892E9
8CDA7A001BAEEDDE3791F7B22B0D50CA7DC0461F460D74DCDCD1BBB263F5D14C
C72940CA975D3A2225C1A63B5B2830837C4D095F4E980FD347F028CFA90A88F1
ABFFF52FB2782A76056F062568CA937560545BD5958D2CE949C99828F8ABF1F2
2A814CFE2F75FA883E57A2356A192233BB5AD82C5EE2BF8929C6948BC6451931
1F7CC791BC2AFEF1AD0209910FE12D8CD6A6C63DD0730A85B8C2EEAE1C83C04A
08C77696D532BBAD32E23D68E818C04882C2AA57002EEEDF1D7BFC962D393183
CCF1E3432EF1B671D1C0F679747AD3D2BB359B8EBFACE0A744C80BF45ADBED36
8DB954BFE6F983F6F8FCB256F775E06BA310DF3E4026C450681A9CE08E855418
EAEE66A496DAABE86D39EBC8B84C8AA12DABFA55F7E01D9844E98C007EEACD16
C4E283C35409DEF99E7F8295C0488CF155E0141620C2979E51B46750EF63F564
CE97D717DA5DD07EC0DB9921AAF3366352A077680C4B8219A5327F67DAB0A50C
69F23D3C09B503F1E38CBED4DB19F625829224B57754884F0E1AF5C7654442B4
C989BBADF38B316DEAFC24F0A43C0E93DDD77F80B0E1C3F8787FBD3E8C9BF024
2BDA43A33C7E39FD91544387D59A7B698CA431B6AFDBBBF23D4157D4AFE17851
8638B4D59278F4B0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600
(/Users/chantrix/Desktop/University/Bachelor/Politic and Global Studies/PGS-1/Semester-1/2402308_DEV INTL SYS/Latex/.texpadtmp/DEV INTL SYS.dvi)
@start /Fa 119[45 136[{ TS1Encoding ReEncodeFont }1 90.9091
/SFRM1095 rf /Fb 134[71 1[97 71 75 52 53 55 1[75 67 75
112 37 71 1[37 75 67 41 61 75 60 1[65 9[139 2[94 1[100
1[92 2[128 3[50 105 2[88 103 97 96 102 6[37 67 1[67 67
67 67 67 67 67 67 1[37 45 37 32[78 11[{}47 119.552 /CMBX12
rf /Fc 139[75 1[79 1[108 7[108 2[88 3[94 16[132 6[72
5[140 16[97 97 49[{}11 172.188 /CMBX12 rf /Fd 166[68
1[93 1[68 66 51 67 1[62 71 68 83 1[71 1[33 68 1[59 62
69 66 64 68 6[25 45 3[45 45 1[45 45 45 1[25 30 25 44[{}29
90.9091 /CMSL10 rf /Fe 133[46 55 1[76 55 58 41 41 43
1[58 52 58 87 29 55 32 29 58 52 32 48 58 46 58 51 9[108
2[73 58 78 1[71 2[99 63 82 1[40 82 82 66 69 80 76 74
79 5[29 29 52 52 52 52 52 52 52 52 52 52 52 29 35 29
32[61 11[{}58 90.9091 /CMBX10 rf /Ff 134[59 59 1[59 62
44 44 46 1[62 56 62 93 31 2[31 62 56 34 51 62 50 1[54
9[116 2[78 62 84 1[77 1[88 1[67 2[42 3[74 86 81 1[85
1[53 9[56 56 56 56 56 2[31 37 31 44[{}41 99.6264 /CMBX12
rf /Fg 134[123 3[129 90 92 95 1[129 116 129 194 1[123
1[65 3[106 1[103 1[113 9[240 2[162 129 4[182 1[140 7[178
168 17[116 2[65 1[65 44[{}24 206.559 /CMBX12 rf /Fh 133[40
48 48 66 48 51 35 36 36 48 51 45 51 76 25 48 28 25 51
45 28 40 51 40 51 45 6[56 2[93 1[68 66 51 67 1[62 71
68 83 57 71 1[33 68 71 59 62 69 66 64 68 1[43 3[25 25
45 45 45 45 45 45 45 45 45 45 45 25 30 25 2[35 35 25
4[45 19[76 51 51 53 11[{}72 90.9091 /CMR10 rf /Fi 138[54
38 38 11[49 37[73 11[49 49 1[49 1[49 3[27 44[{}10 99.6264
/CMR12 rf /Fj 134[70 2[70 1[51 52 51 1[73 66 73 111 36
2[36 73 1[40 58 3[66 13[73 9[47 4[101 68[{}18 143.462
/CMR17 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref)/Author ()/Keywords () /DOCINFO pdfmark end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 232 191
a
SDict begin H.S end
 232 191 a 232 191 a
SDict begin H.R end
 232 191 a 232 191 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 232 191 a 0
TeXcolorgray Black 0 TeXcolorgray 241 464 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 241 464 a
241 464 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 241 464 a 241 464 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 241 464 a 241 464 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 241
464 a 241 464 a
0.8 setlinewidth 0 setgray
 241 464 a 241 464 a
SDict begin [/Count -1/Dest (part.1) cvn/Title (\376\377\000I\000\040\000L\000e\000c\000t\000u\000r\000e\000\040\000N\000o\000t\000e\000.)
/OUT pdfmark end
 241 464 a 241 464
a
SDict begin [/Count -8/Dest (chapter.1) cvn/Title (\376\377\000W\000e\000e\000k\000\040\0001\000,\000\040\000D\000a\000y\000\040\0001\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -0/Dest (section*.2) cvn/Title (\376\377\0000\0004\000\040\000A\000u\000g\000u\000s\000t\000\040\0002\0000\0002\0005\000;\000\040\000K\000a\000s\000i\000r\000a\000,\000\040\000T\000e\000e\000w\000i\000n\000,\000\040\000P\000o\000n\000g\000p\000h\000i\000s\000o\000o\000t\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -1/Dest (section.1.1) cvn/Title (\376\377\000I\000n\000t\000r\000o\000d\000u\000c\000t\000i\000o\000n\000\040\000t\000o\000\040\000t\000h\000e\000\040\000C\000o\000u\000r\000s\000e\000.)
/OUT pdfmark end
 241 464 a 241
464 a
SDict begin [/Count -0/Dest (subsection.1.1.1) cvn/Title (\376\377\000W\000h\000y\000\040\000S\000t\000u\000d\000y\000\040\000t\000h\000e\000\040\000D\000e\000v\000e\000l\000o\000p\000m\000e\000n\000t\000\040\000o\000f\000\040\000t\000h\000e\000\040\000I\000n\000t\000e\000r\000n\000a\000t\000i\000o\000n\000a\000l\000\040\000S\000y\000s\000t\000e\000m\000?)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -1/Dest (section.1.2) cvn/Title (\376\377\000T\000r\000a\000n\000s\000i\000t\000i\000o\000n\000,\000\040\000a\000n\000d\000\040\000T\000r\000a\000n\000s\000f\000o\000r\000m\000a\000t\000i\000o\000n\000\040\0002\0005\0000\000-\0009\0000\0000\000C\000E\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -9/Dest (subsection.1.2.1) cvn/Title (\376\377\000I\000n\000t\000r\000o\000d\000u\000c\000t\000i\000o\000n\000.)
/OUT pdfmark end
 241 464
a 241 464 a
SDict begin [/Count -0/Dest (subsubsection.1.2.1.1) cvn/Title (\376\377\000S\000o\000c\000i\000a\000l\000\040\000S\000c\000i\000e\000n\000c\000e\000\040\000T\000r\000a\000d\000i\000t\000i\000o\000n\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -0/Dest (subsubsection.1.2.1.2) cvn/Title (\376\377\000E\000m\000p\000i\000r\000i\000c\000a\000l\000\040\000T\000h\000e\000o\000r\000y\000\040\000o\000f\000\040\000K\000n\000o\000w\000l\000e\000d\000g\000e\000:\000\040\000P\000o\000s\000i\000t\000i\000v\000i\000s\000t\000\040\000A\000p\000p\000r\000o\000a\000c\000h\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -0/Dest (subsubsection.1.2.1.3) cvn/Title (\376\377\000S\000u\000b\000j\000e\000c\000t\000i\000v\000i\000t\000y\000\040\000i\000n\000\040\000H\000i\000s\000t\000o\000r\000y\000.)
/OUT pdfmark end
 241
464 a 241 464 a
SDict begin [/Count -0/Dest (subsubsection.1.2.1.4) cvn/Title (\376\377\000P\000e\000r\000c\000e\000p\000t\000i\000o\000n\000,\000\040\000a\000n\000d\000\040\000A\000n\000a\000l\000y\000s\000i\000s\000\040\000o\000f\000\040\000H\000i\000s\000t\000o\000r\000y\000:\000\040\000L\000i\000n\000e\000a\000r\000/\000P\000r\000o\000g\000r\000e\000s\000s\000i\000v\000e\000\040\000T\000h\000i\000n\000k\000i\000n\000g\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -0/Dest (subsubsection.1.2.1.5) cvn/Title (\376\377\000P\000e\000r\000c\000e\000p\000t\000i\000o\000n\000,\000\040\000a\000n\000d\000\040\000A\000n\000a\000l\000y\000s\000i\000s\000\040\000o\000f\000\040\000H\000i\000s\000t\000o\000r\000y\000:\000\040\000R\000i\000p\000p\000l\000e\000s\000\040\000o\000f\000\040\000E\000f\000f\000e\000c\000t\000s\000.)
/OUT pdfmark end
 241 464 a 241 464
a
SDict begin [/Count -0/Dest (subsubsection.1.2.1.6) cvn/Title (\376\377\000P\000e\000r\000s\000p\000e\000c\000t\000i\000v\000e\000s\000,\000\040\000a\000n\000d\000\040\000A\000r\000g\000u\000m\000e\000n\000t\000s\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -0/Dest (subsubsection.1.2.1.7) cvn/Title (\376\377\000E\000u\000r\000o\000c\000e\000n\000t\000r\000i\000c\000\040\000P\000e\000r\000s\000p\000e\000c\000t\000i\000v\000e\000s\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -0/Dest (subsubsection.1.2.1.8) cvn/Title (\376\377\000T\000y\000p\000e\000s\000\040\000o\000f\000\040\000E\000u\000r\000o\000c\000e\000n\000t\000r\000i\000s\000m\000.)
/OUT pdfmark end
 241 464 a 241
464 a
SDict begin [/Count -0/Dest (subsubsection.1.2.1.9) cvn/Title (\376\377\000E\000u\000r\000o\000-\000E\000n\000v\000i\000r\000o\000n\000m\000e\000n\000t\000a\000l\000i\000s\000m\000:\000\040\000D\000a\000v\000i\000d\000\040\000L\000a\000n\000d\000e\000s)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -5/Dest (section.1.3) cvn/Title (\376\377\000A\000n\000c\000i\000e\000n\000t\000\040\000T\000o\000\040\000M\000o\000d\000e\000r\000n\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -0/Dest (subsection.1.3.1) cvn/Title (\376\377\000T\000h\000e\000\040\000A\000x\000i\000a\000l\000\040\000A\000g\000e\000.)
/OUT pdfmark end
 241 464
a 241 464 a
SDict begin [/Count -0/Dest (subsection.1.3.2) cvn/Title (\376\377\000E\000x\000p\000a\000n\000s\000i\000o\000n\000i\000s\000m\000,\000\040\000a\000n\000d\000\040\000P\000a\000s\000t\000o\000r\000a\000l\000i\000s\000m\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -0/Dest (subsection.1.3.3) cvn/Title (\376\377\000R\000o\000m\000e\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -5/Dest (subsection.1.3.4) cvn/Title (\376\377\000C\000h\000i\000n\000a\000.)
/OUT pdfmark end
 241
464 a 241 464 a
SDict begin [/Count -0/Dest (subsubsection.1.3.4.1) cvn/Title (\376\377\000S\000i\000n\000o\000-\000S\000p\000h\000e\000r\000e\000\040\000S\000y\000s\000t\000e\000m\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -4/Dest (subsubsection.1.3.4.2) cvn/Title (\376\377\000T\000h\000e\000\040\000H\000a\000n\000\040\000D\000y\000n\000a\000s\000t\000y\000,\000\040\000a\000n\000d\000\040\000i\000t\000s\000\040\000C\000h\000a\000r\000a\000c\000t\000e\000r\000i\000s\000t\000i\000c\000s\000.)
/OUT pdfmark end
 241 464 a 241 464
a
SDict begin [/Count -0/Dest (section*.3) cvn/Title (\376\377\000C\000e\000n\000t\000r\000a\000l\000i\000z\000e\000d\000\040\000G\000o\000v\000e\000r\000n\000m\000e\000n\000t\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -0/Dest (section*.4) cvn/Title (\376\377\000C\000i\000v\000i\000l\000\040\000S\000e\000r\000v\000i\000c\000e\000\040\000S\000y\000s\000t\000e\000m\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -0/Dest (section*.5) cvn/Title (\376\377\000S\000t\000a\000b\000i\000l\000i\000t\000y\000,\000\040\000a\000n\000d\000\040\000W\000e\000l\000l\000-\000b\000e\000i\000n\000g\000.)
/OUT pdfmark end
 241 464 a 241
464 a
SDict begin [/Count -0/Dest (section*.6) cvn/Title (\376\377\000W\000e\000l\000l\000-\000F\000i\000e\000l\000d\000\040\000S\000y\000s\000t\000e\000m\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -0/Dest (subsubsection.1.3.4.3) cvn/Title (\376\377\000T\000h\000e\000\040\000R\000i\000s\000e\000\040\000o\000f\000\040\000I\000m\000p\000e\000r\000i\000a\000l\000\040\000C\000h\000i\000n\000a\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -0/Dest (subsubsection.1.3.4.4) cvn/Title (\376\377\000C\000o\000r\000e\000\040\000C\000h\000i\000n\000e\000s\000e\000\040\000S\000t\000a\000t\000e\000\040\000C\000h\000a\000r\000a\000c\000t\000e\000r\000i\000s\000t\000i\000c\000s\000.)
/OUT pdfmark end
 241 464
a 241 464 a
SDict begin [/Count -1/Dest (subsubsection.1.3.4.5) cvn/Title (\376\377\000C\000i\000v\000i\000l\000\040\000S\000e\000r\000v\000i\000c\000e\000\040\000S\000y\000s\000t\000e\000m\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -0/Dest (section*.7) cvn/Title (\376\377\000M\000e\000r\000i\000t\000-\000B\000a\000s\000e\000d\000\040\000S\000y\000s\000t\000e\000m\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -1/Dest (subsection.1.3.5) cvn/Title (\376\377\000I\000n\000d\000i\000a\000n\000.)
/OUT pdfmark end
 241
464 a 241 464 a
SDict begin [/Count -0/Dest (subsubsection.1.3.5.1) cvn/Title (\376\377\000P\000a\000s\000t\000o\000r\000i\000a\000l\000i\000s\000m\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -0/Dest (section.1.4) cvn/Title (\376\377\000B\000o\000o\000k\000:\000\040\000A\000\040\000H\000i\000s\000t\000o\000r\000y\000\040\000o\000f\000\040\000E\000u\000r\000o\000p\000e\000\040\000f\000r\000o\000m\000\040\0004\0000\0000\000\040\000t\000o\000\040\0001\0000\0000\0000\000.)
/OUT pdfmark end
 241 464 a 241 464
a
SDict begin [/Count -0/Dest (section.1.5) cvn/Title (\376\377\000B\000o\000o\000k\000:\000\040\000E\000m\000p\000i\000r\000e\000s\000\040\000i\000n\000\040\000W\000o\000r\000l\000d\000\040\000H\000i\000s\000t\000o\000r\000y\000:\000\040\000P\000o\000w\000e\000r\000,\000\040\000a\000n\000d\000\040\000t\000h\000e\000\040\000P\000o\000l\000i\000t\000i\000c\000s\000\040\000o\000f\000\040\000D\000i\000f\000f\000e\000r\000e\000n\000c\000e\000s\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -0/Dest (section.1.6) cvn/Title (\376\377\000B\000o\000o\000k\000:\000\040\000E\000i\000g\000h\000t\000\040\000E\000u\000r\000o\000c\000e\000n\000t\000r\000i\000c\000\040\000H\000i\000s\000t\000o\000r\000i\000a\000n\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -0/Dest (section.1.7) cvn/Title (\376\377\000B\000o\000o\000k\000:\000\040\000C\000i\000v\000i\000l\000i\000s\000a\000t\000i\000o\000n\000\040\000R\000e\000c\000a\000s\000t\000.)
/OUT pdfmark end
 241 464 a 241
464 a
SDict begin [/Count -1/Dest (part.2) cvn/Title (\376\377\000I\000I\000\040\000C\000o\000u\000r\000s\000e\000\040\000S\000u\000m\000m\000a\000r\000y\000.)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/Count -0/Dest (chapter.2) cvn/Title (\376\377\000T\000o\000p\000i\000c)
/OUT pdfmark end
 241 464 a 241 464 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 241 464
a 241 464 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 241 464 a 241 464 a
SDict begin H.S end
 241 464 a 241 464 a
SDict begin 13.6 H.A end
 241
464 a 241 464 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 241 464 a 0 TeXcolorgray 0 TeXcolorgray
552 2192 a Fj(Dev)l(elopmen)l(t)44 b(of)f(the)h(In)l(ternational)f
(System)1414 2834 y Fi(August)33 b(4,)f(2025)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 656
191 a
SDict begin H.S end
 656 191 a 656 191 a
SDict begin H.R end
 656 191 a 656 191 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 656 191
a 0 TeXcolorgray 664 299 a Fh(2)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 232
191 a
SDict begin H.S end
 232 191 a 232 191 a
SDict begin H.R end
 232 191 a 232 191 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 232 191
a 0 TeXcolorgray 0 TeXcolorgray 241 464 a
SDict begin H.S end
 241 464 a 241
464 a
SDict begin 13.6 H.A end
 241 464 a 241 464 a
SDict begin [/View [/XYZ H.V]/Dest (chapter*.1) cvn /DEST pdfmark end
 241 464 a 757 x Fg(Con)-6 b(ten)g(ts)241
1667 y
SDict begin H.S end
 241 1667 a Ff(I)112 b(Lecture)37 b(Note.)1073
1667 y
SDict begin 14 H.L end
 1073 1667 a 1073 1667 a
SDict begin [/Subtype /Link/Dest (part.1) cvn/H /I/Border [0 0 1]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 1073 1667 a 2101 w Ff(5)241
1873 y
SDict begin H.S end
 241 1873 a Fe(1)84 b(W)-9 b(eek)35 b(1,)h(Da)m(y)f(1.)1078
1873 y
SDict begin 13.6 H.L end
 1078 1873 a 1078 1873 a
SDict begin [/Subtype /Link/Dest (chapter.1) cvn/H /I/Border [0 0 1]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 1078 1873 a 2099 w Fe(7)1150
1987 y
SDict begin H.S end
 1150 1987 a Fh(04)c(August)f(2025;)j(Kasira,)d(T)-8
b(eewin,)31 b(P)m(ongphiso)s(ot.)2990 1987 y
SDict begin 13.6 H.L end
 2990 1987
a 2990 1987 a
SDict begin [/Subtype /Link/Dest (section*.2) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2990 1987 a 31 w Fh(.)p 0 TeXcolorgray
138 w(7)p 0 TeXcolorgray 377 2101 a
SDict begin H.S end
 377 2101 a Fh(1.1)94
b(In)m(tro)s(duction)30 b(to)h(the)g(Course.)1681 2101
y
SDict begin 13.6 H.L end
 1681 2101 a 1681 2101 a
SDict begin [/Subtype /Link/Dest (section.1.1) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1681 2101 a 67 w Fh(.)46 b(.)g(.)f(.)h(.)g(.)
g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)p
0 TeXcolorgray 138 w(7)p 0 TeXcolorgray 586 2216 a
SDict begin H.S end
 586
2216 a Fh(1.1.1)106 b(Wh)m(y)31 b(Study)e(the)i(Dev)m(elopmen)m(t)h(of)
f(the)f(In)m(ternational)i(System?)3200 2216 y
SDict begin 13.6 H.L end
 3200 2216
a 3200 2216 a
SDict begin [/Subtype /Link/Dest (subsection.1.1.1) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 3200 2216 a 0 TeXcolorgray 95 w Fh(7)p
0 TeXcolorgray 377 2330 a
SDict begin H.S end
 377 2330 a Fh(1.2)94 b(T)-8
b(ransition,)31 b(and)f(T)-8 b(ransformation)30 b(250-900CE.)2321
2330 y
SDict begin 13.6 H.L end
 2321 2330 a 2321 2330 a
SDict begin [/Subtype /Link/Dest (section.1.2) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2321 2330 a 64 w Fh(.)45
b(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)p 0 TeXcolorgray
138 w(7)p 0 TeXcolorgray 586 2444 a
SDict begin H.S end
 586 2444 a Fh(1.2.1)106
b(In)m(tro)s(duction.)1400 2444 y
SDict begin 13.6 H.L end
 1400 2444 a 1400 2444
a
SDict begin [/Subtype /Link/Dest (subsection.1.2.1) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1400 2444 a 65 w Fh(.)46 b(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)
h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)p 0 TeXcolorgray
138 w(7)p 0 TeXcolorgray 877 2559 a
SDict begin H.S end
 877 2559 a Fh(1.2.1.1)118
b(So)s(cial)31 b(Science)g(T)-8 b(radition.)2229 2559
y
SDict begin 13.6 H.L end
 2229 2559 a 2229 2559 a
SDict begin [/Subtype /Link/Dest (subsubsection.1.2.1.1) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2229 2559 a 85 w Fh(.)46 b(.)f(.)h(.)g(.)f(.)
h(.)g(.)g(.)f(.)h(.)p 0 TeXcolorgray 138 w(7)p 0 TeXcolorgray
877 2673 a
SDict begin H.S end
 877 2673 a Fh(1.2.1.2)118 b(Empirical)31 b(Theory)e(of)i
(Kno)m(wledge:)41 b(P)m(ositivist)33 b(Approac)m(h.)3393
2673 y
SDict begin 13.6 H.L end
 3393 2673 a 3393 2673 a
SDict begin [/Subtype /Link/Dest (subsubsection.1.2.1.2) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 3393 2673 a 0 TeXcolorgray
95 w Fh(8)p 0 TeXcolorgray 877 2787 a
SDict begin H.S end
 877 2787 a Fh(1.2.1.3)118
b(Sub)5 b(jectivit)m(y)31 b(in)f(History)-8 b(.)2176
2787 y
SDict begin 13.6 H.L end
 2176 2787 a 2176 2787 a
SDict begin [/Subtype /Link/Dest (subsubsection.1.2.1.3) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2176 2787 a 67 w Fh(.)46
b(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)p 0 TeXcolorgray
138 w(8)p 0 TeXcolorgray 877 2901 a
SDict begin H.S end
 877 2901 a Fh(1.2.1.4)118
b(P)m(erception,)32 b(and)d(Analysis)i(of)g(History:)41
b(Linear/Progressiv)m(e)32 b(Thinking.)3897 2901 y
SDict begin 13.6 H.L end
 3897
2901 a 3897 2901 a
SDict begin [/Subtype /Link/Dest (subsubsection.1.2.1.4) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 3897 2901 a 0 TeXcolorgray 95 w Fh(8)p
0 TeXcolorgray 877 3016 a
SDict begin H.S end
 877 3016 a Fh(1.2.1.5)118 b(P)m(erception,)32
b(and)d(Analysis)i(of)g(History:)41 b(Ripples)30 b(of)g(E\013ects.)3452
3016 y
SDict begin 13.6 H.L end
 3452 3016 a 3452 3016 a
SDict begin [/Subtype /Link/Dest (subsubsection.1.2.1.5) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 3452 3016 a 0 TeXcolorgray
97 w Fh(9)p 0 TeXcolorgray 877 3130 a
SDict begin H.S end
 877 3130 a Fh(1.2.1.6)118
b(P)m(ersp)s(ectiv)m(es,)32 b(and)e(Argumen)m(ts.)2430
3130 y
SDict begin 13.6 H.L end
 2430 3130 a 2430 3130 a
SDict begin [/Subtype /Link/Dest (subsubsection.1.2.1.6) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2430 3130 a 25 w Fh(.)46
b(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)p 0 TeXcolorgray 138
w(9)p 0 TeXcolorgray 877 3244 a
SDict begin H.S end
 877 3244 a Fh(1.2.1.7)118
b(Euro)s(cen)m(tric)31 b(P)m(ersp)s(ectiv)m(es.)2253
3244 y
SDict begin 13.6 H.L end
 2253 3244 a 2253 3244 a
SDict begin [/Subtype /Link/Dest (subsubsection.1.2.1.7) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2253 3244 a 61 w Fh(.)46
b(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)p 0 TeXcolorgray
138 w(9)p 0 TeXcolorgray 877 3359 a
SDict begin H.S end
 877 3359 a Fh(1.2.1.8)118
b(T)m(yp)s(es)30 b(of)g(Euro)s(cen)m(trism.)2182 3359
y
SDict begin 13.6 H.L end
 2182 3359 a 2182 3359 a
SDict begin [/Subtype /Link/Dest (subsubsection.1.2.1.8) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2182 3359 a 61 w Fh(.)46 b(.)g(.)f(.)h(.)g(.)
f(.)h(.)g(.)g(.)f(.)h(.)p 0 TeXcolorgray 93 w(10)p 0
TeXcolorgray 877 3473 a
SDict begin H.S end
 877 3473 a Fh(1.2.1.9)118 b(Euro-En)m(vironmen)
m(talism:)41 b(Da)m(vid)31 b(Landes)2807 3473 y
SDict begin 13.6 H.L end
 2807
3473 a 2807 3473 a
SDict begin [/Subtype /Link/Dest (subsubsection.1.2.1.9) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2807 3473 a 73 w Fh(.)45 b(.)h(.)p
0 TeXcolorgray 93 w(10)p 0 TeXcolorgray 377 3587 a
SDict begin H.S end
 377
3587 a Fh(1.3)94 b(Ancien)m(t)32 b(T)-8 b(o)30 b(Mo)s(dern.)1392
3587 y
SDict begin 13.6 H.L end
 1392 3587 a 1392 3587 a
SDict begin [/Subtype /Link/Dest (section.1.3) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1392 3587 a 73 w Fh(.)46
b(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h
(.)g(.)g(.)f(.)h(.)p 0 TeXcolorgray 93 w(10)p 0 TeXcolorgray
586 3701 a
SDict begin H.S end
 586 3701 a Fh(1.3.1)106 b(The)30 b(Axial)h(Age.)1484
3701 y
SDict begin 13.6 H.L end
 1484 3701 a 1484 3701 a
SDict begin [/Subtype /Link/Dest (subsection.1.3.1) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1484 3701 a 52 w Fh(.)46
b(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g
(.)g(.)f(.)h(.)p 0 TeXcolorgray 93 w(10)p 0 TeXcolorgray
586 3816 a
SDict begin H.S end
 586 3816 a Fh(1.3.2)106 b(Expansionism,)30
b(and)g(P)m(astoralism.)2148 3816 y
SDict begin 13.6 H.L end
 2148 3816 a 2148
3816 a
SDict begin [/Subtype /Link/Dest (subsection.1.3.2) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2148 3816 a 25 w Fh(.)45 b(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g
(.)f(.)h(.)p 0 TeXcolorgray 93 w(10)p 0 TeXcolorgray
586 3930 a
SDict begin H.S end
 586 3930 a Fh(1.3.3)106 b(Rome.)1130 3930
y
SDict begin 13.6 H.L end
 1130 3930 a 1130 3930 a
SDict begin [/Subtype /Link/Dest (subsection.1.3.3) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1130 3930 a 53 w Fh(.)45 b(.)h(.)g(.)f(.)h(.)
g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g
(.)g(.)f(.)h(.)p 0 TeXcolorgray 93 w(10)p 0 TeXcolorgray
586 4044 a
SDict begin H.S end
 586 4044 a Fh(1.3.4)106 b(China.)1140 4044
y
SDict begin 13.6 H.L end
 1140 4044 a 1140 4044 a
SDict begin [/Subtype /Link/Dest (subsection.1.3.4) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1140 4044 a 43 w Fh(.)45 b(.)h(.)g(.)f(.)h(.)
g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g
(.)g(.)f(.)h(.)p 0 TeXcolorgray 93 w(10)p 0 TeXcolorgray
877 4159 a
SDict begin H.S end
 877 4159 a Fh(1.3.4.1)118 b(Sino-Sphere)29
b(System.)2061 4159 y
SDict begin 13.6 H.L end
 2061 4159 a 2061 4159 a
SDict begin [/Subtype /Link/Dest (subsubsection.1.3.4.1) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2061 4159
a 41 w Fh(.)46 b(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)p
0 TeXcolorgray 93 w(10)p 0 TeXcolorgray 877 4273 a
SDict begin H.S end
 877
4273 a Fh(1.3.4.2)118 b(The)30 b(Han)g(Dynast)m(y)-8
b(,)32 b(and)e(its)h(Characteristics.)2929 4273 y
SDict begin 13.6 H.L end
 2929
4273 a 2929 4273 a
SDict begin [/Subtype /Link/Dest (subsubsection.1.3.4.2) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2929 4273 a 92 w Fh(.)p 0 TeXcolorgray
93 w(10)p 0 TeXcolorgray 1150 4387 a
SDict begin H.S end
 1150 4387 a Fh(Cen)m(tralized)g
(Go)m(v)m(ernmen)m(t.)2141 4387 y
SDict begin 13.6 H.L end
 2141 4387 a 2141 4387
a
SDict begin [/Subtype /Link/Dest (section*.3) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2141 4387 a 32 w Fh(.)45 b(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)
h(.)p 0 TeXcolorgray 93 w(10)p 0 TeXcolorgray 1150 4502
a
SDict begin H.S end
 1150 4502 a Fh(Civil)31 b(Service)f(System.)1991 4502
y
SDict begin 13.6 H.L end
 1991 4502 a 1991 4502 a
SDict begin [/Subtype /Link/Dest (section*.4) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1991 4502 a 40 w Fh(.)46 b(.)g(.)f(.)h(.)g(.)
f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)p 0 TeXcolorgray
93 w(10)p 0 TeXcolorgray 1150 4616 a
SDict begin H.S end
 1150 4616 a Fh(Stabilit)m(y)-8
b(,)32 b(and)e(W)-8 b(ell-b)s(eing.)2158 4616 y
SDict begin 13.6 H.L end
 2158
4616 a 2158 4616 a
SDict begin [/Subtype /Link/Dest (section*.5) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2158 4616 a 85 w Fh(.)46 b(.)g(.)f(.)h(.)g(.)f(.)h
(.)g(.)g(.)f(.)h(.)p 0 TeXcolorgray 93 w(10)p 0 TeXcolorgray
1150 4730 a
SDict begin H.S end
 1150 4730 a Fh(W)-8 b(ell-Field)33 b(System.)1899
4730 y
SDict begin 13.6 H.L end
 1899 4730 a 1899 4730 a
SDict begin [/Subtype /Link/Dest (section*.6) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1899 4730 a 61 w Fh(.)46
b(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)p
0 TeXcolorgray 93 w(10)p 0 TeXcolorgray 877 4844 a
SDict begin H.S end
 877
4844 a Fh(1.3.4.3)118 b(The)30 b(Rise)g(of)h(Imp)s(erial)f(China.)2366
4844 y
SDict begin 13.6 H.L end
 2366 4844 a 2366 4844 a
SDict begin [/Subtype /Link/Dest (subsubsection.1.3.4.3) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2366 4844 a 89 w Fh(.)46
b(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)p 0 TeXcolorgray 93 w(10)p
0 TeXcolorgray 877 4959 a
SDict begin H.S end
 877 4959 a Fh(1.3.4.4)118 b(Core)30
b(Chinese)g(State)i(Characteristics.)2660 4959 y
SDict begin 13.6 H.L end
 2660
4959 a 2660 4959 a
SDict begin [/Subtype /Link/Dest (subsubsection.1.3.4.4) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2660 4959 a 78 w Fh(.)46 b(.)g(.)f(.)h(.)p
0 TeXcolorgray 93 w(11)p 0 TeXcolorgray 0 TeXcolorgray
1712 5187 a(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 656
191 a
SDict begin H.S end
 656 191 a 656 191 a
SDict begin H.R end
 656 191 a 656 191 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 656 191
a 0 TeXcolorgray 664 299 a Fh(4)2428 b Fd(CONTENTS)p
0 TeXcolorgray 1301 555 a
SDict begin H.S end
 1301 555 a Fh(1.3.4.5)117 b(Civil)31
b(Service)g(System.)2515 555 y
SDict begin 13.6 H.L end
 2515 555 a 2515 555 a
SDict begin [/Subtype /Link/Dest (subsubsection.1.3.4.5) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end

2515 555 a 81 w Fh(.)46 b(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f
(.)p 0 TeXcolorgray 93 w(11)p 0 TeXcolorgray 1573 668
a
SDict begin H.S end
 1573 668 a Fh(Merit-Based)32 b(System.)2401 668 y
SDict begin 13.6 H.L end
 2401
668 a 2401 668 a
SDict begin [/Subtype /Link/Dest (section*.7) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2401 668 a 54 w Fh(.)45 b(.)h(.)g(.)f(.)h(.)g(.)f(.)h
(.)g(.)g(.)f(.)h(.)g(.)f(.)p 0 TeXcolorgray 93 w(11)p
0 TeXcolorgray 1010 781 a
SDict begin H.S end
 1010 781 a Fh(1.3.5)106 b(Indian.)1582
781 y
SDict begin 13.6 H.L end
 1582 781 a 1582 781 a
SDict begin [/Subtype /Link/Dest (subsection.1.3.5) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1582 781 a 24 w Fh(.)46 b(.)f(.)h(.)g(.)g
(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)
f(.)h(.)g(.)f(.)p 0 TeXcolorgray 93 w(11)p 0 TeXcolorgray
1301 894 a
SDict begin H.S end
 1301 894 a Fh(1.3.5.1)117 b(P)m(astorialism.)2186
894 y
SDict begin 13.6 H.L end
 2186 894 a 2186 894 a
SDict begin [/Subtype /Link/Dest (subsubsection.1.3.5.1) cvn/H /I/Border
[0 0 1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2186 894 a 56 w Fh(.)46 b(.)g(.)g(.)f(.)h
(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)p
0 TeXcolorgray 93 w(11)p 0 TeXcolorgray 801 1007 a
SDict begin H.S end
 801
1007 a Fh(1.4)94 b(Bo)s(ok:)41 b(A)31 b(History)g(of)f(Europ)s(e)f
(from)h(400)i(to)f(1000.)2822 1007 y
SDict begin 13.6 H.L end
 2822 1007 a 2822
1007 a
SDict begin [/Subtype /Link/Dest (section.1.4) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2822 1007 a 57 w Fh(.)45 b(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)p
0 TeXcolorgray 93 w(11)p 0 TeXcolorgray 801 1120 a
SDict begin H.S end
 801
1120 a Fh(1.5)94 b(Bo)s(ok:)41 b(Empires)30 b(in)g(W)-8
b(orld)31 b(History:)41 b(P)m(o)m(w)m(er,)32 b(and)e(the)g(P)m(olitics)
j(of)d(Di\013erences.)3886 1120 y
SDict begin 13.6 H.L end
 3886 1120 a 3886 1120
a
SDict begin [/Subtype /Link/Dest (section.1.5) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 3886 1120 a 0 TeXcolorgray 52 w Fh(11)p 0 TeXcolorgray
801 1233 a
SDict begin H.S end
 801 1233 a Fh(1.6)94 b(Bo)s(ok:)41 b(Eigh)m(t)31
b(Euro)s(cen)m(tric)g(Historian.)2410 1233 y
SDict begin 13.6 H.L end
 2410 1233
a 2410 1233 a
SDict begin [/Subtype /Link/Dest (section.1.6) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2410 1233 a 45 w Fh(.)45 b(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)
g(.)g(.)f(.)h(.)g(.)f(.)p 0 TeXcolorgray 93 w(11)p 0
TeXcolorgray 801 1346 a
SDict begin H.S end
 801 1346 a Fh(1.7)94 b(Bo)s(ok:)41
b(Civilisation)32 b(Recast.)2052 1346 y
SDict begin 13.6 H.L end
 2052 1346 a 2052
1346 a
SDict begin [/Subtype /Link/Dest (section.1.7) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2052 1346 a 49 w Fh(.)46 b(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h
(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)p 0 TeXcolorgray
93 w(11)p 0 TeXcolorgray 664 1663 a
SDict begin H.S end
 664 1663 a Ff(I)s(I)112
b(Course)38 b(Summary)-9 b(.)1732 1663 y
SDict begin 14 H.L end
 1732 1663 a
1732 1663 a
SDict begin [/Subtype /Link/Dest (part.2) cvn/H /I/Border [0 0 1]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 1732 1663 a 1809 w Ff(13)664 1867 y
SDict begin H.S end
 664 1867
a Fe(2)85 b(T)-9 b(opic)1050 1867 y
SDict begin 13.6 H.L end
 1050 1867 a 1050
1867 a
SDict begin [/Subtype /Link/Dest (chapter.2) cvn/H /I/Border [0 0 1]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 1050 1867 a 2498 w Fe(15)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 232
191 a
SDict begin H.S end
 232 191 a 232 191 a
SDict begin H.R end
 232 191 a 232 191 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 232 191
a 0 TeXcolorgray 0 TeXcolorgray 241 1815 a
SDict begin H.S end
 241 1815 a
241 1815 a
SDict begin 13.6 H.A end
 241 1815 a 241 1815 a
SDict begin [/View [/XYZ H.V]/Dest (part.1) cvn /DEST pdfmark end
 241 1815 a 1479 2023
a Fc(P)-5 b(art)65 b(I)1032 2438 y Fg(Lecture)78 b(Note.)p
0 TeXcolorgray 1712 5187 a Fh(5)p 0 TeXcolorgray eop
end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 656
191 a
SDict begin H.S end
 656 191 a 656 191 a
SDict begin H.R end
 656 191 a 656 191 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 656 191
a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 232
191 a
SDict begin H.S end
 232 191 a 232 191 a
SDict begin H.R end
 232 191 a 232 191 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 232 191
a 0 TeXcolorgray 0 TeXcolorgray 241 464 a
SDict begin H.S end
 241 464 a 241
464 a
SDict begin 13.6 H.A end
 241 464 a 241 464 a
SDict begin [/View [/XYZ H.V]/Dest (chapter.1) cvn /DEST pdfmark end
 241 464 a 717 x Fc(Chapter)64
b(1)241 1599 y Fg(W)-19 b(eek)77 b(1,)g(Da)-6 b(y)77
b(1.)241 2048 y
SDict begin H.S end
 241 2048 a 241 2048 a
SDict begin 13.6 H.A end
 241 2048 a 241
2048 a
SDict begin [/View [/XYZ H.V]/Dest (section*.2) cvn /DEST pdfmark end
 241 2048 a Fe(04)35 b(August)g(2025;)h(Kasira,)f(T)-9
b(eewin,)35 b(P)m(ongphiso)s(ot.)241 2217 y
SDict begin H.S end
 241 2217
a 241 2217 a
SDict begin 13.6 H.A end
 241 2217 a 241 2217 a
SDict begin [/View [/XYZ H.V]/Dest (section.1.1) cvn /DEST pdfmark
end
 241 2217 a 135 x Fb(1.1)135
b(In)l(tro)t(duction)45 b(to)g(the)h(Course.)241 2445
y
SDict begin H.S end
 241 2445 a 241 2445 a
SDict begin 13.6 H.A end
 241 2445 a 241 2445 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.1.1.1) cvn /DEST pdfmark
end
 241 2445
a 120 x Ff(1.1.1)112 b(Wh)m(y)34 b(Study)h(the)f(Dev)m(elopmen)m(t)h
(of)f(the)g(In)m(ternational)h(Sys-)583 2681 y(tem?)p
0 TeXcolorgray 377 2859 a Fa(\210)p 0 TeXcolorgray 46
w Fh(Rationale.)p 0 TeXcolorgray 377 3059 a Fa(\210)p
0 TeXcolorgray 46 w Fh(What)c(is)g(an)f(in)m(ternational)i(system?)634
3216 y(Organisation)f(of)g(p)s(olitical)h(authorit)m(y)f(in)f(a)h
(large)g(scale.)p 0 TeXcolorgray 377 3416 a Fa(\210)p
0 TeXcolorgray 46 w Fh(Key)f(questions)h(on)f("The)g(Order".)634
3572 y(Designed)h(b)m(y)f(whom?)40 b(F)-8 b(or)31 b(whom?)40
b(What)31 b(can)g(w)m(e)g(do)f(in)g(giv)m(en)h(order?)634
3729 y(What)g(ab)s(out)f(ethical)i(consideration?)634
3886 y(History)f(is)f(y)m(our)h(friend.)241 4055 y
SDict begin H.S end
 241
4055 a 241 4055 a
SDict begin 13.6 H.A end
 241 4055 a 241 4055 a
SDict begin [/View [/XYZ H.V]/Dest (section.1.2) cvn /DEST pdfmark
end
 241 4055 a 135
x Fb(1.2)135 b(T)-11 b(ransition,)46 b(and)e(T)-11 b(ransformation)46
b(250-900CE.)241 4307 y
SDict begin H.S end
 241 4307 a 241 4307 a
SDict begin 13.6 H.A end
 241 4307
a 241 4307 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.1.2.1) cvn /DEST pdfmark
end
 241 4307 a 96 x Ff(1.2.1)112 b(In)m(tro)s(duction.)241
4464 y
SDict begin H.S end
 241 4464 a 241 4464 a
SDict begin 13.6 H.A end
 241 4464 a 241 4464 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.1.2.1.1) cvn /DEST
pdfmark end
 241
4464 a 117 x Fe(1.2.1.1)106 b(So)s(cial)35 b(Science)h(T)-9
b(radition.)p 0 TeXcolorgray 377 4758 a Fa(\210)p 0 TeXcolorgray
46 w Fh(So)s(cial)31 b(Science)g(T)-8 b(radition)31 b(Stemming)f(from)g
(History)-8 b(.)p 0 TeXcolorgray 377 4959 a Fa(\210)p
0 TeXcolorgray 46 w Fh(F)g(erdinand)30 b(Braudel's)g(W)-8
b(orld)31 b(System)g(Theory)-8 b(.)p 0 TeXcolorgray 1712
5187 a(7)p 0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 656
191 a
SDict begin H.S end
 656 191 a 656 191 a
SDict begin H.R end
 656 191 a 656 191 a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 656 191
a 0 TeXcolorgray 664 299 a Fh(8)1598 b Fd(CHAPTER)30
b(1.)71 b(WEEK)30 b(1,)h(D)m(A)-8 b(Y)32 b(1.)p 0 TeXcolorgray
0 TeXcolorgray 801 555 a Fa(\210)p 0 TeXcolorgray 45
w Fh(Marxist,)g(and)e(Neo-Marxist)i(Theory)p 0 TeXcolorgray
801 758 a Fa(\210)p 0 TeXcolorgray 45 w Fh(So)s(cial)g(Ev)m(olution.)
664 902 y
SDict begin H.S end
 664 902 a 664 902 a
SDict begin 13.6 H.A end
 664 902 a 664 902 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.1.2.1.2) cvn /DEST
pdfmark end
 664
902 a 117 x Fe(1.2.1.2)106 b(Empirical)35 b(Theory)g(of)g(Kno)m
(wledge:)47 b(P)m(ositivist)36 b(Approac)m(h.)p 0 TeXcolorgray
801 1197 a Fa(\210)p 0 TeXcolorgray 45 w Fh(Empirical)31
b(Theory)f(of)h(Kno)m(wledge.)1057 1355 y(Outside)e(stim)m(uli)h(are)f
(separate)h(from)f(one's)g(capacit)m(y)i(to)f(pro)s(cess)f(them.)p
0 TeXcolorgray 801 1557 a Fa(\210)p 0 TeXcolorgray 45
w Fh(P)m(ositivist)k(Approac)m(h.)1057 1715 y(F)-8 b(acts)33
b(p)s(oin)m(t)d(to)h(an)f(absolute)h(conclusion.)664
1877 y
SDict begin H.S end
 664 1877 a 664 1877 a
SDict begin 13.6 H.A end
 664 1877 a 664 1877 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.1.2.1.3) cvn /DEST
pdfmark end
 664
1877 a 99 x Fe(1.2.1.3)106 b(Sub)6 b(jectivit)m(y)35
b(in)g(History)-9 b(.)p 0 TeXcolorgray 801 2155 a Fa(\210)p
0 TeXcolorgray 45 w Fh(Exploitation)32 b(of)f(Sub)5 b(jectivit)m(y)-8
b(.)1057 2312 y(Can)30 b(b)s(e)g(tak)m(en)i(adv)-5 b(an)m(tage)32
b(of)e(b)m(y)h(an)m(ymore,)g(whether)f(go)s(o)s(d)g(or)g(bad.)1057
2470 y(Can)g(b)s(e)g(in)m(ten)m(tional)j(or)d(unin)m(ten)m(tional.)p
0 TeXcolorgray 801 2672 a Fa(\210)p 0 TeXcolorgray 45
w Fh(Nation)i(States,)f(and)f(Origin)g(Myths.)1057 2830
y(Create)i(origin)f(m)m(yths)f(to)h(foster)g(a)f(shared)g(iden)m(tit)m
(y)-8 b(.)1057 2987 y(Unite)31 b(disparate)g(groups)f(of)g(p)s(eople.)p
0 TeXcolorgray 801 3190 a Fa(\210)p 0 TeXcolorgray 45
w Fh(Demagogues)j(and)d(Historical)i(Reshaping.)1057
3347 y(Reshap)s(e)e(history)h(to)g(serv)m(e)g(their)f(aims.)p
0 TeXcolorgray 801 3550 a Fa(\210)p 0 TeXcolorgray 45
w Fh(Revisionists,)i(and)e(p)s(olitical)i(ob)5 b(jectiv)m(es.)1057
3707 y(Mak)m(e)32 b(c)m(hanges)g(to)f(prev)-5 b(ailing)31
b(history)f(narrativ)m(es.)1057 3865 y(Serv)m(e)h(p)s(olitical)h(ob)5
b(jectiv)m(es.)664 4027 y
SDict begin H.S end
 664 4027 a 664 4027 a
SDict begin 13.6 H.A end
 664 4027
a 664 4027 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.1.2.1.4) cvn /DEST
pdfmark end
 664 4027 a 99 x Fe(1.2.1.4)106 b(P)m(erception,)37
b(and)g(Analysis)f(of)h(History:)49 b(Linear/Progressiv)m(e)1065
4239 y(Thinking.)p 0 TeXcolorgray 801 4418 a Fa(\210)p
0 TeXcolorgray 45 w Fh(Dep)s(endence)31 b(on)f(So)s(cietal)i(Changes,)e
(and)g(Time.)1057 4575 y(Our)22 b(understanding)g(of)h(history)g(is)g
(in\015uenced)f(b)m(y)g(ho)m(w)h(w)m(e)h(view)f(so)s(cietal)891
4688 y(c)m(hanges.)1057 4846 y(Time)37 b(pla)m(ys)g(a)g(crucial)h(role)
f(in)f(shaping)g(our)g(p)s(erception)h(of)g(historical)891
4959 y(ev)m(en)m(ts.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 232
191 a
SDict begin H.S end
 232 191 a 232 191 a
SDict begin H.R end
 232 191 a 232 191 a
SDict begin [/View [/XYZ H.V]/Dest (page.9) cvn /DEST pdfmark end
 232 191
a 0 TeXcolorgray 241 299 a Fd(1.2.)72 b(TRANSITION,)29
b(AND)i(TRANSF)m(ORMA)-8 b(TION)31 b(250-900CE.)471 b
Fh(9)p 0 TeXcolorgray 0 TeXcolorgray 377 555 a Fa(\210)p
0 TeXcolorgray 46 w Fh(Linear/Progressiv)m(e)32 b(Thinking.)634
756 y(So)s(ciet)m(y)f(is)f(seen)f(as)h(mo)m(ving)h(forw)m(ard)e(or)g
(declining)h(in)g(a)f(linear)h(fashion.)634 957 y(Man)m(y)h(so)s(cial)h
(ev)m(olution)g(theories)f(fall)g(under)e(this)h(category)-8
b(.)634 1158 y(Example:)41 b(Marxist)31 b(F)-8 b(ramew)m(ork.)241
1422 y
SDict begin H.S end
 241 1422 a 241 1422 a
SDict begin 13.6 H.A end
 241 1422 a 241 1422 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.1.2.1.5) cvn /DEST
pdfmark end
 241
1422 a 121 x Fe(1.2.1.5)106 b(P)m(erception,)35 b(and)g(Analysis)h(of)f
(History:)47 b(Ripples)35 b(of)g(E\013ects.)p 0 TeXcolorgray
377 1763 a Fa(\210)p 0 TeXcolorgray 46 w Fh(Non-directional,)d(and)e
(Non-linear)h(Changes.)634 1964 y(Changes)f(can)h(recur,)f(and)g
(induced)f(b)m(y)h(di\013eren)m(t)h(factors.)p 0 TeXcolorgray
377 2253 a Fa(\210)p 0 TeXcolorgray 46 w Fh(Absence)g(of)f(a)h
(Starting)g(P)m(oin)m(t.)634 2454 y(Phenomena)f(do)s(esn't)g(alw)m(a)m
(ys)i(ha)m(v)m(e)g(a)f(clear)g(origin,)p 0 TeXcolorgray
377 2743 a Fa(\210)p 0 TeXcolorgray 46 w Fh(Sim)m(ultaneous)g
(Occurrence.)634 2944 y(Man)m(y)g(phenomena)f(can)h(happ)s(en)d
(together.)241 3208 y
SDict begin H.S end
 241 3208 a 241 3208 a
SDict begin 13.6 H.A end
 241 3208
a 241 3208 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.1.2.1.6) cvn /DEST
pdfmark end
 241 3208 a 121 x Fe(1.2.1.6)106 b(P)m(ersp)s(ectiv)m(es,)
36 b(and)e(Argumen)m(ts.)p 0 TeXcolorgray 377 3550 a
Fa(\210)p 0 TeXcolorgray 46 w Fh(Imp)s(ortance)c(of)h(P)m(ersp)s(ectiv)
m(es.)634 3750 y(No)g(correct)h(or)e(ultimate)i(answ)m(ers.)634
3951 y(Argumen)m(t)f(should)e(b)s(e)h(w)m(eigh)m(ted)i(with)e
(evidence.)634 4152 y(Balance)i(heritage,)g(and)e(in)m(tellectual)j
(history)-8 b(.)634 4353 y(Economic)31 b(Measuremen)m(t.)241
4600 y
SDict begin H.S end
 241 4600 a 241 4600 a
SDict begin 13.6 H.A end
 241 4600 a 241 4600 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.1.2.1.7) cvn /DEST
pdfmark end
 241
4600 a 138 x Fe(1.2.1.7)106 b(Euro)s(cen)m(tric)35 b(P)m(ersp)s(ectiv)m
(es.)241 4959 y
SDict begin H.S end
 241 4959 a 0 TeXcolorgray Fh(READ)30
b(THIS)p 0 TeXcolorgray 755 4897 a
SDict begin H.R end
 755 4897 a 755 4959
a
SDict begin [/Subtype /Link/H /I/Border [0 0 1]BorderArrayPatch/Color
[0 .5 .5]/Action <</S/GoToR/F(Books/James\040M.\040Blaut\040-\040Eight-Eurocentric-Historians.pdf)/D[0/Fit]>>
H.B /ANN pdfmark end
 755 4959 a 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 656
191 a
SDict begin H.S end
 656 191 a 656 191 a
SDict begin H.R end
 656 191 a 656 191 a
SDict begin [/View [/XYZ H.V]/Dest (page.10) cvn /DEST pdfmark end
 656 191
a 0 TeXcolorgray 664 299 a Fh(10)1553 b Fd(CHAPTER)30
b(1.)71 b(WEEK)30 b(1,)h(D)m(A)-8 b(Y)32 b(1.)p 0 TeXcolorgray
664 464 a
SDict begin H.S end
 664 464 a 664 464 a
SDict begin 13.6 H.A end
 664 464 a 664 464 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.1.2.1.8) cvn /DEST
pdfmark end
 664
464 a 91 x Fe(1.2.1.8)106 b(T)m(yp)s(es)35 b(of)g(Euro)s(cen)m(trism.)
664 633 y
SDict begin H.S end
 664 633 a 664 633 a
SDict begin 13.6 H.A end
 664 633 a 664 633 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.1.2.1.9) cvn /DEST
pdfmark end
 664
633 a 96 x Fe(1.2.1.9)106 b(Euro-En)m(vironmen)m(talism:)47
b(Da)m(vid)35 b(Landes)664 789 y
SDict begin H.S end
 664 789 a 664 789 a
SDict begin 13.6 H.A end

664 789 a 664 789 a
SDict begin [/View [/XYZ H.V]/Dest (section.1.3) cvn /DEST pdfmark
end
 664 789 a 151 x Fb(1.3)136 b(Ancien)l(t)44
b(T)-11 b(o)45 b(Mo)t(dern.)664 1031 y
SDict begin H.S end
 664 1031 a 664
1031 a
SDict begin 13.6 H.A end
 664 1031 a 664 1031 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.1.3.1) cvn /DEST pdfmark
end
 664 1031 a 117 x Ff(1.3.1)113
b(The)37 b(Axial)h(Age.)664 1228 y
SDict begin H.S end
 664 1228 a 664 1228
a
SDict begin 13.6 H.A end
 664 1228 a 664 1228 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.1.3.2) cvn /DEST pdfmark
end
 664 1228 a 98 x Ff(1.3.2)113
b(Expansionism,)39 b(and)g(P)m(astoralism.)664 1405 y
SDict begin H.S end

664 1405 a 664 1405 a
SDict begin 13.6 H.A end
 664 1405 a 664 1405 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.1.3.3) cvn /DEST pdfmark
end
 664 1405
a 98 x Ff(1.3.3)113 b(Rome.)664 1563 y
SDict begin H.S end
 664 1563 a 664
1563 a
SDict begin 13.6 H.A end
 664 1563 a 664 1563 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.1.3.4) cvn /DEST pdfmark
end
 664 1563 a 117 x Ff(1.3.4)g(China.)664
1740 y
SDict begin H.S end
 664 1740 a 664 1740 a
SDict begin 13.6 H.A end
 664 1740 a 664 1740 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.1.3.4.1) cvn /DEST
pdfmark end
 664
1740 a 114 x Fe(1.3.4.1)106 b(Sino-Sphere)35 b(System.)664
1932 y
SDict begin H.S end
 664 1932 a 664 1932 a
SDict begin 13.6 H.A end
 664 1932 a 664 1932 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.1.3.4.2) cvn /DEST
pdfmark end
 664
1932 a 96 x Fe(1.3.4.2)106 b(The)35 b(Han)f(Dynast)m(y)-9
b(,)36 b(and)e(its)h(Characteristics.)664 2202 y
SDict begin H.S end
 664
2202 a 664 2202 a
SDict begin 13.6 H.A end
 664 2202 a 664 2202 a
SDict begin [/View [/XYZ H.V]/Dest (section*.3) cvn /DEST pdfmark end
 664 2202 a Fe(Cen)m(tralized)h
(Go)m(v)m(ernmen)m(t.)92 b Fh(The)31 b(Han)h(Dynast)m(y)g(had)f(a)h
(cen)m(tralised)h(go)m(v)m(ern-)664 2315 y(men)m(t)43
b(headed)f(b)m(y)g(an)g(emp)s(eror)f(who)h(held)g(absolute)h(p)s(o)m(w)
m(er.)76 b(This)41 b(allo)m(w)m(ed)j(for)664 2428 y(e\013ectiv)m(e)33
b(decision-making,)f(and)e(implemen)m(tation)i(of)e(p)s(olicies.)664
2675 y
SDict begin H.S end
 664 2675 a 664 2675 a
SDict begin 13.6 H.A end
 664 2675 a 664 2675 a
SDict begin [/View [/XYZ H.V]/Dest (section*.4) cvn /DEST pdfmark end
 664
2675 a Fe(Civil)25 b(Service)h(System.)91 b Fh(The)22
b(Han)g(Dynast)m(y)h(had)e(a)i(sophisticated)g(civil)g(service)664
2788 y(system)40 b(based)f(on)h(merito)s(cracy)-8 b(.)70
b(Candidates)40 b(w)m(ere)g(selected)h(through)e(rigorous)664
2901 y(examinations,)33 b(and)d(trained)h(to)g(b)s(ecome)g(o\016cials,)
i(ensuring)d(a)h(highly)g(comp)s(eten)m(t)664 3014 y(bureaucracy)-8
b(.)664 3261 y
SDict begin H.S end
 664 3261 a 664 3261 a
SDict begin 13.6 H.A end
 664 3261 a 664 3261
a
SDict begin [/View [/XYZ H.V]/Dest (section*.5) cvn /DEST pdfmark end
 664 3261 a Fe(Stabilit)m(y)f(,)31 b(and)e(W)-9 b(ell-b)s(eing.)92
b Fh(The)25 b(institutions)h(of)f(the)h(Han)g(Dynast)m(y)-8
b(,)28 b(includ-)664 3374 y(ing)d(its)g(cen)m(tralised)h(go)m(v)m
(ernmen)m(t,)i(and)c(civil)h(service)h(system,)g(allo)m(w)m(ed)g(for)f
(stabilit)m(y)-8 b(,)664 3487 y(and)30 b(promoted)g(the)h(w)m(ell-b)s
(eing)g(of)g(their)f(p)s(eople.)664 3734 y
SDict begin H.S end
 664 3734 a
664 3734 a
SDict begin 13.6 H.A end
 664 3734 a 664 3734 a
SDict begin [/View [/XYZ H.V]/Dest (section*.6) cvn /DEST pdfmark end
 664 3734 a Fe(W)-9 b(ell-Field)35
b(System.)91 b Fh(Equal)31 b(\014eld)f(system)g(w)m(as)h(in)m(v)m(en)m
(ted)g(in)g(384CE:)p 0 TeXcolorgray 801 3927 a Fa(\210)p
0 TeXcolorgray 45 w Fh(China)f(op)s(erates,)h(and)f(equal)h(land)f
(\014eld)g(system.)664 4077 y
SDict begin H.S end
 664 4077 a 664 4077 a
SDict begin 13.6 H.A end
 664
4077 a 664 4077 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.1.3.4.3) cvn /DEST
pdfmark end
 664 4077 a 97 x Fe(1.3.4.3)106 b(The)35
b(Rise)g(of)g(Imp)s(erial)f(China.)664 4348 y Fh(Establishmen)m(t)28
b(of)f(a)g(cultural)h(comm)m(unit)m(y)-8 b(,)29 b(de)e(facto)h(indep)s
(enden)m(t)e(states)i(in)f(com-)664 4461 y(p)s(etition)k(of)g(eac)m(h)g
(other.)p 0 TeXcolorgray 801 4653 a Fa(\210)p 0 TeXcolorgray
45 w Fh(Zhou)f(kings)g(\(771BCE-256BCE\))k(k)m(ept)d(losing)g(p)s(o)m
(w)m(er)g(to)g(o)m(v)m(erlords.)p 0 TeXcolorgray 801
4846 a Fa(\210)p 0 TeXcolorgray 45 w Fh(Spring,)h(and)g(Autumn)f(P)m
(erio)s(d)i(w)m(ould)f(b)s(e)g(the)g(b)s(eginning)g(to)h(an)f(end)g(of)
h(de-)891 4959 y(cen)m(tralised)f(Chinese)e(go)m(v)m(ernance.)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 232
191 a
SDict begin H.S end
 232 191 a 232 191 a
SDict begin H.R end
 232 191 a 232 191 a
SDict begin [/View [/XYZ H.V]/Dest (page.11) cvn /DEST pdfmark end
 232 191
a 0 TeXcolorgray 241 299 a Fd(1.4.)72 b(BOOK:)30 b(A)g(HISTOR)-8
b(Y)30 b(OF)h(EUR)m(OPE)f(FR)m(OM)h(400)g(TO)f(1000.)384
b Fh(11)p 0 TeXcolorgray 241 464 a
SDict begin H.S end
 241 464 a 241 464
a
SDict begin 13.6 H.A end
 241 464 a 241 464 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.1.3.4.4) cvn /DEST
pdfmark end
 241 464 a 91 x Fe(1.3.4.4)106 b(Core)34
b(Chinese)h(State)f(Characteristics.)241 614 y
SDict begin H.S end
 241 614
a 241 614 a
SDict begin 13.6 H.A end
 241 614 a 241 614 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.1.3.4.5) cvn /DEST
pdfmark end
 241 614 a 113 x Fe(1.3.4.5)106
b(Civil)34 b(Service)i(System.)241 898 y
SDict begin H.S end
 241 898 a 241
898 a
SDict begin 13.6 H.A end
 241 898 a 241 898 a
SDict begin [/View [/XYZ H.V]/Dest (section*.7) cvn /DEST pdfmark end
 241 898 a Fe(Merit-Based)f(System.)241
1043 y
SDict begin H.S end
 241 1043 a 241 1043 a
SDict begin 13.6 H.A end
 241 1043 a 241 1043 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.1.3.5) cvn /DEST pdfmark
end
 241
1043 a 99 x Ff(1.3.5)112 b(Indian.)241 1201 y
SDict begin H.S end
 241 1201
a 241 1201 a
SDict begin 13.6 H.A end
 241 1201 a 241 1201 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.1.3.5.1) cvn /DEST
pdfmark end
 241 1201 a 113 x Fe(1.3.5.1)106
b(P)m(astorialism.)241 1372 y
SDict begin H.S end
 241 1372 a 241 1372 a
SDict begin 13.6 H.A end
 241
1372 a 241 1372 a
SDict begin [/View [/XYZ H.V]/Dest (section.1.4) cvn /DEST pdfmark
end
 241 1372 a 150 x Fb(1.4)135 b(Bo)t(ok:)59
b(A)43 b(History)h(of)g(Europ)t(e)f(from)h(400)f(to)h(1000.)241
1725 y
SDict begin H.S end
 241 1725 a 0 TeXcolorgray Fh(Bo)s(ok.)p 0 TeXcolorgray
472 1661 a
SDict begin H.R end
 472 1661 a 472 1725 a
SDict begin [/Subtype /Link/H /I/Border [0 0 1]BorderArrayPatch/Color
[0 .5 .5]/Action <</S/GoToR/F(Books/Empires\040In\040World\040History\040PDF.pdf)/D[0/Fit]>>
H.B /ANN pdfmark end
 472 1725 a 241 1862
a
SDict begin H.S end
 241 1862 a 241 1862 a
SDict begin 13.6 H.A end
 241 1862 a 241 1862 a
SDict begin [/View [/XYZ H.V]/Dest (section.1.5) cvn /DEST pdfmark
end
 241 1862
a 149 x Fb(1.5)135 b(Bo)t(ok:)59 b(Empires)45 b(in)e(W)-11
b(orld)44 b(History:)60 b(P)l(o)l(w)l(er,)46 b(and)547
2160 y(the)f(P)l(olitics)i(of)e(Di\013erences.)241 2250
y
SDict begin H.S end
 241 2250 a 241 2250 a
SDict begin 13.6 H.A end
 241 2250 a 241 2250 a
SDict begin [/View [/XYZ H.V]/Dest (section.1.6) cvn /DEST pdfmark
end
 241 2250
a 150 x Fb(1.6)135 b(Bo)t(ok:)60 b(Eigh)l(t)46 b(Euro)t(cen)l(tric)f
(Historian.)241 2513 y
SDict begin H.S end
 241 2513 a 241 2513 a
SDict begin 13.6 H.A end
 241 2513
a 241 2513 a
SDict begin [/View [/XYZ H.V]/Dest (section.1.7) cvn /DEST pdfmark
end
 241 2513 a 126 x Fb(1.7)135 b(Bo)t(ok:)60
b(Civilisation)48 b(Recast.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 656
191 a
SDict begin H.S end
 656 191 a 656 191 a
SDict begin H.R end
 656 191 a 656 191 a
SDict begin [/View [/XYZ H.V]/Dest (page.12) cvn /DEST pdfmark end
 656 191
a 0 TeXcolorgray 664 299 a Fh(12)1553 b Fd(CHAPTER)30
b(1.)71 b(WEEK)30 b(1,)h(D)m(A)-8 b(Y)32 b(1.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 232
191 a
SDict begin H.S end
 232 191 a 232 191 a
SDict begin H.R end
 232 191 a 232 191 a
SDict begin [/View [/XYZ H.V]/Dest (page.13) cvn /DEST pdfmark end
 232 191
a 0 TeXcolorgray 0 TeXcolorgray 241 1815 a
SDict begin H.S end
 241 1815 a
241 1815 a
SDict begin 13.6 H.A end
 241 1815 a 241 1815 a
SDict begin [/View [/XYZ H.V]/Dest (part.2) cvn /DEST pdfmark end
 241 1815 a 1440 2023
a Fc(P)-5 b(art)65 b(I)5 b(I)833 2438 y Fg(Course)77
b(Summary)-19 b(.)p 0 TeXcolorgray 1690 5187 a Fh(13)p
0 TeXcolorgray eop end
%%Page: 14 14
TeXDict begin 14 13 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 656
191 a
SDict begin H.S end
 656 191 a 656 191 a
SDict begin H.R end
 656 191 a 656 191 a
SDict begin [/View [/XYZ H.V]/Dest (page.14) cvn /DEST pdfmark end
 656 191
a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 15 15
TeXDict begin 15 14 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 232
191 a
SDict begin H.S end
 232 191 a 232 191 a
SDict begin H.R end
 232 191 a 232 191 a
SDict begin [/View [/XYZ H.V]/Dest (page.15) cvn /DEST pdfmark end
 232 191
a 0 TeXcolorgray 0 TeXcolorgray 241 464 a
SDict begin H.S end
 241 464 a 241
464 a
SDict begin 13.6 H.A end
 241 464 a 241 464 a
SDict begin [/View [/XYZ H.V]/Dest (chapter.2) cvn /DEST pdfmark end
 241 464 a 714 x Fc(Chapter)64
b(2)241 1593 y Fg(T)-19 b(opic)p 0 TeXcolorgray 1690
5187 a Fh(15)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
